// SPDX-License-Identifier: MIT
// coded by @eddietree

pragma solidity ^0.8.0;

import 'base64-sol/base64.sol';
import "./IEthKunRenderer.sol";
import "./EthKunData.sol";

contract EthKunRenderer is IEthKunRenderer, EthKunData {

  string[] public bgPaletteColors = [
     'ffffff', 'fdf8db', 'fdeddb', 'fee5e0', 'feddec', 'feddf5', 'f7defe', 'ecddfe', 'dfdbfe', 'e1edfe', 'e4fafe', 'dffef3', 'dffee1', '122026'
  ];

  string[] public bodyColors = [
    '80b0bb','56b7e9','e1624a','85ae36',
    'e7b509','f6b099','85ae36','de953a',
    '56b7e9','dd5bca','80b0bb','56b7e9',
    'e1624a','85ae36','debb45', 'f6b099'
  ];
  
  struct CharacterData {
    uint background;

    uint body;
    uint eyes;
    uint mouth;
  }

  function getSVG(uint256 seed, uint256 level) external view returns (string memory) {
    return _getSVG(seed, level);
  }

  function _getSVG(uint256 seed, uint256 level) internal view returns (string memory) {
    CharacterData memory data = _generateCharacterData(seed);

    // clamp to max
    uint256 levelIndex = level;
    if (levelIndex > levels.length) 
    {
      levelIndex = levels.length;
    }
    levelIndex = levelIndex-1;// map from [1,32]->[0,31]

    string memory image = string(abi.encodePacked(
      '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" shape-rendering="crispEdges" width="512" height="512">'
      '<rect width="100%" height="100%" fill="#', bgPaletteColors[data.background], '"/>',
      //_renderRects(levels[levelIndex], fullPalettes),
      _renderRectsSingleColor(levels[levelIndex], fullPalettes, bodyColors[data.body]),
      //_renderRectsSingleColor(levels[seed % (levels.length)], fullPalettes, bodyColors[data.body]),
      _renderRects(bodies[data.body], fullPalettes),
      _renderRects(mouths[data.mouth], fullPalettes),
      _renderRects(eyes[data.eyes], fullPalettes),
      '</svg>'
    ));

    return image;
  }

  function getUnrevealedSVG(uint256 seed) external view returns (string memory) {
    return _getUnrevealedSVG(seed);
  }

  function _getUnrevealedSVG(uint256) internal view returns (string memory) {
    //CharacterData memory data = _generateCharacterData(seed);

    string memory image = string(abi.encodePacked(
      '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" shape-rendering="crispEdges" width="512" height="512">'
      //'<rect width="100%" height="100%" fill="#', bgPaletteColors[data.background], '"/>',
      '<rect width="100%" height="100%" fill="#122026"/>',
      _renderRects(misc[0], fullPalettes),
      '</svg>'
    ));

    return image;
  }

  function getTraitsMetadata(uint256 seed) external view returns (string memory) {
    return _getTraitsMetadata(seed);
  }

  function _getTraitsMetadata(uint256 seed) internal view returns (string memory) {
    CharacterData memory data = _generateCharacterData(seed);

    // just for backgrounds
    string[15] memory lookup = [
      '0', '1', '2', '3', '4', '5', '6', '7',
      '8', '9', '10', '11', '12', '13', '14'
    ];

    string memory metadata = string(abi.encodePacked(
      '{"trait_type":"Background", "value":"', lookup[data.background+1], '"},',
      '{"trait_type":"Body", "value":"', bodies_traits[data.body], '"},',
      '{"trait_type":"Eyes", "value":"', eyes_traits[data.eyes], '"},',
      '{"trait_type":"Mouth", "value":"', mouths_traits[data.mouth], '"},'
    ));

    return metadata;
  }

  function _renderRects(bytes memory data, string[] memory palette) private pure returns (string memory) {
    string[33] memory lookup = [
      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 
      '10', '11', '12', '13', '14', '15', '16', '17', '18', '19',
      '20', '21', '22', '23', '24', '25', '26', '27', '28', '29',
      '30', '31', '32'
    ];

    string memory rects;
    uint256 drawIndex = 0;

    for (uint256 i = 0; i < data.length; i = i+2) {
      uint8 runLength = uint8(data[i]); // we assume runLength of any non-transparent segment cannot exceed image width (32px)
      uint8 colorIndex = uint8(data[i+1]);

      if (colorIndex != 0) { // transparent
        uint8 x = uint8(drawIndex % 32);
        uint8 y = uint8(drawIndex / 32);
        string memory color = palette[colorIndex];

        rects = string(abi.encodePacked(rects, '<rect width="', lookup[runLength], '" height="1" x="', lookup[x], '" y="', lookup[y], '" fill="#', color, '"/>'));
      }
      drawIndex += runLength;
    }

    return rects;
  }

  function _renderRectsSingleColor(bytes memory data, string[] memory palette, string memory color) private pure returns (string memory) {
    string[33] memory lookup = [
      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 
      '10', '11', '12', '13', '14', '15', '16', '17', '18', '19',
      '20', '21', '22', '23', '24', '25', '26', '27', '28', '29',
      '30', '31', '32'
    ];

    string memory rects;
    uint256 drawIndex = 0;

    for (uint256 i = 0; i < data.length; i = i+2) {
      uint8 runLength = uint8(data[i]); // we assume runLength of any non-transparent segment cannot exceed image width (32px)
      uint8 colorIndex = uint8(data[i+1]);

      if (colorIndex == 0) { // transparent
      }
      else if (colorIndex==1) { // black - replace color

        uint8 x = uint8(drawIndex % 32);
        uint8 y = uint8(drawIndex / 32);

        rects = string(abi.encodePacked(rects, '<rect width="', lookup[runLength], '" height="1" x="', lookup[x], '" y="', lookup[y], '" fill="#', color, '"/>'));
      }
      else { // any othe rcolor
        uint8 x = uint8(drawIndex % 32);
        uint8 y = uint8(drawIndex / 32);

        rects = string(abi.encodePacked(rects, '<rect width="', lookup[runLength], '" height="1" x="', lookup[x], '" y="', lookup[y], '" fill="#', palette[colorIndex], '"/>'));
      }
      drawIndex += runLength;
    }

    return rects;
  }

  function _generateCharacterData(uint256 seed) private view returns (CharacterData memory) {
    return CharacterData({
      background: seed % bgPaletteColors.length,
      
      body: bodies_indices[(seed/2) % bodies_indices.length],
      eyes: eyes_indices[(seed/3) % eyes_indices.length],
      mouth: mouths_indices[(seed/4) % mouths_indices.length]
    });
  }
}

// SPDX-License-Identifier: MIT

pragma solidity >=0.6.0;

/// @title Base64
/// @author Brecht Devos - <[emailÂ protected]>
/// @notice Provides functions for encoding/decoding base64
library Base64 {
    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
    bytes  internal constant TABLE_DECODE = hex"0000000000000000000000000000000000000000000000000000000000000000"
                                            hex"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000"
                                            hex"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000"
                                            hex"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000";

    function encode(bytes memory data) internal pure returns (string memory) {
        if (data.length == 0) return '';

        // load the table into memory
        string memory table = TABLE_ENCODE;

        // multiply by 4/3 rounded up
        uint256 encodedLen = 4 * ((data.length + 2) / 3);

        // add some extra buffer at the end required for the writing
        string memory result = new string(encodedLen + 32);

        assembly {
            // set the actual output length
            mstore(result, encodedLen)

            // prepare the lookup table
            let tablePtr := add(table, 1)

            // input ptr
            let dataPtr := data
            let endPtr := add(dataPtr, mload(data))

            // result ptr, jump over length
            let resultPtr := add(result, 32)

            // run over the input, 3 bytes at a time
            for {} lt(dataPtr, endPtr) {}
            {
                // read 3 bytes
                dataPtr := add(dataPtr, 3)
                let input := mload(dataPtr)

                // write 4 characters
                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))
                resultPtr := add(resultPtr, 1)
                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))
                resultPtr := add(resultPtr, 1)
                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))
                resultPtr := add(resultPtr, 1)
                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))
                resultPtr := add(resultPtr, 1)
            }

            // padding with '='
            switch mod(mload(data), 3)
            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }
            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }
        }

        return result;
    }

    function decode(string memory _data) internal pure returns (bytes memory) {
        bytes memory data = bytes(_data);

        if (data.length == 0) return new bytes(0);
        require(data.length % 4 == 0, "invalid base64 decoder input");

        // load the table into memory
        bytes memory table = TABLE_DECODE;

        // every 4 characters represent 3 bytes
        uint256 decodedLen = (data.length / 4) * 3;

        // add some extra buffer at the end required for the writing
        bytes memory result = new bytes(decodedLen + 32);

        assembly {
            // padding with '='
            let lastBytes := mload(add(data, mload(data)))
            if eq(and(lastBytes, 0xFF), 0x3d) {
                decodedLen := sub(decodedLen, 1)
                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {
                    decodedLen := sub(decodedLen, 1)
                }
            }

            // set the actual output length
            mstore(result, decodedLen)

            // prepare the lookup table
            let tablePtr := add(table, 1)

            // input ptr
            let dataPtr := data
            let endPtr := add(dataPtr, mload(data))

            // result ptr, jump over length
            let resultPtr := add(result, 32)

            // run over the input, 4 characters at a time
            for {} lt(dataPtr, endPtr) {}
            {
               // read 4 characters
               dataPtr := add(dataPtr, 4)
               let input := mload(dataPtr)

               // write 3 bytes
               let output := add(
                   add(
                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),
                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),
                   add(
                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),
                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)
                    )
                )
                mstore(resultPtr, shl(232, output))
                resultPtr := add(resultPtr, 3)
            }
        }

        return result;
    }
}

// SPDX-License-Identifier: MIT
// coded by @eddietree

pragma solidity ^0.8.0;

interface IEthKunRenderer{
  function getSVG(uint256 seed, uint256 level) external view returns (string memory);
  function getUnrevealedSVG(uint256 seed) external view returns (string memory);
  function getTraitsMetadata(uint256 seed) external view returns (string memory);
}

// SPDX-License-Identifier: MIT
// AUTOGENERATED FILE by @eddietree on Mon Sep 05 2022 16:40:03 GMT-0700 (Pacific Daylight Time)

pragma solidity ^0.8.0;

contract EthKunData {
	string[] public fullPalettes = ['ff00ff', '000000', 'ffffff', 'ff0000', '00ff00', '0000ff', '1e2528', 'eadece', 'ea6a6a', '80b0bb', '7991a1', 'e1624a', 'cb4227', '56b7e9', '3a88de', '85ae36', '509434', 'e7b509', 'da7e0d', 'f6b099', 'e37d74', 'de953a', 'c36c2d', 'efc567', 'f9dea3', 'e6b64d', '6ddeee', 'fdd3f6', '9ce5de', '276cd7', 'ed8dde', 'be3ccd', 'e56dd3', 'f7baee', 'dd5bca', '9035b4', 'debb45', 'ac622d', '813c22', '211d1a', '979fa1', '6b757d', 'fefefe'];

	///////////////////////////////////////
	// eyes
	bytes[] public eyes = [
		bytes(hex'ff00ff000f00010604000106'),
		bytes(hex'ff00ee00010604000106'),
		bytes(hex'ff008e00010604000106'),
		bytes(hex'ff002f00010602000106'),
		bytes(hex'ff00ce00020602000206'),
		bytes(hex'ff006e00020602000206'),
		bytes(hex'ff00cd000206040002061900020602000206'),
		bytes(hex'ff008d000206040002061900020602000206'),
		bytes(hex'ff00ad0002060400020619000206020002061a00010604000106'),
		bytes(hex'ff00ec0001060200010602000106020001061700020604000206'),
		bytes(hex'ff00cd0002060400020617000106020001060200010602000106'),
		bytes(hex'ff00ce000106040001061b00010602000106'),
		bytes(hex'ff006e000106040001061b00010602000106'),
		bytes(hex'ff00cf000106020001061b00010604000106'),
		bytes(hex'ff004f000106020001061b00010604000106'),
		bytes(hex'ff00ce000106040001061a00010604000106'),
		bytes(hex'ff006e000106040001061a00010604000106'),
		bytes(hex'ff00cd000206040002061900010604000106'),
		bytes(hex'ff00cd000306020003061900010604000106'),
		bytes(hex'ff00ad0003060200030619000206020002063a00020602000206'),
		bytes(hex'ff006d00020604000206180003060200030619000206020002063a00010604000106'),
		bytes(hex'ff00ac00040602000406140003060207040602070306140001060207010602000106020701061700020604000206'),
		bytes(hex'ff00ac0004060200040614000e0614000406020004061700020604000206'),
		bytes(hex'ff008c00030604000306150005060200050614000c0614000506020005061500030604000306'),
		bytes(hex'ff00cd000206040002061700010608000106'),
		bytes(hex'ff008c00020620000206030002061b00060617000206030006061b000206'),
		bytes(hex'ff00ec00010608000106'),
		bytes(hex'ff00ad000206040002061700020601070106020002060107010616000406020004061700020604000206'),
		bytes(hex'ff004d000206040002061700020601070106020002060107010616000406020004061700020604000206'),
		bytes(hex'ff00ad0003060200030638000107010601070200010701060107'),
		bytes(hex'ff004d0003060200030638000107010601070200010701060107'),
		bytes(hex'ff00ad00020604000206190002060200020619000107010601070200010701060107'),
		bytes(hex'ff004d00020604000206190002060200020619000107010601070200010701060107'),
		bytes(hex'ff00ad00020604000206170003070106020001060307160001070206010702000107020601071700020704000207'),
		bytes(hex'ff00ad000207040002071700040702000407160002070106010702000107010602071700020704000207'),
		bytes(hex'ff00cd00020704000207180001070106040001060107'),
		bytes(hex'ff006d00020704000207180001070106040001060107'),
		bytes(hex'ff00cd00030602000306180002070106020001060207180002070106020001060207'),
		bytes(hex'ff008d00030602000306180002070106020001060207180002070106020001060207'),
		bytes(hex'ff00d30002071700040602000107020601071d000207'),
		bytes(hex'ff00ee0001060400010619000208040002081800020804000208'),
		bytes(hex'ff00ac00040602000406140003060207040602070306140001060207010602000106020701061700020604000206160001080100010806000108010001083500010808000108'),
		bytes(hex'ff00ac0003070400030715000107030601070200010703060107140001070306010702000107030601071500030704000307'),
		bytes(hex'ff008e000206020002061900010606000106390001070106020001070106'),
		bytes(hex'ff00ad00030602000306180001070106010702000107010601071900010704000107'),
		bytes(hex'ff00cd00080617000a061800010604000106'),
		bytes(hex'ff004f000106020001061a0002060400020618000207040002071700020702060200020702061600020702060200020702061700020704000207'),
		bytes(hex'ff006d000306020003061700020602070200020702061600010601070206020002060107010615000208010702060200020601070208130004080600040812000408060004081300020808000208'),
		bytes(hex'ff00cd000206040002061700020606000206'),
		bytes(hex'ff008e00020602000206190003060200030618000206040002061a00010602000106')
	];

	string[] public eyes_traits = [
		'Vacant Low',
		'Vacant Medium',
		'Vacant High',
		'Vacant Too High',
		'Sleepy',
		'Sleepy High',
		'Angry',
		'Angry High',
		'Hero',
		'Somber',
		'Happy',
		'Slant',
		'Slant High',
		'Inverse',
		'Inverse High',
		'Cartoon',
		'Cartoon High',
		'Pensive',
		'Judgmental',
		'Dad',
		'Mad Dad',
		'Glasses',
		'Sunglasses',
		'Beeg Sunglasses',
		'Tired',
		'Pirate',
		'Dumb',
		'Animal',
		'Animal High',
		'Unsettling',
		'Unsettling High',
		'Villain',
		'Villain High',
		'Froggish',
		'Wide',
		'Beady',
		'Beady High',
		'JRPG',
		'JRPG High',
		'Wink',
		'Shy',
		'Nerd',
		'Stoned',
		'Sus',
		'Grump',
		'Unibrow',
		'Terrified',
		'Blushing',
		'Ambivalent',
		'Trustworthy'
	];

	uint8[] public eyes_indices = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49];

	///////////////////////////////////////
	// mouths
	bytes[] public mouths = [
		bytes(hex'ff00ff0051000206'),
		bytes(hex'ff00ff0091000206'),
		bytes(hex'ff00ff0050000406'),
		bytes(hex'ff00ff0090000406'),
		bytes(hex'ff00ff0050000106020001061d000206'),
		bytes(hex'ff00ff00510002061d00010602000106'),
		bytes(hex'ff00ff004e0001060600010619000606'),
		bytes(hex'ff00ff004f0006061900010606000106'),
		bytes(hex'ff00ff006e0001060100010601000106010001061a000106010001060100010601000106'),
		bytes(hex'ff00ff00510002061e000206'),
		bytes(hex'ff00ff00910002061e000206'),
		bytes(hex'ff00ff00510002061d0004061c000406'),
		bytes(hex'ff00ff00500004061c0004061d000206'),
		bytes(hex'ff00ff00500004061b0006061a00020602000206'),
		bytes(hex'ff00ff004f000206020002061a0006061b000406'),
		bytes(hex'ff00ff004f0006061b000406'),
		bytes(hex'ff00ff004e0001060100040601000106180008061900020602000206'),
		bytes(hex'ff00ff00500004061b000106040701061a0006061b000406'),
		bytes(hex'ff00ff00530001061c0004061f000106'),
		bytes(hex'ff00ff0050000106020001061c0004061c00010602000106'),
		bytes(hex'ff00ff00540001061a0006061f000106'),
		bytes(hex'ff00ff004f000106040001061a0006061a00010604000106'),
		bytes(hex'ff00ff004f000106050001061a0005061b00010603000106'),
		bytes(hex'ff00ff004f00060619000106030701060207010619000606'),
		bytes(hex'ff00ff00510002061c000206020002061900010606000106'),
		bytes(hex'ff00ff005000010620000206'),
		bytes(hex'ff00ff00530001061d000206'),
		bytes(hex'ff00ff00720001061e000106'),
		bytes(hex'ff00ff00510002061d000106020001061c00010602000106'),
		bytes(hex'ff00ff006d000a06'),
		bytes(hex'ff00ff00510002061c00020602000206'),
		bytes(hex'ff00ff004f00020602000206190001060200020602000106'),
		bytes(hex'ff00ff006c0003060600030617000606'),
		bytes(hex'ff00ff0050000106020001061c000106020001061d000206'),
		bytes(hex'ff00ff006e00010602000206020001061900020602000206'),
		bytes(hex'ff00ff00520003061a00030601070106010701061c000306'),
		bytes(hex'ff00ff006e00020601070206010702061a000406'),
		bytes(hex'ff00ff0070000206010701061d000206'),
		bytes(hex'ff00ff00510002061d0004061c0004061d000206'),
		bytes(hex'ff00ff00300004061b0006061a0006061a0006061b000406'),
		bytes(hex'ff00ff0071000106'),
		bytes(hex'ff00ff0073000106'),
		bytes(hex'ff00ff006f00010620000206'),
		bytes(hex'ff00ff00740002061d000106'),
		bytes(hex'ff00ff00510002061d000106020001061c000106020001061d000206'),
		bytes(hex'ff00ff00700004061b000606'),
		bytes(hex'ff00ff006f00010620000206'),
		bytes(hex'ff00ff004d0001060800010616000a06'),
		bytes(hex'ff00ff0052000106200001061e000106200001061e000106'),
		bytes(hex'ff00ff006f000106040701061b0004061d000207')
	];

	string[] public mouths_traits = [
		'Smol',
		'Smol Low',
		'Normal',
		'Normal Low',
		'Smile',
		'Frown',
		'Wide Smile',
		'Wide Frown',
		'Cursed',
		'Oh',
		'Oh Low',
		'Yell',
		'Announce',
		'Shriek',
		'Address',
		'Naive',
		'Gentleman',
		'Teethy Yell',
		'Acorn',
		'Two Acorns',
		'Chewing',
		'Chomping',
		'Bubblecheeks',
		'Tyson',
		'Froggish',
		'Smirk',
		'Antismirk',
		'Hmm',
		'Unhappy',
		'Mostly Mouth',
		'Chewing Lip',
		'Wavy',
		'Burger',
		'Cute',
		'Cat',
		'Half Shell',
		'Vamp',
		'Scamp',
		'O',
		'OOO',
		'Peck',
		'Dot',
		'Side Smirk',
		'Determined',
		'Outline',
		'Regret',
		'Too Happy',
		'Bracket',
		'Smooch',
		'Car Salesman'
	];

	uint8[] public mouths_indices = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49];

	///////////////////////////////////////
	// bodies
	bytes[] public bodies = [
		bytes(hex'6f000109010a1e000109010a1d000209020a1c000209020a1b000309030a1a000309030a19000409040a18000409040a17000509050a16000509050a15000609060a14000609060a13000709070a12000709070a11000809080a10000809080a0f000909090a10000709070a1000020902000509050a0200020a0f00030902000309030a0200030a1100040902000109010a0200040a130005090200050a15000509050a17000409040a19000309030a1b000209020a1d000109010a'),
		bytes(hex'6f00010d010e1e00010d010e1d00020d020e1c00020d020e1b00030d030e1a00030d030e1900040d040e1800040d040e1700050d050e1600050d050e1500060d060e1400060d060e1300070d070e1200070d070e1100080d080e1000080d080e0f00090d090e1000070d070e1000020d0200050d050e0200020e0f00030d0200030d030e0200030e1100040d0200010d010e0200040e1300050d0200050e1500050d050e1700040d040e1900030d030e1b00020d020e1d00010d010e'),
		bytes(hex'6f00010b010c1e00010b010c1d00020b020c1c00020b020c1b00030b030c1a00030b030c1900040b040c1800040b040c1700050b050c1600050b050c1500060b060c1400060b060c1300070b070c1200070b070c1100080b080c1000080b080c0f00090b090c1000070b070c1000020b0200050b050c0200020c0f00030b0200030b030c0200030c1100040b0200010b010c0200040c1300050b0200050c1500050b050c1700040b040c1900030b030c1b00020b020c1d00010b010c'),
		bytes(hex'6f00010f01101e00010f01101d00020f02101c00020f02101b00030f03101a00030f03101900040f04101800040f04101700050f05101600050f05101500060f06101400060f06101300070f07101200070f07101100080f08101000080f08100f00090f09101000070f07101000020f0200050f0510020002100f00030f0200030f0310020003101100040f0200010f0110020004101300050f020005101500050f05101700040f04101900030f03101b00020f02101d00010f0110'),
		bytes(hex'6f00011101121e00011101121d00021102121c00021102121b00031103121a00031103121900041104121800041104121700051105121600051105121500061106121400061106121300071107121200071107121100081108121000081108120f000911091210000711071210000211020005110512020002120f00031102000311031202000312110004110200011101120200041213000511020005121500051105121700041104121900031103121b00021102121d0001110112'),
		bytes(hex'6f00011301141e00011301141d00021302141c00021302141b00031303141a00031303141900041304141800041304141700051305141600051305141500061306141400061306141300071307141200071307141100081308141000081308140f000913091410000713071410000213020005130514020002140f00031302000313031402000314110004130200011301140200041413000513020005141500051305141700041304141900031303141b00021302141d0001130114'),
		bytes(hex'6f00010f010b1e00010f010b1d00020f020b1c00020f020b1b00030f030b1a00030f030b1900040f040b1800040f040b1700050f050b1600050f050b1500060f060b1400060f060b1300070f070b1200070f070b1100080f080b1000080f080b0f00090f090b1000070f070b1000020e0200050f050b020002150f00030e0200030f030b020003151100040e0200010f010b020004151300050e020005151500050e05151700040e04151900030e03151b00020e02151d00010e0115'),
		bytes(hex'6f0002161e0002161d0001160117011501161c0001160117011501161b0001160217021501161a0001160117021801150116190001160117011502180117011501161800011601170215021701190116170001160117011903150319011616000116011702190315021901161500011601170215021903150219011614000116011703150219031501190116130001160117051502190315011901161200011601170615021903150116110001160117081502190315011610000116011709150219021501160f00011601170b150219021501160e0002160c15021902160e000116011702160a150216011901160f000116021702160615021602190116110001160115021702160215021602190115011613000116021502170216021902150116150001160315021703150116170001160615011619000116041501161b000116021501161d000216'),
		bytes(hex'6f00011a010e1e00011a010e1d00010d011b020e1c00010d011c020e1b00020d011c030e1a00020d011a030e1900030d011a040e1800030d011a040e1700050d050e1600050d050e1500060d060e1400060d060e1300050d010e010d021d050e1200030d030e010d041d030e1100020d050e010d061d020e1000070e010d081d0f00080e010d091d1000060e010d071d1000020e0200040e010d051d0200021d0f00030e0200020e010d031d0200031d1100040e0200010d011d0200041d1300050e0200051d1500040e010d051d1700030e010d041d1900020e010d031d1b00010e010d021d1d00010d011d'),
		bytes(hex'6f00011e011f1e00011e011f1d000120011b021f1c0001200121021f1b0002200121031f1a000220011e031f19000320011e041f180001220220011e041f170003220220051f160004220120051f150005220120061f140005220120061f13000522011f01200223051f12000322031f01200423031f11000222051f01200623021f1000071f012008230f00081f012009231000061f01200723100002220200041f012005230200021f0f0003220200021f012003230200031f110004220200012001230200041f130005220200051f150004220120051f170003220120041f190002220120031f1b0001220120021f1d000120011f'),
		bytes(hex'6f000109010a1e000109010a1d000209020a1c000209020a1b000309030a1a000309030a19000409040a18000409040a17000509050a16000509050a15000609060a14000809040a13000509040a0209030a12000309080a0209010a110002090c0a02091000100a0f00120a10000e0a1000020902000a0a0200020a0f0003090200060a0200030a110004090200020a0200040a130005090200050a15000509050a17000409040a19000309030a1b000209020a1d000109010a'),
		bytes(hex'6f00010d010e1e00010d010e1d00020d020e1c00020d020e1b00030d030e1a00030d030e1900040d040e1800040d040e1700050d050e1600050d050e1500060d060e1400080d040e1300050d040e020d030e1200030d080e020d010e1100020d0c0e020d1000100e0f00120e10000e0e1000020d02000a0e0200020e0f00030d0200060e0200030e1100040d0200020e0200040e1300050d0200050e1500050d050e1700040d040e1900030d030e1b00020d020e1d00010d010e'),
		bytes(hex'6f00010b010c1e00010b010c1d00020b020c1c00020b020c1b00030b030c1a00030b030c1900040b040c1800040b040c1700050b050c1600050b050c1500060b060c1400080b040c1300050b040c020b030c1200030b080c020b010c1100020b0c0c020b1000100c0f00120c10000e0c1000020b02000a0c0200020c0f00030b0200060c0200030c1100040b0200020c0200040c1300050b0200050c1500050b050c1700040b040c1900030b030c1b00020b020c1d00010b010c'),
		bytes(hex'6f00010f01101e00010f01101d00020f02101c00020f02101b00030f03101a00030f03101900040f04101800040f04101700050f05101600050f05101500060f06101400080f04101300050f0410020f03101200030f0810020f01101100020f0c10020f100010100f00121010000e101000020f02000a10020002100f00030f02000610020003101100040f02000210020004101300050f020005101500050f05101700040f04101900030f03101b00020f02101d00010f0110'),
		bytes(hex'6f00012401151e00012401151d00022402151c00022402151b00032403151a00032403151900042404151800042404151700052405151600052405151500062406151400082404151300052404150224031512000324081502240115110002240c150224100010150f00121510000e151000022402000a15020002150f000324020006150200031511000424020002150200041513000524020005151500052405151700042404151900032403151b00022402151d0001240115'),
		bytes(hex'6f00011301141e00011301141d00021302141c00021302141b00031303141a00031303141900041304141800041304141700051305141600051305141500061306141400081304141300051304140213031412000313081402130114110002130c140213100010140f00121410000e141000021302000a14020002140f000313020006140200031411000413020002140200041413000513020005141500051305141700041304141900031303141b00021302141d0001130114')
	];

	string[] public bodies_traits = [
		'Dull',
		'Cool',
		'Hot',
		'Envy',
		'Sand',
		'Flesh',
		'Web2',
		'Gold',
		'Sapphire',
		'Amethyst',
		'Duller',
		'Cooler',
		'Hotter',
		'Jealous',
		'Sandier',
		'Fleshier'
	];

	uint8[] public bodies_indices = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15];

	///////////////////////////////////////
	// levels
	bytes[] public levels = [
		bytes(hex'2e0004011c000101020001011b000101040001011a000101040001011900010106000101180001010600010117000101080001011600010108000101150001010a000101140001010a000101130001010c000101120001010c000101110001010e000101100001010e0001010f000101100001010e000101100001010d000101120001010c000101120001010b000101140001010a000101140001010a000101140001010b000101120001010d000101100001010f0001010e000101110001010c000101130001010a0001011500010108000101170001010600010119000101040001011b000101020001011d000201'),
		bytes(hex'0e0004011b0006011a00020102000201190002010400020118000201040002011700020106000201160002010600020115000201080002011400020108000201130002010a000201120002010a000201110002010c000201100002010c0002010f0002010e0002010e0002010e0002010d000201100002010c000201100002010b000201120002010a0002011200020109000201140002010800020114000201080002011400020109000201120002010b000201100002010d0002010e0002010f0002010c000201110002010a00020113000201080002011500020106000201170002010400020119000201020002011b000401'),
		bytes(hex'0d000601190008011800030102000301170003010400030116000301040003011500030106000301140003010600030113000301080003011200030108000301110003010a000301100003010a0003010f0003010c0003010e0003010c0003010d0003010e0003010c0003010e0003010b000301100003010a0003011000030109000301120003010800030112000301070003011400030106000301140003010600030114000301070003011200030109000301100003010b0003010e0003010d0003010c0003010f0003010a000301110003010800030113000301060003011500030104000301170003010200030119000601'),
		bytes(hex'0c00080117000a0116000401020004011500040104000401140004010400040113000401060004011200040106000401110004010800040110000401080004010f0004010a0004010e0004010a0004010d0004010c0004010c0004010c0004010b0004010e0004010a0004010e000401090004011000040108000401100004010700040112000401060004011200040105000401140004010400040114000401040004011400040105000401120004010700040110000401090004010e0004010b0004010c0004010d0004010a0004010f0004010800040111000401060004011300040104000401150004010200040117000801'),
		bytes(hex'0b000a0115000c01140005010200050113000501040005011200050104000501110005010600050110000501060005010f000501080005010e000501080005010d0005010a0005010c0005010a0005010b0005010c0005010a0005010c000501090005010e000501080005010e000501070005011000050106000501100005010500050112000501040005011200050103000501140005010200050114000501020005011400050103000501120005010500050110000501070005010e000501090005010c0005010b0005010a0005010d000501080005010f000501060005011100050104000501130005010200050115000a01'),
		bytes(hex'0a000c0113000e011200060102000601110006010400060110000601040006010f000601060006010e000601060006010d000601080006010c000601080006010b0006010a0006010a0006010a000601090006010c000601080006010c000601070006010e000601060006010e00060105000601100006010400060110000601030006011200060102000601120006010100060114000601060114000601060114000601000101000601120006010300060110000601050006010e000601070006010c000601090006010a0006010b000601080006010d000601060006010f00060104000601110006010200060113000c01'),
		bytes(hex'09000e011100100110000701020007010f000701040007010e000701040007010d000701060007010c000701060007010b000701080007010a00070108000701090007010a000701080007010a000701070007010c000701060007010c000701050007010e000701040007010e00070103000701100007010200070110000701010007011200070107011200070106011400060106011400060106011400060107011200070100010100070110000701030007010e000701050007010c000701070007010a00070109000701080007010b000701060007010d000701040007010f0007010200070111000e01'),
		bytes(hex'080010010f0012010e000801020008010d000801040008010c000801040008010b000801060008010a0008010600080109000801080008010800080108000801070008010a000801060008010a000801050008010c000801040008010c000801030008010e000801020008010e00080101000801100008010801100008010701120007010701120007010601140006010601140006010601140006010701120007010801100008010001010008010e000801030008010c000801050008010a000801070008010800080109000801060008010b000801040008010d000801020008010f001001'),
		bytes(hex'070012010d0014010c000901020009010b000901040009010a000901040009010900090106000901080009010600090107000901080009010600090108000901050009010a000901040009010a000901030009010c000901020009010c000901010009010e00090109010e00090108011000080108011000080107011200070107011200070106011400060106011400060106011400060107011200070108011000080109010e0009010001010009010c000901030009010a0009010500090108000901070009010600090109000901040009010b000901020009010d001201'),
		bytes(hex'060014010b0016010a000a0102000a0109000a0104000a0108000a0104000a0107000a0106000a0106000a0106000a0105000a0108000a0104000a0108000a0103000a010a000a0102000a010a000a0101000a010c000a010a010c000a0109010e00090109010e00090108011000080108011000080107011200070107011200070106011400060106011400060106011400060107011200070108011000080109010e0009010a010c000a01000101000a010a000a0103000a0108000a0105000a0106000a0107000a0104000a0109000a0102000a010b001401'),
		bytes(hex'050016010900180108000b0102000b0107000b0104000b0106000b0104000b0105000b0106000b0104000b0106000b0103000b0108000b0102000b0108000b0101000b010a000b010b010a000b010a010c000a010a010c000a0109010e00090109010e00090108011000080108011000080107011200070107011200070106011400060106011400060106011400060107011200070108011000080109010e0009010a010c000a010b010a000b01000101000b0108000b0103000b0106000b0105000b0104000b0107000b0102000b0109001601'),
		bytes(hex'0400180107001a0106000c0102000c0105000c0104000c0104000c0104000c0103000c0106000c0102000c0106000c0101000c0108000c010c0108000c010b010a000b010b010a000b010a010c000a010a010c000a0109010e00090109010e00090108011000080108011000080107011200070107011200070106011400060106011400060106011400060107011200070108011000080109010e0009010a010c000a010b010a000b010c0108000c01000101000c0106000c0103000c0104000c0105000c0102000c0107001801'),
		bytes(hex'03001a0105001c0104000d0102000d0103000d0104000d0102000d0104000d0101000d0106000d010d0106000d010c0108000c010c0108000c010b010a000b010b010a000b010a010c000a010a010c000a0109010e00090109010e00090108011000080108011000080107011200070107011200070106011400060106011400060106011400060107011200070108011000080109010e0009010a010c000a010b010a000b010c0108000c010d0106000d01000101000d0104000d0103000d0102000d0105001a01'),
		bytes(hex'02001c0103001e0102000e0102000e0101000e0104000e010e0104000e010d0106000d010d0106000d010c0108000c010c0108000c010b010a000b010b010a000b010a010c000a010a010c000a0109010e00090109010e00090108011000080108011000080107011200070107011200070106011400060106011400060106011400060107011200070108011000080109010e0009010a010c000a010b010a000b010c0108000c010d0106000d010e0104000e01000101000e0102000e0103001c01'),
		bytes(hex'01001e01010020010f0102000f010e0104000e010e0104000e010d0106000d010d0106000d010c0108000c010c0108000c010b010a000b010b010a000b010a010c000a010a010c000a0109010e00090109010e00090108011000080108011000080107011200070107011200070106011400060106011400060106011400060107011200070108011000080109010e0009010a010c000a010b010a000b010c0108000c010d0106000d010e0104000e010f0102000f01000101001e01'),
		bytes(hex'200120010f0102000f010e0104000e010e0104000e010d0106000d010d0106000d010c0108000c010c0108000c010b010a000b010b010a000b010a010c000a010a010c000a0109010e00090109010e00090108011000080108011000080107011200070107011200070106011400060106011400060106011400060107011200070108011000080109010e0009010a010c000a010b010a000b010c0108000c010d0106000d010e0104000e010f0102000f0120010001'),
		bytes(hex'0e0104000e010d010100040101000d010d01010001010200010101000d010c01010001010400010101000c010c01010001010400010101000c010b01010001010600010101000b010b01010001010600010101000b010a01010001010800010101000a010a01010001010800010101000a010901010001010a000101010009010901010001010a000101010009010801010001010c000101010008010801010001010c000101010008010701010001010e000101010007010701010001010e000101010007010601010001011000010101000601060101000101100001010100060105010100010112000101010005010501010001011200010101000501040101000101140001010100040104010100010114000101010004010401010001011400010101000401050101000101120001010100050106010100010110000101010006010701010001010e000101010007010801010001010c000101010008010901010001010a000101010009010a01010001010800010101000a010b01010001010600010101000b010c01010001010400010101000c010d01010001010200010101000d010e010100020101000e010001'),
		bytes(hex'0c01010001010400010101000c010b0101000101010004010100010101000b010b010100010101000101020001010100010101000b010a010100010101000101040001010100010101000a010a010100010101000101040001010100010101000a0109010100010101000101060001010100010101000901090101000101010001010600010101000101010009010801010001010100010108000101010001010100080108010100010101000101080001010100010101000801070101000101010001010a0001010100010101000701070101000101010001010a0001010100010101000701060101000101010001010c0001010100010101000601060101000101010001010c0001010100010101000601050101000101010001010e0001010100010101000501050101000101010001010e0001010100010101000501040101000101010001011000010101000101010004010401010001010100010110000101010001010100040103010100010101000101120001010100010101000301030101000101010001011200010101000101010003010201010001010100010114000101010001010100020102010100010101000101140001010100010101000201020101000101010001011400010101000101010002010301010001010100010112000101010001010100030104010100010101000101100001010100010101000401050101000101010001010e0001010100010101000501060101000101010001010c0001010100010101000601070101000101010001010a000101010001010100070108010100010101000101080001010100010101000801090101000101010001010600010101000101010009010a010100010101000101040001010100010101000a010b010100010101000101020001010100010101000b010c0101000101010002010100010101000c010001'),
		bytes(hex'0a010100010101000101040001010100010101000aa00010101000101010001010100050105010100010101000101010001010a00010101000101010001010100050104010100010101000101010001010c00010101000101010001010100040104010100010101000101010001010c00010101000101010001010100040103010100010101000101010001010e00010101000101010001010100030103010100010101000101010001010ee00010101000101010001010100030104010100010101000101010001010c00010101000101010001010100040105010100010101000101010001010a0001010100010101000101010005010601010001010100010101000101080001010100010101000101010006010701010001010100010101000101060001010100010101000101010007010801010001010100010101000101040001010100010101000101010008010901010001010100010101000101020001010100010101000101010009010a01010001010100010101000201010001010100010101000a010001'),
		bytes(hex'05010300030103000401030003010300050105010200040102000601020004010200050104010300030103000201020002010300030103000401040102000401020002010400020102000401020004010301030003010300020104000201030003010300030103010200040102000201060002010200040102000301020103000301030002010600020103000301030002010201020004010200020108000201020004010200020101010300030103000201080002010300030103000101010102000401020002010a0002010200040102000101000103000301030002010a0002010300030105000401020002010c0002010200040104000301030002010c0002010300030103000401020002010e0002010200040102000301030002010e0002010300030101000401020002011000020102000401030103000201100002010300030103010200020112000201020003010201030002011200020103000201020102000201140002010200020101010300020114000201030001010101030002011400020103000101020103000201120002010300020103010300020110000201030003010401030002010e00020103000401000101000401030002010c0002010300040103000401030002010a000201030004010500040103000201080002010300040103000101030004010300020106000201030004010300010102010300040103000201040002010300040103000201030103000401030002010200020104000301030003010401030004010300040104000301030004010001'),
		bytes(hex'080103000a0103000801070104000a010400070107010300050102000501030007010601040004010400040104000601060103000501040005010300060105010400040106000401040005010501030005010600050103000501040104000401080004010400040104010300050108000501030004010301040004010a000401040003010301030005010a000501030003010201040004010c000401040002010201030005010c000501030002010101040004010e000401040001010101030005010e000501030001010001040004011000040107000501100005010600040112000401050005011200050104000401140004010300050114000501020005011400050103000501120005010500050110000501070005010e000501090005010c00050105000101050005010a000501050001010201050005010800050105000201030105000501060005010500030104010500050104000501050004010501050005010200050105000501060105000a01050006010001'),
		bytes(hex'05010400010104000401040001010400050105010300010104000601040001010300050104010400010104000201020002010400010104000401040103000101040002010400020104000101030004010301040001010400020104000201040001010400030103010300010104000201060002010400010103000301020104000101040002010600020104000101040002010201030001010400020108000201040001010300020101010400010104000201080002010400010104000101010103000101040002010a0002010400010103000101000104000101040002010a0002010400010107000101040002010c0002010400010106000101040002010c0002010400010105000101040002010e0002010400010104000101040002010e0002010400010103000101040002011000020104000101020001010400020110000201040001010100010104000201120002010400010101010400020112000201040001010001040002011400020108000201140002010800020114000201090002011200020105000101050002011000020105000101000101000101050002010e0002010500010103000101050002010c0002010500010105000101050002010a000201050001010700010105000201080002010500010104000101040001010500020106000201050001010400010102010400010105000201040002010500010104000201030104000101050002010200020105000101040003010401040001010500040105000101040004010001'),
		bytes(hex'06000101120001010c00010107000401070001010800020101000a0102000a01010002010400010102000901040009010200010106000a0104000a0106000b0106000b0102000d0106000d01000102000a0108000a0104000a0108000a01040009010a000901040009010a000901040008010c000801040008010c000801040007010e000701040007010e000701040006011000060104000601100006010400050112000501040005011200050104000401140004010400040114000401040004011400040104000501120005010400060110000601040007010e00070102000a010c000a010001020009010a00090106000801080008010600010102000801060008010200010104000201010009010400090101000201080001010600020102000201060001010c0001010700040107000101'),
		bytes(hex'06000101120001010c00010107000401070001010800020101000a0102000a01010002010400010102000101070001010400010107000101020001010600020101000701040007010100020106000301010007010600070101000301020003010200080106000801020003010001020001010100080108000801010001010400010101000801080008010100010104000101010007010a0007010100010104000101010007010a0007010100010104000101010006010c0006010100010104000101010006010c0006010100010104000101010005010e0005010100010104000101010005010e0005010100010104000101010004011000040101000101040001010100040110000401010001010400010101000301120003010100010104000101010003011200030101000101040001010100020114000201010001010400010101000201140002010100010104000101010002011400020101000101040001010100030112000301010001010400010101000401100004010100010104000101010005010e0005010100010102000301020005010c00050102000301000102000301010005010a000501010003010600020101000501080005010100020106000101020001010500020106000201050001010200010104000201010009010400090101000201080001010600020102000201060001010c0001010700040107000101'),
		bytes(hex'06000101120001010c00010107000401070001010800020101000a0102000a01010002010400010102000101070001010400010107000101020001010600020101000701040007010100020106000301010007010600070101000301020003010200080106000801020003010001020001010100080108000801010001010400010101000801080008010100010104000101010007010a0007010100010104000101010007010a0007010100010104000101010006010c0006010100010104000101010006010c0006010100010104000101010005010e0005010100010104000101010005010e0005010100010104000101010004011000040101000101040001010100040110000401010001010400010101000301120003010100010104000101010003011200030101000101040001010100020114000201010001010400010101000201140002010100010104000101010002011400020101000101040001010100030112000301010001010400010101000401100004010100010104000101010005010e0005010100010102000301020005010c00050102000301000102000301010005010a000501010003010600020101000501080005010100020106000101020001010500020106000201050001010200010104000201010009010400090101000201080001010600020102000201060001010c0001010700040107000101'),
		bytes(hex'06000101120001010700030102000101070004010700010102000301020001010100010101000a0102000a0101000101010001010200030101000101070001010400010107000101010003010600010101000701040007010100010107000401010006010600060101000401020003010300070106000701030003010001020001010100080108000801010001010400010101000801080008010100010104000101010007010a0007010100010104000101010007010a0007010100010104000101010006010c0006010100010104000101010006010c0006010100010104000101010005010e0005010100010104000101010005010e0005010100010104000101010004011000040101000101040001010100040110000401010001010400010101000301120003010100010104000101010003011200030101000101040001010100020114000201010001010400010101000201140002010100010104000101010002011400020101000101040001010100030112000301010001010400010101000401100004010100010104000101010005010e0005010100010102000301030004010c00040103000301000102000401010004010a0004010100040107000101010005010800050101000101060003010100010105000201060002010500010101000301020001010100010101000901040009010100010101000101020003010200010106000201020002010600010102000301070001010700040107000101'),
		bytes(hex'0500010114000101060003010100010108000401080001010100030102000101010001010200090102000901020001010100010102000501010001010500010104000101050001010100050104000101010001010100070104000701010001010100010103000201010003010100060106000601010003010100020100010200010103000701060007010300010104000a0108000a010400010101000801080008010100010104000101010007010a0007010100010104000101010007010a0007010100010104000101010006010c0006010100010104000101010006010c0006010100010104000101010005010e0005010100010104000101010005010e00050101000101040001010100040110000401010001010400010101000401100004010100010104000101010003011200030101000101040001010100030112000301010001010400010101000201140002010100010104000101010002011400020101000101040001010100020114000201010001010400010101000301120003010100010104000101010004011000040101000101040007010e00070104000101030004010c000401030001010200020101000301010004010a00040101000301010002010001030001010100010101000501080005010100010101000101040005010100010103000201060002010300010101000501020001010100010102000801040008010200010101000101020003010100010107000201020002010700010101000301060001010800040108000101'),
		bytes(hex'05000101140001010600030101000101080004010800010101000301020001010100010102000101060002010200020106000101020001010100010102000501010001010500010104000101050001010100050104000101010001010100070104000701010001010100010103000201010003010100060106000601010003010100020100010200010103000701060007010300010105000901080009010700080108000801080007010a000701080007010a000701080006010c000601080006010c000601080005010e000501080005010e000501080004011000040108000401100004010800030112000301080003011200030108000201140002010800020114000201080002011400020108000301120003010800040110000401070006010e00060105000101030004010c000401030001010200020101000301010004010a000401010003010100020100010300010101000101010005010800050101000101010001010400050101000101030002010600020103000101010005010200010101000101020001010500020104000201050001010200010101000101020003010100010107000201020002010700010101000301060001010800040108000101'),
		bytes(hex'05000101140001010600030101000101020001010200010102000401020001010200010102000101010003010200010101000101020001010200020102000201020002010200020102000101020001010100010102000501010001010500010104000101050001010100050104000101010001010100070104000701010001010100010103000201010003010100060106000601010003010100020100010200010103000701060007010300010105000901080009010400010102000801080008010200010102000101020007010a0007010200010103000101010007010a0007010100010104000101010006010c0006010100010103000101020006010c0006010200010102000101020005010e0005010200010103000101010005010e0005010100010104000101010004011000040101000101030001010200040110000401020001010200010102000301120003010200010103000101010003011200030101000101040001010100020114000201010001010300010102000201140002010200010102000101020002011400020102000101030001010100030112000301010001010600040110000401070006010e00060105000101030004010c000401030001010200020101000301010004010a00040101000301010002010001030001010100010101000501080005010100010101000101040005010100010103000201060002010300010101000501020001010100010102000101020001010200020104000201020001010200010102000101010001010200030101000101020001010400020102000201040001010200010101000301060001010800040108000101'),
		bytes(hex'0225012603250126072501270201012707250126032501260225022501260325012606250127040101270625012603250126022500250226032501260127012604250127020102000201012704250126012701260325022600260525012701010127012602250127020104000201012702250126012701010127052504250126012702010327030104000301032702010127012604250225012602270801060008010227012602250025022601270a0106000a01012702260026022501260127080108000801012701260225032501260127070108000701012701260325002501260325012706010a0006010127032501260026012501260225012706010a0006010127022501260125012501260225012705010c0005010127022501260125002501260325012705010c000501012703250126002603250126012704010e00040101270126032503250126012704010e000401012701260325032501270401100004010127032503250127040110000401012703250325012601270201120002010127012603250325012601270201120002010127012603250025012603250127010114000101012703250126002601250126022501270101140001010127022501260125012501260225012701011400010101270225012601250025012603250127020112000201012703250126002603250126012703011000030101270126032502250126012705010e00050101270126022500250226012707010c00070101270226002602250126022706010a000601022701260225042501260127020103270101080001010327020101270126042505250127010101270126022501270101060001010127022501260127010101270525002502260325012601270126042501270101040001010127042501260127012603250226002602250126032501260625012701010200010101270625012603250126022502250126032501260725012702010127072501260325012602250025'),
		bytes(hex'0228012903280129072801270201012707280129032801290228022801290328012906280127040101270628012903280129022800280229032801290127012904280127020102000201012704280129012701290328022900290528012701010127012902280127020104000201012702280129012701010127052804280129012702010327030104000301032702010127012904280228012902270801060008010227012902280028022901270a0106000a01012702290029022801290127080108000801012701290228032801290127070108000701012701290328002801290328012706010a0006010127032801290029012801290228012706010a0006010127022801290128012801290228012705010c0005010127022801290128002801290328012705010c000501012703280129002903280129012704010e00040101270129032803280129012704010e000401012701290328032801270401100004010127032803280127040110000401012703280328012901270201120002010127012903280328012901270201120002010127012903280028012903280127010114000101012703280129002901280129022801270101140001010127022801290128012801290228012701011400010101270228012901280028012903280127020112000201012703280129002903280129012703011000030101270129032802280129012705010e00050101270129022800280229012707010c00070101270229002902280129022706010a000601022701290228042801290127020103270101080001010327020101270129042805280127010101270129022801270101060001010127022801290127010101270528002802290328012901270129042801270101040001010127042801290127012903280229002902280129032801290628012701010200010101270628012903280129022802280129032801290728012702010127072801290328012902280028'),
		bytes(hex'0215011603150116071501270201012707150116031501160215021501160315011606150127040101270615011603150116021500150216031501160127011604150127020102000201012704150116012701160315021600160515012701010127011602150127020104000201012702150116012701010127051504150116012702010327030104000301032702010127011604150215011602270801060008010227011602150015021601270a0106000a01012702160016021501160127080108000801012701160215031501160127070108000701012701160315001501160315012706010a0006010127031501160016011501160215012706010a0006010127021501160115011501160215012705010c0005010127021501160115001501160315012705010c000501012703150116001603150116012704010e00040101270116031503150116012704010e000401012701160315031501270401100004010127031503150127040110000401012703150315011601270201120002010127011603150315011601270201120002010127011603150015011603150127010114000101012703150116001601150116021501270101140001010127021501160115011501160215012701011400010101270215011601150015011603150127020112000201012703150116001603150116012703011000030101270116031502150116012705010e00050101270116021500150216012707010c00070101270216001602150116022706010a000601022701160215041501160127020103270101080001010327020101270116041505150127010101270116021501270101060001010127021501160127010101270515001502160315011601270116041501270101040001010127041501160127011603150216001602150116031501160615012701010200010101270615011603150116021502150116031501160715012702010127071501160315011602150015')
	];

	uint8[] public levels_indices = [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];

	///////////////////////////////////////
	// misc
	bytes[] public misc = [
		bytes(hex'6f00022a1e00022a1d00042a1c00042a1b00062a1a00062a1900082a1800082a17000a2a1600032a0400032a1500032a0600032a1400032a0200022a0200032a1300072a0300042a1200062a0300052a1100072a0200072a1000102a0f00082a0200082a1000062a0200062a1000022a02000a2a0200022a0f00032a0200062a0200032a1100042a0200022a0200042a1300052a0200052a15000a2a1700082a1900062a1b00042a1d00022a')
	];
}