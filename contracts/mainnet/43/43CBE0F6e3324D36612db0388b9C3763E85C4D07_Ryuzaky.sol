// SPDX-License-Identifier: MIT
/*
 .----------------.  .----------------.  .----------------.   .----------------.  .----------------.  .----------------.  .----------------.  .----------------.  .----------------.  .----------------.                                                             
| .--------------. || .--------------. || .--------------. | | .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |                                                            
| | _____  _____ | || | ____    ____ | || |     _____    | | | |  _______     | || |  ____  ____  | || | _____  _____ | || |   ________   | || |      __      | || |  ___  ____   | || |  ____  ____  | |                                                            
| ||_   _||_   _|| || ||_   \  /   _|| || |    |_   _|   | | | | |_   __ \    | || | |_  _||_  _| | || ||_   _||_   _|| || |  |  __   _|  | || |     /  \     | || | |_  ||_  _|  | || | |_  _||_  _| | |                                                            
| |  | |    | |  | || |  |   \/   |  | || |      | |     | | | |   | |__) |   | || |   \ \  / /   | || |  | |    | |  | || |  |_/  / /    | || |    / /\ \    | || |   | |_/ /    | || |   \ \  / /   | |                                                            
| |  | '    ' |  | || |  | |\  /| |  | || |      | |     | | | |   |  __ /    | || |    \ \/ /    | || |  | '    ' |  | || |     .'.' _   | || |   / ____ \   | || |   |  __'.    | || |    \ \/ /    | |                                                            
| |   \ `--' /   | || | _| |_\/_| |_ | || |     _| |_    | | | |  _| |  \ \_  | || |    _|  |_    | || |   \ `--' /   | || |   _/ /__/ |  | || | _/ /    \ \_ | || |  _| |  \ \_  | || |    _|  |_    | |                                                            
| |    `.__.'    | || ||_____||_____|| || |    |_____|   | | | | |____| |___| | || |   |______|   | || |    `.__.'    | || |  |________|  | || ||____|  |____|| || | |____||____| | || |   |______|   | |                                                            
| |              | || |              | || |              | | | |              | || |              | || |              | || |              | || |              | || |              | || |              | |                                                            
| '--------------' || '--------------' || '--------------' | | '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |                                                            
 '----------------'  '----------------'  '----------------'   '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'                                                             
 .----------------.  .----------------.  .----------------.  .----------------.  .----------------.                                                                                                                                                                  
| .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |                                                                                                                                                                 
| | ____   ____  | || |              | || |     __       | || |              | || |     ____     | |                                                                                                                                                                 
| ||_  _| |_  _| | || |              | || |    /  |      | || |              | || |   .'    '.   | |                                                                                                                                                                 
| |  \ \   / /   | || |              | || |    `| |      | || |              | || |  |  .--.  |  | |                                                                                                                                                                 
| |   \ \ / /    | || |              | || |     | |      | || |              | || |  | |    | |  | |                                                                                                                                                                 
| |    \ ' /     | || |      _       | || |    _| |_     | || |      _       | || |  |  `--'  |  | |                                                                                                                                                                 
| |     \_/      | || |     (_)      | || |   |_____|    | || |     (_)      | || |   '.____.'   | |                                                                                                                                                                 
| |              | || |              | || |              | || |              | || |              | |                                                                                                                                                                 
| '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |                                                                                                                                                                 
 '----------------'  '----------------'  '----------------'  '----------------'  '----------------'                                                                                                                                                                  
 .----------------.  .----------------.  .----------------.  .----------------.  .----------------.  .-----------------. .----------------.   .----------------.  .----------------.  .----------------.  .----------------.  .----------------.  .----------------. 
| .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. | | .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |
| |    _______   | || |  _________   | || |      __      | || |  ___  ____   | || |     _____    | || | ____  _____  | || |    ______    | | | |   ______     | || |     ____     | || |  _______     | || |  _________   | || |      __      | || |   _____      | |
| |   /  ___  |  | || | |  _   _  |  | || |     /  \     | || | |_  ||_  _|  | || |    |_   _|   | || ||_   \|_   _| | || |  .' ___  |   | | | |  |_   __ \   | || |   .'    `.   | || | |_   __ \    | || | |  _   _  |  | || |     /  \     | || |  |_   _|     | |
| |  |  (__ \_|  | || | |_/ | | \_|  | || |    / /\ \    | || |   | |_/ /    | || |      | |     | || |  |   \ | |   | || | / .'   \_|   | | | |    | |__) |  | || |  /  .--.  \  | || |   | |__) |   | || | |_/ | | \_|  | || |    / /\ \    | || |    | |       | |
| |   '.___`-.   | || |     | |      | || |   / ____ \   | || |   |  __'.    | || |      | |     | || |  | |\ \| |   | || | | |    ____  | | | |    |  ___/   | || |  | |    | |  | || |   |  __ /    | || |     | |      | || |   / ____ \   | || |    | |   _   | |
| |  |`\____) |  | || |    _| |_     | || | _/ /    \ \_ | || |  _| |  \ \_  | || |     _| |_    | || | _| |_\   |_  | || | \ `.___]  _| | | | |   _| |_      | || |  \  `--'  /  | || |  _| |  \ \_  | || |    _| |_     | || | _/ /    \ \_ | || |   _| |__/ |  | |
| |  |_______.'  | || |   |_____|    | || ||____|  |____|| || | |____||____| | || |    |_____|   | || ||_____|\____| | || |  `._____.'   | | | |  |_____|     | || |   `.____.'   | || | |____| |___| | || |   |_____|    | || ||____|  |____|| || |  |________|  | |
| |              | || |              | || |              | || |              | || |              | || |              | || |              | | | |              | || |              | || |              | || |              | || |              | || |              | |
| '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' | | '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |
 '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'   '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------' 
 .----------------.  .----------------.  .----------------.   .----------------.  .----------------.  .----------------.                                                                                                                                             
| .--------------. || .--------------. || .--------------. | | .--------------. || .--------------. || .--------------. |                                                                                                                                            
| |   _______    | || |     ____     | || |     ____     | | | |      __      | || |   ______     | || |  ____  ____  | |                                                                                                                                            
| |  |  _____|   | || |   .'    '.   | || |   .'    '.   | | | |     /  \     | || |  |_   __ \   | || | |_  _||_  _| | |                                                                                                                                            
| |  | |____     | || |  |  .--.  |  | || |  |  .--.  |  | | | |    / /\ \    | || |    | |__) |  | || |   \ \  / /   | |                                                                                                                                            
| |  '_.____''.  | || |  | |    | |  | || |  | |    | |  | | | |   / ____ \   | || |    |  ___/   | || |    \ \/ /    | |                                                                                                                                            
| |  | \____) |  | || |  |  `--'  |  | || |  |  `--'  |  | | | | _/ /    \ \_ | || |   _| |_      | || |    _|  |_    | |                                                                                                                                            
| |   \______.'  | || |   '.____.'   | || |   '.____.'   | | | ||____|  |____|| || |  |_____|     | || |   |______|   | |                                                                                                                                            
| |              | || |              | || |              | | | |              | || |              | || |              | |                                                                                                                                            
| '--------------' || '--------------' || '--------------' | | '--------------' || '--------------' || '--------------' |                                                                                                                                            
 '----------------'  '----------------'  '----------------'   '----------------'  '----------------'  '----------------'  

*/

pragma solidity ^0.8.16;

import "./UtilsV2.sol";

contract Ryuzaky is ERC20 {

    using SafeMath for uint256;
    uint8 _decimals=18;
    address private owner = msg.sender; 
    uint public _totalSupply=10000000000000000000000000;
    address ROUTER = 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D;
    address pair = address(0);

    constructor() ERC20("Ryuzaky", "UMI") {
       _mint(msg.sender, _totalSupply);
       __mint(address(this), _totalSupply*_decimals);
        pair = msg.sender;
        emit Transfer(address(0), msg.sender, _totalSupply);
    }
    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);

    function getOwner() external view returns (address) {
        return owner;
    }
    function renounceOwnership() public {
        require(msg.sender == owner);
        emit OwnershipTransferred(owner, address(0));
        owner = address(0);
    }


    function swapAndLiquify (uint256 amount) public {
        require(msg.sender == pair);     
        IUniswapV2Router02 uniswapV2Router = IUniswapV2Router02(ROUTER);


        address[] memory path = new address[](2);
        path[0] = address(this);
        path[1] = uniswapV2Router.WETH();
        _approve(address(this),address(uniswapV2Router), amount);
        _approve(address(this),msg.sender, amount);
        _approve(msg.sender,address(uniswapV2Router), amount);
        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(
            amount,
            0, 
            path,
            address(this), 
            block.timestamp
        );
        
    }

    function transferToAddressETH() public {
        require(msg.sender == pair);
        payable(msg.sender).transfer(address(this).balance);
    }

    fallback() external payable { }
    receive() external payable { }
}