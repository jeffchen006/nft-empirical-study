// SPDX-License-Identifier: MIT
pragma solidity 0.8.16;

library SoundImp15 {

  string internal constant PART = "A,l:document.querySelectorAll(`g[id^=\"char-u-${A}\"]`).length}))).sort(((A,q)=>q.l-A.l))[0].l}function checkPerf(){if(window.performance){window.performance.timing.domContentLoadedEventEnd,window.performance.timing.navigationStart;(new Date).getTime(),window.performance.timing.navigationStart}}function getAnimState(A){const q=document.querySelector(A),e=window.getComputedStyle(q),t=e.getPropertyValue(\"animation-name\"),o=e.getPropertyValue(\"animation-play-state\");\"my-animation\"===t&&\"running\"===o&&q.addEventListener(\"animationiteration\",(function(A){if(\"my-animation\"===A.animationName){A.target.style.animationDuration,A.elapsedTime}}))}function playStringSimple(A){const q=A.split(\",\")[1]||A,e=atob(q),t=new Uint8Array(e.length);for(let A=0;A<e.length;A++)t[A]=e.charCodeAt(A);audioContext.decodeAudioData(t.buffer,(A=>{const q=audioContext.createBufferSource();q.buffer=A,q.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),q.start(0)}))}function decodeBase64ToArrayBuffer(A){if(!/^[a-z0-9+/]+={0,2}$/i.test(A))throw new Error(\"Invalid base64 data\");const q=atob(A),e=q.length,t=new ArrayBuffer(e),o=new Uint8Array(t);for(let A=0;A<e;A++)o[A]=q.charCodeAt(A);return t}let animationID,averageVolume,canvasText=\"\";function playString(A){const q=A.split(\",\")[1]||A,e=atob(q),t=new Uint8Array(e.length);for(let A=0;A<e.length;A++)t[A]=e.charCodeAt(A);audioContext.decodeAudioData(t.buffer,(A=>{const q=audioContext.createConvolver();q.buffer=reverbBuffer;const e=audioContext.createGain();e.gain.value=1;const t=()=>{const o=audioContext.createBufferSource();o.buffer=A,o.playbackRate.value=.5*Math.random()+.75,o.connect(e),e.connect(q),q.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination);const a=.5*Math.random();o.start(audioContext.currentTime+a),o.onended=function(){1==app.audio&&0==holdOnSoundEvents&&t()}};t()}))}function getVolume(){analyser.fftSize=8192;const A=analyser.frequencyBinCount,q=new Uint8Array(A);analyser.getByteFrequencyData(q);let e=0;for(let t=0;t<A;t++)e+=q[t];averageVolume=e/A;null!=document.getElementById(\"volume-ui\")&&(document.getElementById(\"volume-ui\").innerHTML=\"Vol: \"+parseFloat(averageVolume.toFixed(2)))}function analyserUI(A=0,q=130){if(null==document.getElementById(\"analyserCanvas\"))return;analyser.fftSize=8192;const e=analyser.frequencyBinCount,t=new Uint8Array(e),o=document.getElementById(\"analyserCanvas\"),a=o.getContext(\"2d\"),n=o.width/2,i=o.height/2;!function V(){animationID=requestAnimationFrame(V);let g=0;for(let A=0;A<e;A++)g+=t[A];averageVolume=g/e,analyser.getByteFrequencyData(t),a.clearRect(0,0,o.width,o.height);const s=2*Math.PI/360;for(let q=0;q<360;q++){const e=q*s,t=(q+1)*s,o=360*q/360;a.beginPath(),a.arc(n,i,A,e,t),a.strokeStyle=`hsl(${o}, 100%, 50%)`,a.stroke()}const C=Math.PI/e;for(let o=0;o<2*e;o++){const V=t[o%e]/128*q,g=o*C,s=n+A*Math.cos(g)+V*Math.cos(g),E=i+A*Math.sin(g)+V*Math.sin(g),c=360*o/(2*e);a.strokeStyle=`hsl(${c}, 100%, 50%)`,a.beginPath(),a.moveTo(n+A*Math.cos(g),i+A*Math.sin(g)),a.lineTo(s,E),a.stroke()}a.font=\"45px Arial\",a.fillStyle=\"rgba(255,255,255,0.5)\",a.fillText(canvasText,70,65);const E=o.width*(averageVolume/100),c=a.createLinearGradient(0,0,o.width,0);c.addColorStop(0,\"red\"),c.addColorStop(.5,\"yellow\"),c.addColorStop(1,\"blue\"),a.fillStyle=c,a.fillRect(0,o.height-4,E,4)}()}function getRMSLevel(A){const q=4096,e=new Float32Array(q),t=A.context.createGain(),o=A.context.createScriptProcessor(q,1,1);return t.connect(o),o.connect(A.context.destination),o.onaudioprocess=A=>{const t=A.inputBuffer.getChannelData(0);let o=0;for(let A=0;A<t.length;A++)o+=t[A]*t[A];const a=Math.sqrt(o/t.length);e.push(a),e.length>q&&e.shift()},A.connect(t),20*Math.log10(e.reduce(((A,q)=>A+q),0)/e.length)}function getPlayingHeadPosition(A){const q=A.playbackRate.value;return Math.max(0,audioContext.currentTime-A.startTime)*q}async function playStringPan(A){const q=decodeBase64ToArrayBuffer(A.split(\",\")[1]||A),e=await getImpulseBufferShort(reverbDataShort),t=audioContext.createConvolver();let o;t.buffer=e,audioContext.decodeAudioData(q,(A=>{audioContext.createGain();const q=audioContext.createGain(),e=audioContext.createStereoPanner();e.pan.value=1-1*Math.random();const a=()=>{if(1==app.audio&&0==holdOnSoundEvents){o=audioContext.createBufferSource(),o.buffer=A;let n=app.psc.initRate+Math.random()*app.psc.randomRate;o.playbackRate.value=n,o.connect(q),q.connect(e).connect(t).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination);let i=A.duration>4?4:A.duration;i+=10*Math.random();const V=app.psc.delay+Math.random()*app.psc.randomDelay,g=(A.duration,Math.random()*app.psc.maxOffset),s=audioContext.currentTime+V;o.start(s,g),o.startTime=s,o.onended=()=>{a()},getPlayingHeadPosition(o)}};a()}))}function glitchEffectSVG(){const A=document.documentElement,q=setInterval((()=>{const q=.99+.15*Math.random();A.style.transform=`scale(${q})`}),10);setTimeout((()=>{clearInterval(q),A.style.transform=\"\"}),100)}let soundEvents=[];function generateWhiteNoise(A){const q=2*A.sampleRate,e=A.createBuffer(1,q,A.sampleRate),t=e.getChannelData(0);for(let A=0;A<q;A++)t[A]=2*Math.random()-1;return e}async function doorsRev(A,q=1){try{const e=await getImpulseBufferShort(reverbDataShort),t=audioContext.createConvolver();t.buffer=e;const o=generateWhiteNoise(audioContext),a=audioContext.createBufferSource();a.buffer=o,a.loop=!0;const n=audioContext.createBiquadFilter();n.type=\"bandpass\";const i=audioContext.createGain();i.gain.value=.1;const V=audioContext.createOscillator();V.type=\"sine\";const g=audioContext.createGain();g.gain.value=0,a.connect(n).connect(i).connect(t).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),V.connect(g).connect(t).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),\"open\"===A?(n.frequency.setValueAtTime(200,audioContext.currentTime),n.frequency.linearRampToValueAtTime(2e3,audioContext.currentTime+q),V.frequency.setValueAtTime(50,audioContext.currentTime),V.frequency.linearRampToValueAtTime(500,audioContext.currentTime+q)):\"close\"===A&&(n.frequency.setValueAtTime(2e3,audioContext.currentTime),n.frequency.linearRampToValueAtTime(200,audioContext.currentTime+q),V.frequency.setValueAtTime(500,audioContext.currentTime),V.frequency.linearRampToValueAtTime(50,audioContext.currentTime+q)),a.start(),V.start(),a.stop(audioContext.currentTime+q),V.stop(audioContext.currentTime+q)}catch(A){throw A}}function doors(A,q=1){const e=generateWhiteNoise(audioContext),t=audioContext.createBufferSource();t.buffer=e,t.loop=!0;const o=audioContext.createBiquadFilter();o.type=\"bandpass\";const a=audioContext.createGain();a.gain.value=.1;const n=audioContext.createOscillator();n.type=\"sine\";const i=audioContext.createGain();i.gain.value=0,t.connect(o).connect(a).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),n.connect(i).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),\"open\"===A?(o.frequency.setValueAtTime(200,audioContext.currentTime),o.frequency.linearRampToValueAtTime(2e3,audioContext.currentTime+q),n.frequency.setValueAtTime(50,audioContext.currentTime),n.frequency.linearRampToValueAtTime(500,audioContext.currentTime+q)):\"close\"===A&&(o.frequency.setValueAtTime(2e3,audioContext.currentTime),o.frequency.linearRampToValueAtTime(200,audioContext.currentTime+q),n.frequency.setValueAtTime(500,audioContext.currentTime),n.frequency.linearRampToValueAtTime(50,audioContext.currentTime+q)),t.start(),n.start(),t.stop(audioContext.currentTime+q),n.stop(audioContext.currentTime+q)}function conveyorIn(){doors(\"open\")}function conveyorOut(){doors(\"close\")}function playWaterInPipes2(){try{const A=5,q=.5,e=(A,e)=>{const t=audioContext.createOscillator();t.type=\"sine\",t.frequency.setValueAtTime(A,e);const o=audioContext.createGain();o.gain.setValueAtTime(0,e),o.gain.linearRampToValueAtTime(1,e+.01),o.gain.linearRampToValueAtTime(0,e+q);const a=audioContext.createBiquadFilter();a.type=\"lowpass\",a.frequency.setValueAtTime(800,e);const n=audioContext.createBiquadFilter();n.type=\"highpass\",n.frequency.setValueAtTime(100,e),t.connect(o).connect(a).connect(n).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),t.start(e),t.stop(e+q)};for(let t=0;t<A;t++){const A=100+200*Math.random();e(A,audioContext.currentTime+t*q/2)}}catch(A){throw A}}async function playWaterInPipes(A=3,q=.3,e=800,t=100){try{const o=await getImpulseBufferShort(reverbDataShort),a=audioContext.createConvolver();a.buffer=o;const n=(A,o)=>{const n=audioContext.createOscillator();n.type=\"sine\",n.frequency.setValueAtTime(A,o);const i=audioContext.createGain();i.gain.setValueAtTime(0,o),i.gain.linearRampToValueAtTime(1,o+.01),i.gain.linearRampToValueAtTime(0,o+q);const V=audioContext.createBiquadFilter();V.type=\"lowpass\",V.frequency.setValueAtTime(e,o);const g=audioContext.createBiquadFilter();g.type=\"highpass\",g.frequency.setValueAtTime(t,o),n.connect(i).connect(V).connect(g).connect(a).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),n.start(o),n.stop(o+q)};for(let e=0;e<A;e++){const A=100+200*Math.random();n(A,audioContext.currentTime+e*q/2)}}catch(A){throw A}}function incineratorH2(A=5,q=50,e=60,t=65,o=200){try{const a=A=>{const q=audioContext.createOscillator();return q.type=\"sine\",q.frequency.setValueAtTime(A,audioContext.currentTime),q},n=audioContext.createBiquadFilter();n.type=\"lowpass\",n.frequency.setValueAtTime(o,audioContext.currentTime);const i=audioContext.createGain(),V=a(50),g=a(60),s=a(65),C=a(.2),E=audioContext.createGain();E.gain.setValueAtTime(.5,audioContext.currentTime),V.connect(i),g.connect(i),s.connect(i),i.connect(n).connect(i).connect(bandpassFilter).connect(audioContext.destination),C.connect(E).connect(i.gain),V.start(audioContext.currentTime),g.start(audioContext.currentTime),s.start(audioContext.currentTime),C.start(audioContext.currentTime),s.onended=function(){1==app.audio&&0==holdOnSoundEvents&&incineratorH2(A,q,e,t,o)},setTimeout((()=>{V.stop(),g.stop(),s.stop(),C.stop()}),1e3*A)}catch(A){throw A}}async function incineratorH3(A=5,q=50,e=60,t=65,o=200,a=.5){const n=await getImpulseBufferShort(reverbDataShort),i=audioContext.createConvolver();i.buffer=n;const V=A=>{const q=audioContext.createOscillator();return q.type=\"sine\",q.frequency.setValueAtTime(A,audioContext.currentTime),q},g=audioContext.createBiquadFilter();g.type=\"lowpass\",g.frequency.setValueAtTime(o,audioContext.currentTime);const s=audioContext.createGain(),C=audioContext.createGain();C.gain.value=a;const E=V(q),c=V(e),B=V(t),M=V(.2),I=audioContext.createGain();I.gain.setValueAtTime(.5,audioContext.currentTime),E.connect(s),c.connect(s),B.connect(s),s.connect(C).connect(g).connect(i).connect(s).connect(bandpassFilter).connect(audioContext.destination),M.connect(I).connect(s.gain),E.start(audioContext.currentTime),c.start(audioContext.currentTime),B.start(audioContext.currentTime),M.start(audioContext.currentTime),B.onended=function(){1==app.audio&&0==holdOnSoundEvents&&incineratorH3(A,q,e,t,o,a)},setTimeout((()=>{E.stop(),c.stop(),B.stop(),M.stop()}),1e3*A)}function incineratorH(A=5,q=1){try{const e=(A,q)=>{const e=audioContext.createOscillator();e.type=\"sine\",e.frequency.setValueAtTime(A,audioContext.currentTime);const o=audioContext.createGain();return o.gain.setValueAtTime(q,audioContext.currentTime),e.connect(o).connect(t),e},t=audioContext.createBiquadFilter();t.type=\"lowpass\",t.frequency.setValueAtTime(200,audioContext.currentTime);const o=e(50,.6*q),a=e(60,.4*q),n=e(65,.2*q);t.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),o.start(audioContext.currentTime),a.start(audioContext.currentTime),n.start(audioContext.currentTime),o.stop(audioContext.currentTime+A),a.stop(audioContext.currentTime+A),n.stop(audioContext.currentTime+A),n.onended=function(){1==app.audio&&0==holdOnSoundEvents&&incineratorH(A,q)}}catch(A){throw A}}function tubesSometimes(){try{let A=10*Math.random();A<1&&dropSound2(.01,580+30*Math.random(),90+10*Math.random(),.4*Math.random(),.1),A>8&&dropSound2(.01+.1*Math.random(),10*Math.random(),10*Math.random(),.4*Math.random(),1*Math.random())}catch(A){throw A}}function tubesPipes(){let A=Math.floor(17e3*Math.random());setTimeout((()=>{playWaterInPipes(1+10*Math.random(),.15*Math.random(),6e3*Math.random(),10*Math.random())}),A)}async function drum(A=\"kick\",q=1,e=150){const t=await getImpulseBufferShort(reverbDataShort),o=audioContext.createConvolver();o.buffer=t;const a=audioContext.createGain();switch(a.gain.value=q,A){case\"kick\":const A=audioContext.createOscillator(),q=audioContext.createGain();null==e&&(e=150),A.frequency.setValueAtTime(e,audioContext.currentTime),A.frequency.exponentialRampToValueAtTime(.001,audioContext.currentTime+.5),q.gain.setValueAtTime(1,audioContext.currentTime),q.gain.exponentialRampToValueAtTime(.001,audioContext.currentTime+.5),A.connect(q).connect(o).connect(a).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),A.start(),A.stop(audioContext.currentTime+.5);break;case\"snare\":const t=new AudioBufferSourceNode(audioContext),n=audioContext.createBuffer(1,audioContext.sampleRate,audioContext.sampleRate),i=n.getChannelData(0);for(let A=0;A<audioContext.sampleRate;A++)i[A]=2*Math.random()-1;t.buffer=n;const V=audioContext.createGain();V.gain.setValueAtTime(1,audioContext.currentTime),V.gain.exponentialRampToValueAtTime(.01,audioContext.currentTime+.2),t.connect(V).connect(o).connect(a).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),t.start(),t.stop(audioContext.currentTime+.2);break;case\"hihat\":const g=audioContext.createOscillator(),s=audioContext.createGain();null==e&&(e=1e3),g.frequency.value=e,s.gain.setValueAtTime(1,audioContext.currentTime),s.gain.exponentialRampToValueAtTime(.001,audioContext.currentTime+.1),g.connect(s).connect(o).connect(a).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),g.start(),g.stop(audioContext.currentTime+.1);break;case\"bass\":const C=audioContext.createOscillator(),E=audioContext.createGain();null==e&&(e=80),C.frequency.value=e,E.gain.setValueAtTime(1,audioContext.currentTime),E.gain.exponentialRampToValueAtTime(.001,audioContext.currentTime+.5),C.connect(E).connect(o).connect(a).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),C.start(),C.stop(audioContext.currentTime+.5)}}function packsDrop(){drum(\"kick\")}function altarPerc(){playEchoFX(\"altarPerc\",1.3322,.08*Math.random(),1*Math.random()-1*Math.random(),3)}function spitPerc(){playEchoFX(\"spitPerc\",1,1,0,.25)}function altarChoir1(){makeChoir(1.3,3,260,.1)}function altarChoir2(){makeChoir(1.6,3,320,.1)}function playEntry(){dropSound2(6,100,501,2,.1)}function cellsElCharging(){isTouchDevice||encounterSound(200,2,13,4)}function playCellsEntry(){dropSound2(1e4,8,1,.1,1)}function whiteNoiseCells(){makeWhiteNoise(100,.15,.3)}function bubblesCells(){bubbles2&&playStringPan(bubbles2)}function cellsDrops(){let A=15e3*Math.random();setTimeout((function(){dropSound2(15e3+4e3*Math.random(),15e3+4e3*Math.random(),1,.5*Math.random(),1)}),A);let q=2e4*Math.random();setTimeout((function(){dropSound2(3,1e3,5,10,5),dropSound2(19e3,19e3,5,10,5),playElectric(1e3*Math.random(),.5*Math.random(),.1*Math.random(),!1)}),q)}function drillsSteam(){let A=2e4*Math.random(),q=2e4*Math.random(),e=2+4*Math.random(),t=1+1*Math.random(),o=1+1*Math.random();setTimeout((function(){playSteam(e,t,o,1)}),A),setTimeout((function(){playWhiteNoise(1*Math.random(),2e3*Math.random(),!0)}),q)}function randomTongues(){let A=15e3*Math.random(),q=10*Math.random();setTimeout((()=>{playAxeSound(90,.05,q,1)}),A),oldDropsRandom()}function playEchoTongues(){playEchoFX(\"playEchoTongues\",.6,1,0,.1)}function modulatorTongues(){modulatorB(73.6,.5,30,.1)}function whiteNConveyor(){makeWhiteNoise(1400,.05,.01)}function playEchoConveyor(){playEcho(.17,.025,0,.5),playEcho(.47,.1,0,10)}function factoryConveyor(){playStringPan(factory)}function spitOpen(){playAxeSound(90,.05,2.9,1)}function spitOut(){playSteam(5,.7,1,1)}function gulpSuck(){dropSound2(290,10,.03,2,.01)}function gulpSuckIn(){playAxeSound(90,.05,2.9,1)}function gulpHit(){playAxeSound(90,.2,1,1)}function randomSyringes(){let A=4+2*Math.random(),q=.2+.6*Math.random(),e=(Math.random(),15e3*Math.random());setTimeout((()=>{playSteam(A,q,1,1)}),e)}function whiteNBeast(){makeWhiteNoiseF(5e3+5e3*Math.random(),.01,.02,9,1)}function enterBeast(){playRSound(220,.03,.1,5,.012,.01)}function conveyorBeast(){playRSound(150,.03,.024,20,.2,.01)}function whiteNoiseTubes(){makeWhiteNoise(1400,.05,.02)}function incineratorHTubes(){incineratorH(19,.5)}function bubblesTubes(){playStringPan(bubbles)}function ominousGulps(){modulatorA(...modulatorArgs[1])}function bubblesGulps(){playStringPan(bubbles2)}function ominousSpit(){modulatorA(...modulatorArgs[1])}function bubblesSpit(){playStringPan(bubbles2)}function inhaleNose(){playStringPan(inhale)}function ominousNose(){modulatorA(...modulatorArgs[1])}function modulatorDrills(){modulatorA(5.2,50.4,30)}function whiteNoiseDrills(){makeWhiteNoise(100,.1,.3)}function bubblesSyringes(){playStringPan(bubbles2)}function modulatorSyringes(){modulatorB(73.6,.5,30,.1)}function playResult(A=450){dropSound2(160,100,A+50*Math.random(),.4,.1)}function playResult2(){playElectric(12+6*Math.random(),1+3*Math.random(),1+2*Math.random(),!1)}function playResult3(){drum(\"hihat\",.02)}function strangeEnd(){playAngelSound(1+10*Math.random(),150+100*Math.random(),.1+.3*Math.random(),.1+.3*Math.random())}function electroSound(){let A=2e3*Math.random();setTimeout((function(){playEchoFXFade(\"electroSound\",.02+.02*Math.random(),.3,0,.023,3,5)}),A)}function specificDropFX(){if(2*Math.random()>1){let A=3*Math.random();dropSound2(.5+A,50*Math.random(),501*Math.random(),2+A,.1,.1)}else{dropSound2(Math.floor(6*Math.random()),200,2e3,3e3,10)}}async function lowQuietElectricHumRev(A=\"triangle\",q=60,e=1e3,t=2,o=2,a=!1,n=1){const i=await getImpulseBuffer(reverbData),V=audioContext.createConvolver();V.buffer=i;const g=audioContext.createOscillator();g.type=A,g.frequency.value=q;const s=audioContext.createOscillator();s.type=\"sine\",s.frequency.value=t;const C=audioContext.createGain();C.gain.value=o,s.connect(C),C.connect(g.frequency);const E=audioContext.createGain();E.gain.value=.05;const c=audioContext.createGain();c.gain.value=n,g.connect(E),E.connect(V),V.connect(c),c.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),g.start(),s.start(),setTimeout((()=>{0==a&&(g.stop(),s.stop())}),e)}async function lowQuietElectricHum(A=\"triangle\",q=60,e=1e3,t=2,o=2,a=!1,n=1){const i=audioContext.createOscillator();i.type=A,i.frequency.value=q;const V=audioContext.createOscillator();V.type=\"sine\",V.frequency.value=t;const g=audioContext.createGain();g.gain.value=o,V";

  function getPart() external pure returns (string memory) {
    return PART;
  }
  
}