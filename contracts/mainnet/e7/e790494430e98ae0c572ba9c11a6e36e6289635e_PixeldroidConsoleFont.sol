// SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;

/// @title The interface on-chain font contracts must implement to be added to the registry.
///
/// Uploading fonts to chain is open ended and up to the dev (SSTORE2 or hardcoded string or etc).
///
/// As long as the font contract implements this interface and has immutable font data, it can be added
/// to the registry.
///
/// @author @0x_beans
interface IFont {
    /// @notice Address that uploaded font for credits
    function fontUploader() external returns (address);

    /// @notice Format type of font (eg. ttf, woff, otf, etc). Must be lowercase.
    ///         This info is necessary so projects know how to properly render the fonts.
    function fontFormatType() external returns (string memory);

    /// @notice Font name (ie. 'space-grotesk'). Must be lowercase.
    function fontName() external returns (string memory);

    /// @notice Weight used by the font (eg. bold, medium, light, etc). Must be lowercase.
    ///         Necessary to differentiate uploaded fonts that are the same but different weights.
    function fontWeight() external returns (string memory);

    /// @notice Style used by the font (eg. lowercase normal, italic, oblique, etc). Must be lowercase.
    //          Necessary to differentiate uploaded fonts that are the same but different style.
    function fontStyle() external returns (string memory);

    /// @notice The full base64 encoded font with data URI scheme prefix
    ///         (eg. 'data:font/ttf;charset=utf-8;base64,').
    function getFont() external view returns (string memory);
}

// SPDX-License-Identifier: MIT
pragma solidity 0.8.17;

import "solmate/utils/SSTORE2.sol";
import "./IFont.sol";

// Valid keys in `files` mapping.
enum FontFileKeys {
    TTF_FILE_PARTITION_1,
    TTF_FILE_PARTITION_2
}

contract PixeldroidConsoleFont is IFont {
    /// @inheritdoc IFont
    address public constant fontUploader = address(0);

    /// @inheritdoc IFont
    string public constant fontName = "pixeldroidConsole";

    /// @inheritdoc IFont
    string public constant fontFormatType = "ttf";

    /// @inheritdoc IFont
    string public constant fontWeight = "regular";

    /// @inheritdoc IFont
    string public constant fontStyle = "normal";

    /// @notice Addresses where font file chunks are stored.
    mapping(FontFileKeys => address) public files;

    constructor() {
        files[FontFileKeys.TTF_FILE_PARTITION_1] = SSTORE2.write(bytes(
            "data:font/ttf;charset=utf-8;base64,"
        ));

        files[FontFileKeys.TTF_FILE_PARTITION_2] = SSTORE2.write(bytes(
            ""
        ));
    }

    /// @inheritdoc IFont
    function getFont() external view returns (string memory) {
        return string(abi.encodePacked(
            SSTORE2.read(files[FontFileKeys.TTF_FILE_PARTITION_1]),
            SSTORE2.read(files[FontFileKeys.TTF_FILE_PARTITION_2])
        ));
    }
}

// SPDX-License-Identifier: AGPL-3.0-only
pragma solidity >=0.8.0;

/// @notice Read and write to persistent storage at a fraction of the cost.
/// @author Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SSTORE2.sol)
/// @author Modified from 0xSequence (https://github.com/0xSequence/sstore2/blob/master/contracts/SSTORE2.sol)
library SSTORE2 {
    uint256 internal constant DATA_OFFSET = 1; // We skip the first byte as it's a STOP opcode to ensure the contract can't be called.

    /*//////////////////////////////////////////////////////////////
                               WRITE LOGIC
    //////////////////////////////////////////////////////////////*/

    function write(bytes memory data) internal returns (address pointer) {
        // Prefix the bytecode with a STOP opcode to ensure it cannot be called.
        bytes memory runtimeCode = abi.encodePacked(hex"00", data);

        bytes memory creationCode = abi.encodePacked(
            //---------------------------------------------------------------------------------------------------------------//
            // Opcode  | Opcode + Arguments  | Description  | Stack View                                                     //
            //---------------------------------------------------------------------------------------------------------------//
            // 0x60    |  0x600B             | PUSH1 11     | codeOffset                                                     //
            // 0x59    |  0x59               | MSIZE        | 0 codeOffset                                                   //
            // 0x81    |  0x81               | DUP2         | codeOffset 0 codeOffset                                        //
            // 0x38    |  0x38               | CODESIZE     | codeSize codeOffset 0 codeOffset                               //
            // 0x03    |  0x03               | SUB          | (codeSize - codeOffset) 0 codeOffset                           //
            // 0x80    |  0x80               | DUP          | (codeSize - codeOffset) (codeSize - codeOffset) 0 codeOffset   //
            // 0x92    |  0x92               | SWAP3        | codeOffset (codeSize - codeOffset) 0 (codeSize - codeOffset)   //
            // 0x59    |  0x59               | MSIZE        | 0 codeOffset (codeSize - codeOffset) 0 (codeSize - codeOffset) //
            // 0x39    |  0x39               | CODECOPY     | 0 (codeSize - codeOffset)                                      //
            // 0xf3    |  0xf3               | RETURN       |                                                                //
            //---------------------------------------------------------------------------------------------------------------//
            hex"60_0B_59_81_38_03_80_92_59_39_F3", // Returns all code in the contract except for the first 11 (0B in hex) bytes.
            runtimeCode // The bytecode we want the contract to have after deployment. Capped at 1 byte less than the code size limit.
        );

        assembly {
            // Deploy a new contract with the generated creation code.
            // We start 32 bytes into the code to avoid copying the byte length.
            pointer := create(0, add(creationCode, 32), mload(creationCode))
        }

        require(pointer != address(0), "DEPLOYMENT_FAILED");
    }

    /*//////////////////////////////////////////////////////////////
                               READ LOGIC
    //////////////////////////////////////////////////////////////*/

    function read(address pointer) internal view returns (bytes memory) {
        return readBytecode(pointer, DATA_OFFSET, pointer.code.length - DATA_OFFSET);
    }

    function read(address pointer, uint256 start) internal view returns (bytes memory) {
        start += DATA_OFFSET;

        return readBytecode(pointer, start, pointer.code.length - start);
    }

    function read(
        address pointer,
        uint256 start,
        uint256 end
    ) internal view returns (bytes memory) {
        start += DATA_OFFSET;
        end += DATA_OFFSET;

        require(pointer.code.length >= end, "OUT_OF_BOUNDS");

        return readBytecode(pointer, start, end - start);
    }

    /*//////////////////////////////////////////////////////////////
                          INTERNAL HELPER LOGIC
    //////////////////////////////////////////////////////////////*/

    function readBytecode(
        address pointer,
        uint256 start,
        uint256 size
    ) private view returns (bytes memory data) {
        assembly {
            // Get a pointer to some free memory.
            data := mload(0x40)

            // Update the free memory pointer to prevent overriding our data.
            // We use and(x, not(31)) as a cheaper equivalent to sub(x, mod(x, 32)).
            // Adding 31 to size and running the result through the logic above ensures
            // the memory pointer remains word-aligned, following the Solidity convention.
            mstore(0x40, add(data, and(add(add(size, 32), 31), not(31))))

            // Store the size of the data in the first 32 byte chunk of free memory.
            mstore(data, size)

            // Copy the code into memory right after the 32 bytes we used to store the size.
            extcodecopy(pointer, add(data, 32), start, size)
        }
    }
}