// SPDX-License-Identifier: CC0-1.0

/*
777777777777777777777777777777777777777777777777777777777777777777777777
777777777777777777777777777777777777777777777777777777777777777777777777
777777777777777777777777777777777777777777777777777777777777777777777777
777777777777777777777777777777777777777777777777777777777777777777777777
777777777777777777777777777777777777777777777777777777777777777777777777
777777777777777777777777777777777777777777777777777777777777777777777777
777777777777777777777777777777777777777777777777777777777777777777777777
777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777!^^^^^^:::::^!77777777777777777777777777777
77777777777777777777777!^::::.      ~7!!!~:^!777777777777777777777777777
777777777777777777777!::7?????????J7^~YPPY?~::!7777777777777777777777777
7777777777777777777!:^7YPGGGGGGGGGGPY7^~J55Y?!::!77777777777777777777777
777777777777?JJJJ?7~ :5BGGGGGGGGGGGGB5:.JP55PJ: ~77777777777777777777777
7777777777?J?777777~. :::...........:.  .....  .!77777777777777777777777
7777777777JJ777777777~ :P&#########BBB########&P^.~777777777777777777777
77777777JJ777777777~.^[email protected]@@@@@@@@@@@@@@@@@@@@@@@@@P^.~7777777777777777777
77777777JJ777777777~ ^[email protected]&&&&&&&&@@&&&&&&&&&&@@&@@B^ ~7777777777777777777
77777777JJ7777777~.~B&J!77!JB&&&@#J!77!JB&&&@@@@@@@G^ ~77777777777777777
777777777777!!!~ :[email protected]&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B^  :~!77777777777777
7777777777!~:.::::::.~5BGGGGGGGGGGGGGGGGGGGGGB#&@@@G:^#&!.~!777777777777
777777777~..!JGBBBBB#P~.::::::::::::::::::::.~G&@@@G::[email protected]@#!:~!!777777777
777777777~. :^^^^:  :[email protected]@@@@@@@@@@@@@@@@@@@@@&&&@@@B:[email protected]@@@B^ ~777777777
777777777~ ^#@@@@#[email protected]@@@@&PP&@@&GG&@@&PP&@@@@@@@GY!?#@@@@B^ ~777777777
777777777!:^[email protected]@@@@&?!?P&@@#[email protected]@GY7J#@@@@&PJ!J&@@@@@@B^ ~777777777
77777777777!^^[email protected]&J!?JJYP? .B#^^#B. [email protected]@P?^^!777777777
77777777777!^~?JJJ?5&@@@5?J7  [email protected]#::#@G7  [email protected]@5?JJJJJ7^^!77777777777
77777777777!^~7JJJJ??77??JJ7..7J?!  !?J7..7JJJJ????JJJJ7^^!7777777777777
7777777777777!~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^~!777777777777777
777777777777777777777777777777777777777777777777777777777777777777777777
777777777777777777777777777777777777777777777777777777777777777777777777
777777777777777777777777777777777777777777777777777777777777777777777777
777777777777777777777777777777777777777777777777777777777777777777777777
777777777777777777777777777777777777777777777777777777777777777777777777
777777777777777777777777777777777777777777777777777777777777777777777777
*/

pragma solidity ^0.8.13;

import "@openzeppelin/contracts/utils/introspection/IERC165.sol";
import "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

import "./CrypToadzBuilderAny.sol";
import "./CrypToadzBuilderShort.sol";
import "./CrypToadzBuilderTall.sol";

import "../ICrypToadzBuilder.sol";
import "../ICrypToadzDeltas.sol";

import "../Errors.sol";
import "../BufferUtils.sol";
import "../PixelRenderer.sol";
import "../GIFDraw.sol";

contract CrypToadzBuilder is Ownable, ICrypToadzBuilder {  

    using ERC165Checker for address;

    mapping(uint8 => address) imageData;
    mapping(uint8 => uint16) imageLengths;

    /** @notice Contract responsible for rendering unsized features */
    ICrypToadzFeatureBuilder public any;

    /**
    @notice Flag to disable use of setAny().
     */
    bool public anyLocked = false;    

    /**
    @notice Permanently sets the anyLocked flag to true.
     */
    function lockAny() external onlyOwner {
        require(
            address(any).supportsInterface(
                type(ICrypToadzFeatureBuilder).interfaceId
            ),
            "Not ICrypToadzFeatureBuilder"
        );
        anyLocked = true;
    }

    /**
    @notice Sets the address of the any contract.
    @dev No checks are performed when setting, but lockAny() ensures that
    the final address implements the CrypToadzBuilderAny interface.
     */
    function setAny(address _any) external onlyOwner {
        require(!anyLocked, "Any locked");
        any = ICrypToadzFeatureBuilder(_any);
    }

    /** @notice Contract responsible for rendering short features */
    ICrypToadzFeatureBuilder public short;

    /**
    @notice Flag to disable use of setShort().
     */
    bool public shortLocked = false;    

    /**
    @notice Permanently sets the shortLocked flag to true.
     */
    function lockShort() external onlyOwner {
        require(
            address(short).supportsInterface(
                type(ICrypToadzFeatureBuilder).interfaceId
            ),
            "Not ICrypToadzFeatureBuilder"
        );
        shortLocked = true;
    }

    /**
    @notice Sets the address of the short contract.
    @dev No checks are performed when setting, but lockShort() ensures that
    the final address implements the CrypToadzBuilderShort interface.
     */
    function setShort(address _short) external onlyOwner {
        require(!shortLocked, "Short locked");
        short = ICrypToadzFeatureBuilder(_short);
    }

    /** @notice Contract responsible for rendering tall features */
    ICrypToadzFeatureBuilder public tall;

    /**
    @notice Flag to disable use of setTall().
     */
    bool public tallLocked = false;    

    /**
    @notice Permanently sets the tallLocked flag to true.
     */
    function lockTall() external onlyOwner {
        require(
            address(tall).supportsInterface(
                type(ICrypToadzFeatureBuilder).interfaceId
            ),
            "Not ICrypToadzFeatureBuilder"
        );
        tallLocked = true;
    }

    /**
    @notice Sets the address of the tall contract.
    @dev No checks are performed when setting, but lockTall() ensures that
    the final address implements the CrypToadzBuilderTall interface.
     */
    function setTall(address _tall) external onlyOwner {
        require(!tallLocked, "Tall locked");
        tall = ICrypToadzFeatureBuilder(_tall);
    }

    /** @notice Contract responsible for rendering delta patches */
    ICrypToadzDeltas public deltas;

    /**
    @notice Flag to disable use of setDeltas().
     */
    bool public deltasLocked = false;    

    /**
    @notice Permanently sets the deltasLocked flag to true.
     */
    function lockDeltas() external onlyOwner {
        require(
            address(deltas).supportsInterface(
                type(ICrypToadzDeltas).interfaceId
            ),
            "Not ICrypToadzDeltas"
        );
        deltasLocked = true;
    }

    /**
    @notice Sets the address of the deltas contract.
    @dev No checks are performed when setting, but lockDeltas() ensures that
    the final address implements the ICrypToadzDeltas interface.
     */
    function setDeltas(address _deltas) external onlyOwner {
        require(!deltasLocked, "Deltas locked");
        deltas = ICrypToadzDeltas(_deltas);
    }

    /** @notice Contract responsible for rendering image pixels */
    IPixelRenderer public renderer;

    /**
    @notice Flag to disable use of setRenderer().
     */
    bool public rendererLocked = false;    

    /**
    @notice Permanently sets the rendererLocked flag to true.
     */
    function lockRenderer() external onlyOwner {
        require(
            address(renderer).supportsInterface(
                type(IPixelRenderer).interfaceId
            ),
            "Not IPixelRenderer"
        );
        rendererLocked = true;
    }

    /**
    @notice Sets the address of the renderer contract.
    @dev No checks are performed when setting, but lockRenderer() ensures that
    the final address implements the IPixelRenderer interface.
     */
    function setRenderer(address _renderer) external onlyOwner {
        require(!rendererLocked, "Renderer locked");
        renderer = IPixelRenderer(_renderer);
    }

    constructor() {
        imageLengths[0] = 6131;
        imageLengths[1] = 6138;
        imageLengths[2] = 6140;
        imageLengths[3] = 6140;
        imageLengths[4] = 6143;
        imageLengths[5] = 6129;
        imageLengths[6] = 6134;
        imageLengths[7] = 6135;
        imageLengths[8] = 6139;
        imageLengths[9] = 6133;
        imageLengths[10] = 6141;
        imageLengths[11] = 6131;
        imageLengths[12] = 6142;
        imageLengths[13] = 6132;
        imageLengths[14] = 6142;
        imageLengths[15] = 6139;
        imageLengths[16] = 1700;

        imageData[0] = SSTORE2.write(hex"4558674093d9123d91227577432a3524014288b00575b1ad6257445965b1acc2dad63492edbb84040c01a922a080800a08b87d5fefbdf7de7bef2f18055de5c17befe33deff9fe20e3ccbd3373e6ccdcf95000888f917e40596cc712e9dfb868e94774c13544099522c73f8dc5ff4d885d54697da5738811cae8948a1ec4d2541d5a8da5d22f4971d28f2875dbddab9e19c4896b97e41d453c6d0dcdcb914029a56e39128514656d1e45927019abf2ef1844b2502e4d6fe9c67d424ad20ed971bf70195fd07eee8e73160f0875b2dab7024a4a1975a348115282aeee0654d22f898b212fb16dbeec9e855a788db1fa9c1168847aa929b8fa52185a918b42bb193a212cb515434f480a439b902aa4f882861ea4094314ac433ab34cf7f52043f84bd034dd712353884b6da1c7ddc8120763f4153030e794ca2bc816529c7ef7188ce21cf40d356e98843226a76902669a16b67421873a53f9207217015e2c3c90c750521acfba616142e66117f2051089b9ad9b3a66601591c56b77a080a6797d61d808b7b5ac0fcbc44158db2b7bdc2814b242e92b1df7a2485827e686faf02009a9adf7e02121ddfff035071e1652ac6d4b2d1e11014465f6a0580663cc85e52291f8acd503b558c173b97bdc5829ce252ef3e25196c9747c1225045855578b55e49fad75d28dd534cdb9780b6b64ca0746b19619abf64f601d71b4d61f1bc4633c68ac76633dd957e499c606266f299b42a938b8c41c3c39868da4a266d3352f3689c0e3acb3d82c0e2e4991d8b685f8e7ef1fc456523a235073c9836dec5d6bab14fa76b91b4e9cc50e62650a76d5622703b25e75a34cb84c4e6dc02ec2a8f7d5a09c5999ab07b09bf867eff1600f0150369db0a38240a6843ac3785c888abc60c534f6b2af0d8195d8270372771295c27f82a6184f5065b8eb45151b25d5d7398bfde48d6d77270e109d34bf1307898e69cc8943e2ce24931b4f32fba2adee300ed352d7e8c291c5db17c7604c11aad9341921376a1873fe36079ea24edfe7c051b66ce6611c13f727597c5d761c276896a6a33821d77045074ef296f41e179ee628ce76e294dc145b0760274b54816e3b1c843ebfc305273de81b1d70c96db1fd26dc8217f116dfde412f6a49c554898a1ea14d3234aee809c34bb8359b27f00c43480dbaf1acb08dd6b50ddf71e1398eb4bc662f9e17da84d4d05ae70c5e604c45ce69bcc89b325a3af112c9a897107f99142ba81ac22b9c1c790d2b2fbb5047bc34be01f8d881196b5ca85f044eb168eb67dc19813904d8d239ce1b6860c6b6920534ca3ddcb680d3c4dfd2e44290a3bdc08f26198a9a4984c83c63759717cd9c43ea06b48887282ea57d5fa72b8233cc3db7248c56229351b7a77f066df469dbeb41bbfc306ded4187b04d4ef597cd3bd1c94c0a82117411374d700867593badbfd81e4637f9a95ce7c639b25abde7027a786fcee9e23e2f7a89823e78027d3c59d0dc85f372934bcfe805d10f894af4cbc320508501b674a64f1ab8830cd5da12c645a6652d99c6108753b6efb1092f86198ea9b56aca8911b25bebbf7c07979867ba94c965f2d97c31822b8cd5141ac028dde8d73b31c6fa993b304eca59dcb77055de7926af6382b5cdaa7f17937283ee9ac3141f7f7d734dbf1dd798744a5d075ea56de6ed305ea3c3b426bcce4bd3cbcfe30d6e27267ff9bc378c37d988e9e513aeeb788b34d0366dc3db3c6c6bf3e01d925e57d983f770952a9ac77b0995bea16c1aef930952318ff7130e8bff2a3e40d3f440b7131fa469ea95303e44f7d65dddf83075fa36373ec21ed4356fbce0c0478979ee90071f139925e8fc23b7a54c3eced875951e7c427e155a3cf8246998d9e1c5a7886561d0834f7341321cc167e8d3d8b06fc881cff239c90b0d39f139a18e53d6ededafc5e7d9540fb5568ebbf105cac6d6ca212fbe48861902a7e6bcf812f5d96d87a4f35fe6f02adad18dafc8bdbea9135f6506a913617c4dae45fb757c9d08a7170fe31b9cf485bd12c9be499cb49e30bec591a10a1df3e0db5c41f40bf88ebc02371ec477e51d6fde85efd1a16aa307dfa70b73f3f64efc405e8e767bf043f22f37841fd181ea027ecc8e3386c6ddd7f1133a54ad9dc34f455327d9f0337958f644f0734a4a5f1f7ec15e286c7da2cb815f72a9d09fb8e2c6afe4173150825f731e65370e7922f88ddcc55b7af15bf9bd6cb0e3770c47191cc7ef65bed5ede8f1e00f0cc234e0c01f89a3b9a2d7893f9143bac630fe4cd3bc6d73f88bbcc8f438f05779595c8bbfb1a8395bfbf177a29a7b44fa94f80771549ec43fb92bd85621cc243247bc98969fdd9608aecbde7c7710618269ad2edce0bcd14b0ffb4db22673bb1d33bcd35ce7c6acbcfcece9c52d66a76ddf8fdb5c08cc2ebc4b5ee8e76a7187045696f6e3aedcf8259398635d6c1b3cf817977863dd96e108e6851c6b0e4dbe5b8b05b6a8a6d2817f736fcb0c5e71e23ff253dd266d788a7bca44eb86110f140a31d234ad2bfb9d58a2e0c83dd985282125165c74209a3ad5c6d9ffbddaffcf25af6d25621562c0a5adc152058932e5469c90927336b910cf2b9565679120dcc7a4b51dee7022514417a7f6f5cd224918c7a7b48e2059c1b7bd0bf7d161c179dccf2cd2db2e4b5fae0f08393afdf4f64e0f94e29ee85c7f18290a7e834ede828a3e2cc1f550536799b24323c2415a9304b356884bb342af7aa0a357c39903c31ee8c5d93853e34ea40ae37865bb5485349e55351eeb43ba829faba1bb2e64105afda8139922b7842c27b2189fbe3e0c0333495933896c053f49030b30d2324d82dda4e0177068cdbc1766e131da587e710639443a33d0ed46ae427efa4791270250e4ac8085696936bb912fce25e7b697446015ca84659be750209449eaf2b15ad8849850b4ea7c04cbe44c1c332864e90d7577a50fd522bab18dbaf1a088205ed980879874f6935378582e6ef188f3261e2113b2a7512c5c46e95aa62258ce080cc5d2e059c12cd33b1c58a9b83742e3747894f5d0359cb2a3843e0cd5939e9b58a5e0f3e9b763b5d026e505f6cd39b046be76c18bb50ab1d2ae93ab5a7d0e8f29f8c5be5e841c9dd1850d0a2ec4a5f32865b7e8ea87b091dd92dfd8894d8cc22cc1b9594411675b3f2e2de85b8436d6d4348cadc42ceda8f429c982aa1ab09d545c56d6e1c60e162dbb419ad53be924e7e438ca58952229d15d0cd570c48b723ad406ecd8cdeecc18c71ed64435800ada651c1ac6e31c0eaaaa4eec658759aa176ab18f74324b6f7a25478c6524822718b6f2a0b4ff5611436b0bf60b212ec78503f288d9d68b83bc522b5d7988b437b68fb9f0a4e2de22b4a420b0ffbc770687d925aa86e3f33822c4584db9b4715553ab6f5d31801a518104cb99639d4e3c451e18a4dde8a81c7da517c7d8aaa6e07e1c2733b24f5cc009b972be6a9c64f7ebb7e169522db3b9b8d38e532c7aba7f8bf41563577099d83e0687381aa3f4c2294c93f3433b17a48f4ab9943bbc70d3d4b81ab5444ce39b828715d204bcf0b26b8da59d7886ecb0b6dec6b3e292a494209e1342a27a00cfd399bac285170845d6e901bc486f96bdf3784960aa50357547f0b2b82536f7325ee114300ea38e08aaa587cb47ccf4ce5ba817754476a0f2ac3b0cbf38f980f13602a4ad7af16392ee534a2fa1511eff210f4e3307c34d04e5926de94393cc5b699a864838cb45340ba4a3f22a075cb368e1f4308556f5d971861eb3436eb42af8d7a283176ad1266e425e15da5933d5c6c1da083af8c4a843d5930e7492cc69815e74b1c7f5d29e7e96b32ea3bec3836e626e3deac439b98aa35ef4701c140ca29769ea2b23e8e37ccf0a554fe03c1d660ddec005b9fa634ef4f3853104c6a46007188eb6c98e4132c028017b913ae5463b86d828bac0560c13d965e3b730421ff9c163b8c42cd242b5b82ce28e32f7e20a51354b5bf5a83c6bfd2318e3b19c662fc69984a5d78bab249cda7ff02c26184be101172609b8b2beaad785293a5149cfc23566a1bb3a8d577932a5be0baf91b89aa3789d86856d0ebc41f0b3fb1c789357ea1b9d788b30e50627f03693578ddcc13ba47f510dfe0b");
        imageData[1] = SSTORE2.write(hex"4d58775c9359163d24f4e24c8040424d6242080e4c4150b121a38e0c2a380a8aa328a8bb4948be6cdfa524081182524541b0800598edd37befbdf7de772a4541514677f6737ffb0efbe7c9bddf2de796f75e6ef503420200f81b9749b84da0505d751f6ea74c9db50f77c8283450464196bdd995b853c080c8b23617ee926158900cfdb4eef91d56dc2dc4e15acfce3edc234c05c4b81db8572887c6ef5d7fc289fb8434d0d263c3fd0285a54d497840208536cf8a078559654cd58e4e3c44686a9896f030c33736487884684eaf8447856a88b96ed7313c26c360ffcbf1a9dd785c68fae9f674e2098110e3de8a27050ad2f438f194404a8d73124fd383a9ee163c234cfa65b4e159e14e11bfb6c381e744c6c1aaaa2c6914cfd3a3493a8d1798a366cd185e149f46cc7197f5e32552679976e26561489950bdb4c3895784d3308d8457593073e171bc461f66cff5789d79a88726f1868c02159773c49b4c37b2fe04dea289b4cc7d785ba0f0c46d63784704e697b4be721cef12ea8b8fdaf19e0c03fc2edb799fb4447b247c20220ed0d56f39e8c087421a12e7de8f8fa89b583d8d8f49842ecf8e4fd816919e7e7cca0e33352eebb5e333f2a29126f1b990fa9bdc6bfb5cf882e5d6bb5b1cf8924926ec2dc057421818ed6b95f0b5e03020a912ff129ab3b4f3acf84688023523f8568822527cc7f11de349acdfde6ec7f78c3665d341fc40367e14bf07a70c4a1861bd2cfb302a807f7a2dc61862da0509e3cc2e75ee519c16be8234de61e704ce088ca8c63ec718269841640b2619a6faa41367856896661ece89c4915ade66c514e956afe8c77996deb0fc002e700aa3b2244ccf24b7b1173fb1f229b58395b8c8294cf2ac70e01213897317e1dfc27f88f11c7e162054572a7b15c4e81b7be12750a87a870b0a81c2d59ea3502afef75990be03fe4204ddc10904280433aac6d57257042a3802993d0852889d955a37ed403085096e0921c2aabfc98950a1a948dd9de7449890f9e91a102e7c40d5b86b4042843013a269d8805902f91977b97085b003a3af740857328f98291b54cc31a6ea0022a91aebdbe64414c39127395a682a667b5ba15670ebe44f2286bcc52db88458119c7fe2eea5fd5668849950c314b402206a08710c54b3ae07f1e2bb089337db318a04210d8a69e84522fdc71fb02249a000c3312b9249957a71fb3874642363a9037aa6185760838184ebf60c60360388f496c2c8a25e25c14423c99e234811284c5bd70f338d24363891caec55175db0909954ef41a4918be4ba0d7d95982322f53756ddd08aab68d65424219dd1a4ed5d880ca6af2a72e06aa66ff46dc6352c94ceb7a51fd70a2f0a737345bf84eb9888d68d4c069b563789b90c6f4ee504b2187aaa6700d9c24c486ce3b28b0ecc63afea3dd336cc175695e61bb180764c179dc8119ac106779b0d0b599dc49ab35824cc06a6d4640d39b158c1b3d5e7c012f2ac6f68c352ea9a0adae40073d9ada64567b08c76338a5dc8a3d3d4dc011bae1730342aff782596b3ecdae6835821844af3fa7da358496e0d6b6db881131b9935ec1ac32ad6c1e4ed42be902acd7539a7267023a5867a09050245ccb68e60b570136ef2e438b186424df921ac15c290843d156d2864e2b1be4a1411a9ab5bb08e1b45255f466e6239534ab09e4399e1c206d6d678741cc5a4475fb71c25ac50c2901d1b997162ed216ca237eda23e940a930aad179bd91286aa4cdccc40e6541cc616a118127b065b49694a757917ca585553be13db661ce4b5623b03b3e44a28a74cb5d0860ad64955eec00ece477459b70d3b05f761fac61cf954d9c529303464e2176c80e4c6234efc926c5f1e662bed666c74c0c608923d43b0d38ba6bee53c2a195054713b1c44298d4370cea06a3b24b2a83f2fc1c5b56328e872e2579c8fc833f8352337fb96dfe2c26f6696444d217ecb70d2ab07f03be661f2768fe3f76cb0f8ba02fc814398507fd18a3fb2209a6dadf813518ac7862ab686b11ed5ac95ce8e1ab65eaa7bbf13b55c3b69f2f6749337c311091ea11aa8f3adee461da74adfdc67c56e8e8ac5bb49deedf5dcd986355dce7134b040fae15178199ea5fa04f67096932e74a1915ea3da2434d1aec6937dc9019f883ec0908d66861bd5b8017b9958fa39ece3c0a98b5a2bd142ea929aec68654b46d5f6a14db8f04bf6cc1fb0a29dba313bc6d0210c0524fa0adbd1c93ca20fbab05f46e1c1ff1df986dcfdd649749115837bfe111c609e49f55b71904d9251d68e6e8e6146b1033d6c8398be711c626291459de8a5cfb8c61cf4b14713fbcedb7058403f4be171078ed0aab6b90047d94eaa0e09c7188db6df867e32647077d931403b095b4e56e238bd2415ed73e1c4cc5d6189bc784e72f1a89a708ae5539d72617066b5754f6148701bacf714ca07c0f0ccb9965b895b047d01da9acc01691c7fe650450fdaf01772127dc481bfcedcba1a97e16fc270b8d9bb75ff24fe2e220a4e1ac53f845d655ad5a66ec704fe4956f4de16dccae34cd3dce29ac06d2cb1a644be33dd4e65f3723bee108603af69c49d04691db84b98098d730f9f77e06ef260d861c33ddcc0318d47702f5740421feee355276937eea73755d5423cc02a4479fb1d7870e674dabdce81876666bcc2898759dc48791e1fe10169692eeeb4e35185b8d53f4652d35d23789cdd1e5d5f3e6dc7138c2cbe0e4f92194bd5dc613b9e62c71a9b2ee169a11aa129c53314597c43789697d0a81e3cc775939483e779c94bdc8b17b8d0f4ee8a41bcc839342fb1e225f686c6dd8a97597cedd109bc426f712b0ee155ae22d3b47502af51d5e429c6eb5cbed1d5f927f0868061716b061d789311c4d4e40fe32d5e90f435b9fb6d789b059e5d8b77b81c4df585837897f58dcd97f01eb744729584f7d9f596ad0e7cc08074475cf8901bdf50bf48aecc471ce7b49c517ccc5eb578b3fbe4b7ea2733d7b21e073efdbfe322c73e82cf38b5e6eae27df89c7ecddbecf86266ad7a7bf125e38d961f2d5f093f815adf8203ce517ccd04f465f25b92cae625fdf886746b4b0ee35b962936eb22bea313e34917be67db25d4cc971f583f90df8cedc79df8913d6aee7261646601559563948532d7f538313673d8ee2dc5383bdfe82de9c069ce9a31bbdb2ebf2a792ca86b2be41be90493896accc2246f6609b5b9f295efecccaa5d7802e758d658774127a6f8a9aab917e7b94734765c60bc31ce314c939478ef29fcc4cca2720ee222e98b6b70e112a3d5f8569c72e0df9c31830d3fb379e7d4c94f5028c581a6ea839f92ef9e4c27144abe726b76422914c3750be1afe473b8d6890025ef9abb2a112810123bad0812282cae5c4230bf8b6ade8a1022e3c9730855f2e9263f40c394ec9ef6f308a71543d37244d0435a9113b366c2f49dc6154ab1981377e775387125ed246d3e09157d58bc372192b2f8fa6144890443123b11ad24d9dd2ea8050a4869b02386ee35f9c711cbd0126aedd0c8e872ca08d241abe4df1ed5d95da388139aa1e9e527104f2be63d954810ba985d5f326847a252f4dfec26f9c04b628eeaa66348a6cbd8d567a06370192d4ee84516febaf530d0a3fad40866d388a6597e54920a75851d269622523e3c52e820be290f665a892c955f9574a7dd340d8b88334c537f781c69022a34d52bc73087fd64f0c98f4afad7cacf80748142e24b7b90c17c35ee9543b89ab5885c856ba819bb58c2b54adeecea365db2e23af2a8dd25215348c3521af27bad982bea111a8d2cdac9704e225b780c56376fb3629e500c51613efbc2d03a8505242a217f0c3902055bca3ab1501809d47bca06b04878f737d4af94dfdc8b853854bda3d38525222b65fa712c25c73117edc82553915567b18c4ed2ab37224f5889b82ab36304d7d389b6e198f52c960bab61e956ac102034ad022b39b2869db88136d5b5dbb14a88107d06f99c195d55e1894adc28b042b5a7acc58a02114040c646f93db39afda06a77600ded1a6bbbb056d8f54b76a190291aa79c28e267194b6d58478e33e427ca4d1c157573d1212bd6531ad394850d6c4ebdecbe980eb5fd9528e1a0a6d43ab051c907947755373651a86e75a0946bcadc301f9b856a48ba7ba50d3733baf8a312b650d550d282ff00");
        imageData[2] = SSTORE2.write(hex"455867409457163dc0d021bbcc300cd58161e8ea16d480258a06358a06a31835366c993e49368d610067060469d2a50b0a98de934d36bdf76c7aaf9b5e2802924860b39fd9bcf3f1efce7defdef3ce3df77eefb1cb0708f485f417516dc36ec90af2930c1f5576b7017b843358eb5a81bd92e5eb757e69a158161ce61a3a8b7d62996fd86e0bf60b6748526e9b0d0784d32fb2a2000785153427a71f8784e59fd063c79562a39772439b0106e10ccc58d70c2371ceebb7c124072d3e01b3640528cea39e370c8b707969abccb04a56b0fff92009c5077b0cb0096f803eb31e7691d15fbfa0dd8aab84e91d356d1bc7d53c56c425765c239c7e9139b336fc433843624a2770ad4010185d82eb78c6a84e13ae17967794a7003708cb27aeaa10370a74c1faa22b2dc328926c7f9ff3e8e6c3c1036b8bf7a39831551b4fc2c928f1b576941076faa66e0b4ab951b7651065ac68da8a260b0ef3fc69fb0c7071696af114dcb4120bdbe021fde9128fe5921512703e8cbe6c6bb77512153c7fac791247c4417cd23c39529a4ac14770cc28aa589134f3191c25abb14e03aac54685ce95797a1835f446368ca39618d23acca8136b03e63837f55b512f9220d58963a459eb5a8406b13428be72659b158d3c9abadc802661856a3c8368169622d9d384168abc558457a4ef421b798b721b705cb84275fbd04e574c9f0d1d82ef406d51de203a69a679f25ad125cc507d69b611ddd454946bef31f41089fa0a2b7a658dbb6a708252d5786c93e823fda9476de8174e455259a31127b93671e5b40da704197e11ee7eeb590cd04e2bcfef306190ed13d38821b9072aaeecc769d623bdb00e37919c9b4961fcc11adc22227a698a56378ce2565292bea51fb7314646f52fb89d5642e910ee600db5e3b853185e61e3b88b19d445f9b89be5d5afaac33d62a15f7426ee254f6aeb30eea348b439c724a2ee67e3245674e101ca2df6c8aa2e1bfe491ad3b34c785016df8a493cc4e1377fc8807f7138652cae33e061e24971f5e2119296b8f2a4018f92e0c8d24c29cb63a42365a7058f8b56f20b735dde6b9cc0139c82ba7527f124676b6251e7089e22a6a4253d789addacccb58ee3197696b278019e9597ae1fc073acd5f31472fc06bcc00891ce5e035e942378a6f1128facb29ec1cb6c62d522bcc291137ba816af8a28bedaa3074ee3357160a82a5a2c13f8b7b043530ee777daf13adb6feea0056fc8f2dcd761c79b2c74589d156f91abf9fb86f036e1450f1af10e9b29cc2915e85d4252f7dbf11e0b9dbcab1def334746c1cc043e106650eac1161b3e94c7c132133ea208b4c587f0b1c0ee1fe72ca831e013ca2bdd358a4f45a000655556033ee3809a9f358ccf8936b17c165f30674cf62933fe43e2235cada3f8528cfaa0047cc571a2cfc5d7fc7cc667db46f10d0f9928cdd96f0538df28d7fe5e3bbe93bfd78e4535f89ef20e2f3e573b8c1fa80875d60c7e94e740769d71183f89b4be9a7a0c532e23e267ffc8c518154640940963e43ffad8940167c8b8dab904e31c5eb14b4730414dab9635629254c4955cd484b3acf19cd2e5982287eab27afc2c7ff6eacdf8851095f53847752a8b6730cd7c519916fc4a2c71652b30c3f19f5096536bc62cd1c42e6ec67f596fddf251fc26d67a271e5ed96295e2896e51bbe0a5101f688d7b71ab11de0a510dcd2a0b7cc4d2106d1914c215a2bcd8085f05d9c8b5c04f2c0c8a5c0e7f856870e51adbf0efbfff813c7716814c10b9760441227d689c27fbb815c1622bf4aecc6308118bbda32fa945a8581ca072aeab36e202c51f732630ccb3bedd3a863f89ddbe1165ad36fc9910939674204c38fdf4c59d462885d32bb9b40b2ae1f48f71e575235c387d55a661a89937c5b5e1981111e2b07e49aba1114b11566f4724adc85a2ba284e517eb588b68c2d1967723863c44b8ad88155660982b17713cb6c63186395c195f510b2d93c775209e0b131cb94820d1ca8db5d0092b38798d1d89e20cfe298e4b7b8cd0b3ee735cbdc61124f18c11eefc1376247377dca63ea4d0d25d761ca90242a0ae0969c2e59f58b412e9244eebde8c0cca47bd0573299f1869f4ce13b5f38a7014f4499fb5f92c4fd891652df80ba9d3d9cfe0afb4545b1bf037962ec9d58fbfb374bada29333289202dbf070b0482e0e4cbb190628bded6238d8745c2199a761c17523b2ad7da4664091f54cdc816868fae0d8b99205e2af112164eedc9c252d643d9388165229f7778f1aa5a132e12b66f78e576a9f797b3b0b14b6ab04224f1569b9043ad24ef3060a5c0e69de2bcc28e55841399898ba987b04ae4527ec99b0d584da49a4a3bd690ffb4a52d584ba4c98d665cc274f13bdbb04ec1f74de5cf56ac976973efeab0204fc1bbcf4913369061d5626c641cbdab0597124dcab931e4d3177da9099b58eec8d2b5f5b84c9e26ceddd8cc02a7e477638b581a9ae191ee1a05c219aa9358db4afe63f75871b9801aa4acd83b63c1366a435fb6be06db29a394b629ec6039624b2eeab0e10a1214b17d163bc5562f8d67c118761152ea917cec26e97373b147ac0c482fd966c25e765a9cabb0ce86426187443bb2dacdd827225d9074e14eec2742e5ea9a091c200675a519076544db3a71889da6f4486f4916307e7a0206c28b7114c2289a2b24c399dd699d8089237f9e1166529696770a1601cf2bceb9af4b7a4f92a339bb2760e35add4203ecec11a533c788ab084febd988ab8533487378bf01d78894be61d25b924a0f6f37e05aee8bea37e13aaa4d3d601ac7f554977a472d6ea084632b77e04681d527a16addb411453c7546410d1c22d005fa0b9756a39871e7140fd8e0a434323cdb7b4d2891e7769709a544ab2b45993c0b5ddb6a2771985b633c5da649b8e84faa3c3768829b7682636d9d191ef97c3b6b504e901a8719159ca491cee538c2899d9e7d1295fc6ea679960ea38a1be36a8c38ca4a68f31a51cd2a65946c460d57aadaeda8e5588b36a24e216e3df51cc6b16538c61d11bb9ad04050da721b1ac98ca6eb0c9aa8ee14f74ee92d290bd4d58316b9a13c2368153c405bde689a401b216b2a0ee0384b39775b0fda051aff842174b0a5f5fb2de8e4d8d49566d59bd04592748e5e7453f72ae975d543d1a9caf6d6a09739923d17e3045b5855bea5057d6c02fd00fad94cc9ce2d38c97dcadc019c62c2e482690c9000fd92760b06b931dcd38521113320de84d37294a20db849a678850d37f388513306dc4216350b7a71ab822f962afb046e93fbb3c28adb59b6383bee606923c67027436a1cadb88b846ab27037494acab3e21e591006dccba9a7ac2a94a0dc277f3206edb89f1c45b6e301766dd269e925c97ed2bab7daf020fb345c7a1f3e24dfdb1c3dd25b92828a97763e4c95444b4fb047e88baa3c85471935b6bcd782c718352dd786c7855391ee5e68c713ac4bbcf3049e24f0f08a0e3c45212478ba0c789adf93c485a7f08c7c836ab6e359b673cad1fc2e0b9e6331c2fb2d789ee556bb5ba7f002e94a2ddd6319c58b0ca59eb2e3250e247dd58246035ee6c730b60aaf90cb8c957895b2095b5a87d75862fd90f498e4a1535d4d785daeddc27abc414da514dbf02643c62dc75b6427ca75b00b6ff3c8f39bec7847ce20ddfedee505223d5feaa8f7487a46e1a001efb32289d2e3f503d2915034880f65dd5654e323f9c664c5c7ac7992eba26a7cc2278072009fcaeddd8dcf886c9e71129f93b344d736f318be2098e8bc6ae915c9f4d165dbf1a54c46512fbe923fc20d067c4d4a23aa6cf886224bcb1dc3b7f260759fc377f2b56cc68aef4969d87a237e2051d1926e7ea48cd439f516fc248ee115518a619629c1d580117e0b631c99cd182533f3dc1823a1eaa2599c91afcb768ccb77d7dd0d98909f0b6b3b30c94f717a5556b311679930b6f004a6843730c5b5b7cf849fb9372a7704bf08af22b27877b715e7c41500bab2357d86494ccbaf3e337e25a4b402ccf02aa674cf9a30cb6914efce1fc17ff95088c91994e2fc264bdc211d9efff894eeb35ebe9cf77b3be0ed2be4995072a80d3ec2199a7eda04857022a1d932095f5fde4d4b1ae1472bd1d3077f5f9e6c5187a49700b135207969b5e5f785ffaf6ddca23e04d1a9dbdc3281ff01");
        imageData[3] = SSTORE2.write(hex"4557775c93e7167e180610b86dc2480209844012024a6d518bb8c059072e44c5898a6d76ba5b0821262112a14c650a2a82d8bd77efde7befbd37952adaeac57befe7bd7d9fef8ffc7e39bff3bee73ce73c67bc5ff21c2049fa21313734831421c5a8c34b902aa439a6fb1cf884f42f315e9250781e77089522a7dc833ba57f73159294ac1972cf402989c909b76de6efeaf3ce40250ec7aa3677204d1c4ed5ed98f0209d00f4be0a640865425e64e31032853235eb431bd402418c75181aa14a4a0b1d819607f57e27b2c4c1c4dc28b2059ab986c8b1110f74c2457c41bb731a7a7136b56414398cb838d4875c212594ec9a864148c86ce8479e90e272aa86601446e28ca3c897c3ddef4681700fcdd141c755987851b566006621a5e85a2a61a1194d148542882f9a805558894d3bb169c08e225a29aaf1a0981ef5cd67304f9c8d3736d6bb2e633eb5c640274ac8952170d08dbbc8953a5a3ee9c202e658d38abb49795110f7888bb185fe36074ae5e268d884854219931edeeac522929a159cc462664e15b4e15ec2c9be6447192b4e5579114b48aa65a513e50c322dda83a502698c2538f09117cb043885612796138d66d88115e4b460082b59aae9eb3b5121fd4b49bceddd145d33e0bd8a4aba2c3e7f1dab68277ba303ab859de4a208d608d5dc92711bd6b2e0b43d2eac63149ac119ac174853344bba3cefe33e61e68ebbce6383502668236b871cd8c8302cddd844f785b51e6c66fcd65005aa04f254abbfaed773155bd848ea4523366c15e2dcecf0b1d3d8c634e735ecc776469975b80b3b84a9786560c5acfb32aae5bcf7b8b1939272c48e1a525be8ebb361971013cd11cf0c760b11bac8fef3d8c37a4e5b6c43ad502a0a037b9cd84b0675d1636336ec2333bad038f60b29b9a07b1a07c4d539da96521b0ecafc8eb97048e46cae6600752c5243030ecb2dbb6c10478835fb50bf0d47195749a91df5f46ede3b8d63d465d69cc3fd4c6d4ec30d371e90d313d8061babcb7a0d767645417db70d0ec6af2dbb002795198d3b3c70317e4db8bcdf033729d2fa0ec1c3102d3d57e16588863e3cc842304d4ce12179484b0dfb30a16a22357d788451a97d1e3c4a29db7f0b8f099b73f40e3cce983216ddc21374a79cc093c2645cf149097603db777e73291a590eaa68d5347c424c316e9870a2496ed9321bfcd2bf84b8db9416a399ed630dde40802ee6efbae8c171262aadb6c3812059b448033bc49d9053db6b439829b686f7a28523531d468482b9192778cd18a971a395e9cdf54d22caca58e01fb6e12467adb9096d4288cdeb423b73268d80a7648ab63ad1c111905d3d844e5a4c5bd9e3459724ce89b99db46ea6d6b20e3d2cf2dc4336f4724cea4eacc22921c5ab1b3b719af93286bde8939bc3bf1dfda290e2f4beebf6cb18600d643777d930486069634e0cb15c355318e6f4cff1ddb2e18c30946aa91d734d6384f4654c7a314aa779db467096c9d5afc2391ad5aec7799eb39cb1634ca89274577081c1eb7a314ed8961347073d986075eacbfa7091a87581194c32d539dd33b8447e0c33789a07f38207f18c5c2bc1713c4b28d9ed53784e9ee6611b9e97a5332ebc404955efc68bbc5758d78b97f844b00406a6f132a9cd393ce4c22b6cdb8c6a175ee58cb306a5adf41af78bc67ff643ef345e6790aa1de3788396b3978e3bf02689d307b65cc25b2ced827e3bde6675a8973bf10ea9caa8ef95de11efb27f8d4b46f09ebcd68eaf3a6d9fc2271990a1cd8e4fb1b4f26f39f069ea34add5f80c13686af2e2b30caea0ce83cf51a7bfd181cfcb4f97c0297c81cb5169c31759572adfce0bf812979a661dbe2ce736d286af108ac967c75719c53ccf14be46a9b06911bece85565cdbe9c537f85251052afadcf8a63c5c83b3d7f02d82cbadb2e1dbdcb2e6c676ef14bec335653c21edebeff2f07ce909fa3d964286b4d1becff1aa6dfa103fe01eca695c62c30fc95f7a74c88b1f313f06bf073f66cbe69c72e027ac766bd3ee9b5efc547ea4958de0674ccabc9b2efc5c66abb21fbfe0c0d545abf04be2c968d8825fc983c036855fcb6cd58ee137f45f1075e1b7e4407d05bf63bfe69fc3ef39c2957b4e3bf007b9134e1ec01fc981b9b1037f62e369faf1670eeda2f0c169fc8550f4a17afc559c4c280ce26fcccbbc6dbdf83b9fc0692d3b47bdf807cb7c81ef0cfe49a928e4c0141fba4527568f38f13ee168768de332a7ea346335d538f0019fbcf981bace695c2118b30f57e5c112eac50ca9d748045ea399fc7627ae93325568eb981d1fca253e8b8fd88e06ff046ed06889eb7ddc642daa42d56efc8b700a42eb6c3398e5483445714b5e01ada5f83707a4b11affa1ca1a1d9788139c994388510855a6df8e5821cd55873d8813525cfef659c42b44c51635dd98c51c5e54ae3903859062f2c24348a0a40d772051c127edc236240929d13a78f57f06ffffc8cab42399262dad36a4283e5ef2a9c548151ae8f775e213428ad554387187821f37b5b853a812348d8ba114d21cad7f182a21c517b76c409a905294236ea433d4e28623c820feb4262732157c49af865a212a45435745355e68157c11b58c208b616578912d12274d9fa5fdd0318fca66e9cda9278ebc4d53c8517ccc70b2255c7ecb835c2229f677c3407a4c917dc8134e92f36660145653d4a5032ee4f36456d92514300f66e9c56222f079e76d30b31af2fcb0082bc925cb1dd32864a2b5e11158c9dcbc45332812f7e275a32816b09316f86f7aae611ed399b3d489f9642ff3a213258257587117c3535578b14078872aba7112770b659275fd2cee112ee66437ad1977a194462d5bc7b0505c4dcc38b9d681450c3fcd7f188b19a2318c7b996fe3a14e94293ede6fb08636dc94d6df12812ec988725696a51a4b85ff989caa36ef652c1337e74a6b63d63983e54cebfcc01056b0e80d0d4eac241ecde17154b05632ca865129a02bf4cd6567b18a59b634d661b550c619829d0eac6187e8dadd582b940996ea734eac23cb59c17d584feeac7d33b88f6c69fbb08159371e963e14c99db269f7b0139b884eb3d889cd34aa0c56a28ae0ccd27cd8226e2ad2c38b7b1cd8ca7c596dd846f634879cd84ea3e6481976d04cd6f152540b33f1e6e33b47edd829ccc4640750c38bb9be5eece24575a41dbbc5c5d8f4c0e64137f6b0ebaceb51cbfad0ee9ec45e416b4209f6d164fe840bfb6952e5df8d032cc1cce8f24e1c64e5982238c47bda964ad45132f9cb7098746b4eb97184b167383ec0516124a96039ea597ea6401b8e719adc2f624950472b3bec7840c87169d1a3372fc3c669a8849d559033fc011c24da70f62a9c84a55ae7868b6da16bae77c04de2b326dcf03072e3753bbcc46c1a72e041713155ebebf5e0212a33abfbf13063b054b5e311ce8cc2c03a171ea50f73d3293cc6a3ead2713c2e824a5536d58d79f004cdaa7ded78920d645aea45038b5b7763d686469ad5eff2c2c79ec93a22956c93b09b680eee9f75c22fafb1d03234b3878cfe85e308083a62b3aee03853696c9c4590e95296495f3121c2550737cd7a10e6e1a246375a64e9f80d4498cc829e699c202779150eb49293f9d2a76c94fd56e4db76c98e935c4b69476c68233a951fed3243525f3c4587051d2e74b0beb35b7bd1491796861a747119e8226b27d02d6ca6685ce82134e375e94b91fce8fd3d38c5bc699b6d38ade0f3ca5f3e227d2b7271a5850ff4a09fb8355d4e0cc811af388b418e1bd5650c916555c485611e541d73e30cfd6b5a9fc208d786a6b50ea3eca9f4701dce52cadde0c1398e2555d3329c672e94950e8c311746ff0a5ce0f6d586db6d18979758cd0c26187051683f2eca432ad08949eaac15765c62a73e4d90052b46f10c8b2bbbf5d2149e658e0ce5bd5e3c4760867d1d789e52e13e2f5e602232ca5d7891178d17a597dd4b428cd5374adfda2f134ba17f06af703658a2d55d537895a9c96cedc66b0c58e3935ae5754e1f5d106ff0a4a9f922dee4ccc96adddbeec05b24aa387c0d6f73baeac26bc73d788729d72cb2e35d798e0d7af11ef1197d4efc17");
        imageData[4] = SSTORE2.write(hex"4558775c9457163dd4195a920106666090a18cc3801013c410ec2d188311a5282a2089c6e9b37d9732c00c655008220a4a912296edbd6f7aefbdf75e36415050d440b29f59dff9fee1c7e1be77cbb9e7ddef3dee090642820084a75f9cc6bd0221c97d10f7091411533f80fb05ba26e3a6023c202165a08482231d78904e625bb6e121098529aea0e4ba92cb2e3c2caca1ba1a1b1e11c82faaa81b8f72e7fcd6493c265090a6dc81c7851f24782f1db2e309610dc9d86cc7930205a4edebc153120a0dbeb233d63364c6d3c2186c6a5b84671824c65b8167050a8b3b61c173a28eb0243b9e67f91a773e5e103ec3239b4bac785140ff54df762b5e12d905993ce5434ebcccecb487ad78455803136bca8f4de355610d4cc8edc76bc21a96585dd43d8ed705f6d735e48e59f00657a7cd4ce34d11384cdbbae738de927e0df2bb92e4dbc210aa59643f8777088deeddd378971c6897f4e33dd2657457e17d129dd8b2051fc8a8d18a0f5988aecd818f183caaaccb8a8f8551692a75e1136e4cf1d8f0a9a0d24f7f049f11649dc7e7e42ad39ddb69c3174cc6e4dd892fc97a42d328fe2b022a33dbf2dbf195808a84ea534e7c4d2d992a86314ea4ded78f332264a8b61b131250045ca1301e936422beb90f67496eccae769ca3cd5836872959806b4e615a204572cb30ce530e99eeae195ce0529d7b183324cd903b8a8bf2e168c325c68b6fbc1b97b92d6ea715df508b097336cc5234ea96ec030eccc98416e35b0194baddf88e99991cd3d24f211fe3ec05c714fc144221fe8aab39076a7a5cd3085088ee2d386147a0408ad8dc110411259738112c5cc2d4ba6ec00985700495e7a4054ab138445f7908218aaba9f967f6235400c4ce7eefe2ffa320d1bdbec38570810316d61fb29e4784581c11efc2352cc3e01d9eb1e15a110499a5765c27ac8ab4a665e609a884353cc36b47242b4b5ad98928d692b86c04d1a4432dfe1e11d57c1931a226657acd122b6285314cbd7d1a1ab9606fef7968853168fe8571c411c5d58c229eb13563e3d00914a0692d4702799cef5ed5e3c03cee8cf4d99128828468eb76d9a1178b959aa65d236624315d63f109240b14a86bdc8914b95dbe59a4d26d6af7240cc26d4052e9a813f3050cd3951c9d82514eb0691bd2e8477bca0a13917e533bd2e955bd6d0419cc46bffa0816d04b72a105994459337664511dea86395c4f7a54171c5828a170e5152f6aef9a6edb386e601043ae19370a149a707a02d982904095a7401ad68b5898a9f0881d39423d0ae35e2c16b6d0c43b7b1db849c0f0584fde2472e5942a9db8991b531cc8635d594393584206e2f6e56129d1825233961119d65bb15c5e79b7132bd81dcdb609ac241f919e59ac12e142a2ce61b5a82934bd29fbb8036be826a962086b050a8e1bb0611db34e6c75e1160a549bdb857cd98f6773af19eb85d53fa9db865b998061d4820d2c51b36908b73146f21e2b0ac845d6326c246ba9ee4b13b89d9c2634f5d9b189e964adb3a2506c0c355ab0592ed8771c5b84295c750e450c172f7dfe8b854919398412f65ed332865246cbca3f3989ad3ce0899e196c63eba3dc1b3a51c69163acc276064ff176600751c6963eec948ffcac1de5c28b34df8f9951c10317573d270dd24ab1d86f9ea714bba8c5e8a27e54898861060beee0914a6d5e74147732a4aed28cddec53626d0ef6708ae98b6771176b4cad2eb0632fc743a4bbb2cb0233c5a0f6ad8145d6d4ed36581924fea41d36b26a5ce4845db855446fec99828375e8bb9d70b2e8646fd5185c1c7bd1bb875cf80147726c4ba76d1a3f944fca2e0b7ec40ee98a2df8319ba0aeb18ee32724c8b4c2869f92a0ac0bf819d5682c39869fb34c4d7d5ebf15bf6046faeded76549330d381f3a861c70c431751cb744c0d03a813d3c34f5dd373d1390137298aaf33a39e5c1b7da368a098135b4e8da3914b23a5dc3d2c2cc9930b2f37463659d0c4ee6a7d4b06d12c0a0b8ab6a085aa34f956a195d945359f864fec8bd036e758d026aaf6533764efb7631f43ea4fd8b09fe9c4d5f7a09d45c7763bd0419e172cb64fe36ee12822c6bdbbcf824eaa2435671407f879ebe24848f415765870906e62dd922ebb99acce6dc521f9abd5ecc461a2e8ca2ef4c8a3adb003bde4515fbbc28123120cf6bf120f4745c0604deda62e33fae439b3f532faf975cba8cb19c6009da634b563901c67d42d1dc03196a86adcd86bc1103dc51d73609828d9d38111aadb58ebc0285b177f721cc7e595ed668cb103c68a61fb144e9020b5bba4d38e933c5209ad4e9c624a91c38e719c6671264f7ebb0bbf6477935b96f7e057147fca69277ecd8b4e64eb1ee9a6f51b4a3aca3d80df121997f4e2779450ca9803bfe7248ba9c11fc851fc9293f8231b96d0bc1a7f92cf45f508feccd4e7ef18c55f185eebcd9eb5e1afec7ca4bbdf89bff132a3afed30e3ef3cf249de5ca9d27f5041ffa4d7b8061bfec56da98de563f8b77ce91b9ac27fd805f5613bee114bfdf5edd253e45e1effac4107ee63f9c9be22dccfc9a52f1bc2031c05a6bba48e3d28c790ae990f71a9eac8381e96bf6987c6f1887cc7db74088fcac3c789c7b8503b3385c7e599ea9ac413a2f6a0d4aa13ce493c49916a6a2b6c788a6734a676184ff3db1863c3336c9ba1f0009ea5d70ce9ebff9c3c8da5e63f4f9b66cc851714575f22c16abc48d1a45574e1259216efc93b8a97498571bd6502afb087194d5d2ebc2a5fcda48ebe26320bcccac1eb3ca0a66dc75c788397ea7433dee4c2741fde12e33328b1be70d079066fd3a9cee7c43bf2f1ed9fc2bbc26b705abb6312ef9161e310de671d06f73a7cc093a159b7df810f65b5afeac747341a7c971df8988326aeeb2c3ee1e14dedb7e3533e00f4dec5072cf84cbee34a5fbccfc9bfaece812fe4c78b271f5f32645285f4846437223d767cc51b8776105ff38bafab6c779ec338371ab676e18c2ccdbd764c888d01c69d98141b4392ebd7ccb97096d321ce5d268d9673f2f7644737a6e4cf525b3fa6798e3296ef1fc779f9d653750a177839943436435e93579971512847a1c12556117b0897f9ac8bacdfd88d6f64c21b4730cbd82669a8cdf1d964685b7adc8e6f5962465b27be936ff80d05926fd18df955ddf053f228d45f84bf4021c97d6604081418557d1081b419b7ee4790407e69952e040be4af91268f42293f9afba0540a85a9d68fda11228ca1e9c376840a634456deac0b61dc99547be27b115ffd6f46453b228854179db846c937af679713d72af9fce875e13ae5d513e0af6f5edd2d5df954cc5d5f6443a45234638119514a4e983607a2959ce897baa116411499ee7ce929492ff18d0388152858e375404356536b2aa065aeb14bed88e34a63530ee245f4608d033a110146ef9c03090cafce37631e5174870389625f98b6027a61ba4e5b730149a42dbda013c962a17f422f52488cae6412a94ade8c6bb70ec2205686c79fc57c66a96f3e02233b1a39328e34a5b8dac554170c482f48d6175fb70ee9ac3d56ba9e6530eb8c5bcd5820760646798b076dc86406e99e0d2e640918aeaa2f1bc6f554557acd34163277cd6dedb8412c0d3176bbcee246610c57ed39876c4ad5d8dc87454a7ee36b4fd990c3fcf4875d582c3252c4fbba1c677093924f4a5fb113b95cac597b1837930655e908f2a85d5d4b39960847411a77ae6b0a4b598ba9bedd82656c83ba13cb854d993528dd4b5788adfef36a8bfb5c5829cc7ea6a6cdc3582553b8cc8ad524db9467c31a8a306bcd2cd672a3aa5e7a91ae137eafbdbe26af7f1cb7b09898a63ee453f78622ac174bc3f56d15d2a1bd951a322d9dc4066690b07b00b751271a0f0a94e21eb19189a54993e47636c4e8d9884d14b67ee5801d853c65aaba6c6c960784f43edbc24c16d6e65e1e471145a0293d86625a0d75d9832e94885c1419569432cabce6412bb6f288185ab18dfcc7d6a14cd647ee24b693c3b8661776c8326bb06027298bdaee40399da86ca8602a266fd9a00595a465413176c9110e9f451591cad78d3b283963fdda4e1beea4523475d2a774374516e5cbc61e92a3cf1dc35d224640b20d7b49b1a9da0e33bdccebb09e8785dd483d28bd23c53e3fcd14fe07");
        imageData[5] = SSTORE2.write(hex"4558775c5367177ed824605bc2ba409015080985cf7e8ecf565bb408b6a205b756c4d936eb26dd2d9080212008088282802c8ba37befbdf7de7bef1699b64aa5fdaebf5fdfe7fe7972ce7bc673e68d3d14d0040138f39c66271c0aa50d56a8e0c446db31c8829ca6dbd2e78253c8061bcb72e11254688c770fae145450e4d2215c25a8f088ba665c2d28188b2cb8865ab2ca0771ada0a6252fb0e33a613034b9fabc295caf9061210ae99f5cdee53c861b84b0d6b0ba1d370a6e789aa7c8710c65f4d6b4b9d18a72850c0d54484daa1315742166f530dc423220b9ce3e0c0f3dcaa81e41a54285879ea624776e9f6d1c55423a50ef3d68c10e7a9cee3b002f8d1ae77458514d3b919e45f0090ffd0cdec2493b6a0437c45891875ae16048621e760ac25f27a34ec8f999bc5da8272849651d327609c9d0ccd968a03352be1d8d820a34d717a0495061517b46b05b3c0b4c388166461c7fd1385a042b387b0a7b9848435e2b5a85ed30695daf136d42322cb9187b196b5c551ef6b11cb216ed46bb885c6b58d2ea184287e0fa271558b19fb251a5dde81436c2cd7b6c63e822a2719e0bfbd14d2ba9b3f7e200314bb3a387ae9aea17a297c1a794b5a28fbce89a02f413507d791f06142ac8efb4ca83fcddbcb61b37a90919c320218aed91714838a58ddc39e8c261be8bbe740c47185cdc9a491c15f5a389f1add86b1dc1cd644b2b1db8857a756545b895f98bab1ac46dc28a7ffc417914b73365a9a77007ab20c333b70f7732da64df24ee1236b5fab2c553f238ee5673dfe5c03d54143d17f7d2f7b82587701f336abc09f7d386aeae6b140fb02e8c9bf0205b3ab3c78187086fc2423b1e26a08fd02d696b131ea5be9c46db301e63b019f2713cce66cef62dc3137438db2be3494ac6f7b8f094a03486cd2e3ccd8230750ce1191acc9ab317cf52d25c3284e7142a24e0b40509cf8b58c2a571bcc03e94dc6d789154b2329e5e123e6b66542cecc2cbf42475971dafa8d3b2cd825785ce20830baf898a0f9b51d0e69cc0ebd49a52d28437041590b9c7853789658cb7156f8997811165271b9d785b7880d453f204dea12273a303ef5291d95782f79821e914de674e627c5df880b353aa5d776a021f129a248f8c8fa826d6d3858fd97286c3d6097cc25c24743af0a9508494cacb076cf88cc33372e7fa017ccece908e3847f1855a009513f852f8a78df7e22b21191259b6fa14be2608294587f08d9084c9866fe95dfa1607be63f5667bf13ddb2727bf173fd05a62ed7afcc85c4daf2ac54f1c5d1115079df89930463559f10b454db36df895bc08e7187e238ed27a277ea789cc223b86d8cb11750338468cd3bdab5a86304ce0a6d74d614470359277c3800ba3c2a1a0ecaa53368c31c8ac2627c6397be25b30c15cc5f82ec671ced2c4e226a520fea0d5e97557344ee04fc6923620e304d79ed98793ec95849a664caa1bbb7b187f11ff1c7908a71898a9a41553e419721bf137a9d84a3bfe21aeba92b6630a473441e25ef869d85895a3f0d78871165b5d7a08018209f38226046a88e4013b823444b9ee24823502b994b2c1133242343c4b3c853242a957bad831018df020546943ade0054ab59332c2346c97f256840bbd7efacaa21e2ba6d1aaded78c33c8cdf4ccebb1e04ca14a1bddfca71d67a90eefec4404a9cc6d0ee804a549ab5e8c48a128d4b46369bb035144257ef124a209434a9b1331c2484044f57619b11a3149251a48ec95112754fa47fa1aec13882737ae700409424998a96acb61e80533d49c6f4522458d25364ca72fb16e1b92683dcab7a909c9444baaff03296ac0f671a40a9403252bd2843b904adb6d2330d062b4bb09e9b491e1ed400679d2360b8c428d267a08996ab96cd90f93e6df25169e515eda689b8059b083d22d23c8a270f2854770b6a08293955eca165aa79964e4d0d3f82afc8721194b5d9821a8b0e899fd3887594bde6ec57fd5f457353b463093798a70bb308b7a744abe67938af5f6620e2593ba1df89fd013965e3dbbdd89b96a90e71fc6b98c29f2f018ce13ae06248d619e20c27563982fe4a619f22671bec813743bf33a71012b3ee33ce4d26fa37b936b080b343c832fdbe7c242b5527675e042c10c4df12d6e431e7d8ba95f86456a5fd5ac6d44be501c1c5fbe75d08102611539ed58ccaceadd17e12236acaea6e8a81d171383ec55adca09b48478e92bb7a1906f75f3652ca58349de012c1346b48685b8841693e7a0882867d79f4031f1d1976fc072767d84efa40b2bd4a4bb65ac24c8c616ac22fed1157bb15aedc5d54358432463dd6b9a65ac155cbfd8fa71ac63c56579a7b09e23c9ecd9e0c4a52c2cbdc78a0d6a03d68ea344505ad392ddd828a870fdb963285521afccedc526e16a5886039b590fe66a6c61bcb19ef9d84a567a2db6d1159d7b991ddbe94afa46272e638d27d4c9b85c441868aade3060c5151a9ede75bb1db008f634a33b4fd958563e4e19b4c24600a41336d859833a3b1cc451af2c579939cc1a8653c313c506171546d41dc795948b2ac55594d38fe26a229f5eb81bd7a8b35639a5ae158221fa315cc774a6f63b713dc3cb28dfef18c50dac83d479077123f390e45d8532f20cb33a50ce2d96e541854025c8e42e6c875b680dd055ac6970c1a38e02dfb9a854c7eb057da8222f7db50d3b1860da18bc8c29a6d4816a3e8ba9c9878f3933db87504334637a5da8658964ce6bb063a73a7aeb16289fec758434a66502f51c84293dd8c5ee36d56e4483d0e3175796df89466633b5fa0f3411477d9d13bb59bf19ee0234d39db3f75bd14249c3220bf6a8e36c721cadac6de3092bda189471fb20f6928adc7e18fb44142166dfca4617da89714cf54c65a777d0bb28658befe778916a8b8f3ad0c9bd6dd8d1802e355d958547d1adee22cf711c509f565f228fa0871b4fda3665412fd9e68aed8332fa387122ead0cfc191b506036a49b6da7050a809492d9b3d889b9884f8aa2d1854616870e2102dea961c71e03037fc116a4cdeefc451fe7e330388ab9e855b185d843bb701b7720e24cd9ac26d9c0311326e6707452fc71d82f0934a71274bc8e0becc8ebb980a9d329bef2698a945bdb8870935cdb7e15e3a751f1312eb2bc6fd3c38a4f2622b1e206a52331ea4fbe9b94e3cc496943ca59d321e263686b53d7884fa1f2582d2f6563cc6564ddeb11f8fab1abd87f00477619277eb009e542b77493f9e223c31e5ed785aad8cf2794d788699d0ef283e8067d9ab19b527f11c9b257a6b3f9e274499ca67cc0b22086d7a51bfb2625fe4ba49ac5e35829754cc944fab97894d5c8d72d9bec22d1ae59bd9e7c2ab6c7cc99b8fd7286c289bdf86d7d54b7185056f30ee04ef66bc4984ce9e74e02d36a5543c8cb7d54ba9a607ef708f457ad7f64de05d76beb1441ec37b4c78749713eff3696c8b0d1fa877b8fb003ee41ad779977638f1112b36abfe003ea66c52513b3e612a3f25aed9792df88ca98c5f29e373f6bdce53da67c517ac5993055f725ca60ce22bcdbf1fef8199f89aa14f5f66c1374454ef9db7cf826f39bb935af11d0b20a53e1fdf731c9a65fc40c88c97c8f8913aa33d0efcc40ec9f2765bf033cf6d9d6f8e92b45fc469ea6facda7648390e7fa51953a10bbf1117639b8cdf99e184da7e0c5132adcd8163ea11ab7c930eb349237a30a25e1bb9768caace9676628c77817404e3bc6f93954f457501d617e0b8ba0cbc73f187da6b8d32fe6449e76c1cc2093a19dd6bc54976697cf966c5cd49364e56fdac4efc45183306708a2f734ada30a5dee1ab7bf1377bf3f472c23f8c3d63ae43e10857339441e02728ffb445fdf0175440cc4c0b02b4e22321de8940ada8de19b55b9c0812929af4ca2e040b2ad4d0e94088a0024d7d16848a87a1464f83051aad2850adf6df6c861a7796b4da8711a615ff24a7785736db11aee51fddcbbb314d50da1c65539d2128bf94e5933893dec47a867016238c546a2a82efa4521b74c29bf038ef8a2e44d29b28d5e9b26644f351f47a0762041081d31d88a5605c9515126d999cc71147348deb0e229ea8e40cda90a0e5e15c308cff03");
        imageData[6] = SSTORE2.write(hex"4d58775c93e7167e902544db26ac2f01040249188ab68a555c54eb4445a48a580407d6ec74b7420224614440042a20b24456f7de7bafbbf7de7b2014a8b6bdf4defbf9fbf93e5fff3c39e73de339cf39effb252112880c03101ee56fb721511655e1b2383fbe7179930d8b6439225496e749ae4924092924a3a21dc93caaf11e6f428a502e48d93a00bd508664d5ce59902a94f39307ed4813caf9faca3c330cb2b860fed59351defc01db2c8cf4acad1cb2c144cfda95534817ca053adf1a3b3284322cce7d059942b9d050d86f41962cce0f9145a4b762316b8bf3ac689bc012d6663a348c6c7132c218d860c152c5ed97935826fc441a3cb851f851a5571eb54ee126a2a25fd187e5c24f5086779d032b689ce15bdf3b8b1ce129423a8c95e26484b6ec1c6e66d5c9f5a30eac129641ba6d58cd63ba69e432b7453536ac1112127c0eac1552a87ab313eb68a92e72623d750927f7608390820cdb6cc8a3a4ded98d5bd82ea9741c1b85146e6a588d4d2cd7e433e356829891efc266c68b2eb0608ba87d5e7aa050eee356961b75c0856df4a3ce19c376ea163598b183cd4873efbb807c12c058ebc24e21056b9a27b14b9886c6ef73ce60b712a3c08e02212d4c7177608f906e902edb51c8835adf9e26ec154a554ae379143146a6670b6e63aadaea31ec13650569ab0a062cd84f6d9a7f078a997af69ab6491c5088efed4109d132349a71909dd3f8fb703b13483bb51ea52248b8da9d77da8143820021195750264c23a31bd7a29ced317a76e3309b9c15b0e008c730c12f177994d9a4c8401e53f8d06f468588189658bfadcf8ae39c1ded11dcc154d3dd6770822398543934013331cfaa1f8245f8599810281fb6c04a40a4e26e0b6ccc3dd5370bbb500647d77738e1a0ade164450f9c4cd0e0de0f179337e43a71273b14b5b105771183cc7e27eee6b9ec23a3b887fd89f194e25e590a0fbe9a9e0ef73197f85556dccf53292d763cc053d2a9763c4806ea0b3b7092b4d2d51e472531363534bb50c5cec5357eed9a825b71e42d8187eb21d6fb8505d51c1829af0335a487c6df8d5a65243b5df052a72e18818f996b4626e1673ff40d5d36d4890c42b23cfbe505554fe08c173f47037916e3194623818b6d7422a0ec9256274eb139d9f9f2d66e624ce9d66634533295bbd042eca48015a75995a9c38256653ebc8771867d339559d1c67d9d1928b2a19da2d65d71061dca7e94537d8831b4a5569ca5574de5043a652934e86ae25d5c9b89e7d1cd5ab36e9fc439a15a2815a187544b74ef1fc27936d8749b1dbd4c3245de787dc23432fbc4b815fd74935883016214eb6b766250e842b539b840183425760c29485b2671519cbb7ee988dca261f67a99bf18236c83b1da8951a2107bac07638a537f21c6a98b9639fb3099a82f3963c323344dfeca8c479525d6e6c4634c3475071e2741e2f6cde0098266b44fe149169f74b86b024f11279df7029e66f80cbf1dcfb0c2b4be4b7896baa4aa523cc7a5a9a9dcdb69c5f36ca66e5d3f5e208a5907bb5c7891cac52d56bcc46953f7bbf0326fc9d840bb15afb053fa7c0b5e5552df7c01af3183cc6d76bc4e8853e7ac7843b899975d76de8e3789786ccd25bcc5594b3b63c7db5c8cb17b3bec97f00ecb8ccf99c3bb4a0235a7f11e4326b44fe0fd6f58daf1011783b6bedd398b0f450ad036ac3c8b8f38c4067fd30c3e160d9aaf99c027e2688461c3a8731a9fb22992a7fc34bec5fea91b0fe0db0ad164f67c8792de3d86ef528af3baf03d5222c9bf02df274089b516fc8018c4ee1ac50fa95b54e7c28fd8117d512f7e4c29dadf8c9f2894e836e3a78a3430819f2997980f3f270363acf885b2897d76fc92b5675fc6afc80de9a07c45fc9a96cbe468bf211da3ba1cf8ad38a75277e377ca4a6a71e2f79434655fe10f9c0c634d0ffe28d0bd7e6975eb1533fec4a493ab7af067e581e11e98c25fe8285d9ebfbf726169dc232efc8d30691a3bf177aea2183ffec1320c0523b3f827abd777e35f0c68f45af16f7633d3b31313caebb2c78c4b24b84e9e8c49e57ef46ec614134dcb1f74e233f229ebcb1e2ba6c962d3c9f2393b660841d25627668963f2590b3e27c6b1576cb8ac6c1c8f0357985d8ccf822ff830d6b7e14b123ccd57d8e1c257cadbb06410ffa1e9e2ed9853f6d6392bbe6655529e05ffa594d061c7ff94e7e6a853feed5a0848a78e5a2710a41221920e58314f752d44709615c12af191a1a9b1cf2044a55c7b1d081552a4aec28930151f62eb2c08a7a5b17a04f329a94b2c8850897b26524554aa5d50092922be66180b54dc09bd0e2c14525072b103d7890ac2e22b8bbbccb85ee41c99b4093708d3051af72cd42a8ef5710734420ad179ac88627869830dd12c27b9ae0731aa6bdf531129358706e52748ac502f8cf21d401c6b90784ceff81c5a06d7ee7542479d29a70df1226b95de73e8bc0309442563d3001285149a78aa098be83f893e52dbec48e69994311b52447b82a4f2be09e855fc0ead189e412a4b97ea5b9046c950b71106762ba57b1a46c2a2f7e5c024a4f024ff18d26919e5df8d0c514390a9f6448b0399226448fc896e2bb29436c96f9fc59462bc4d58c286267876219b92f6e0309632a4616f179609a79131972d33b89158dcc443f11bc7b09c15c5055c58210e452cd96a9d460ee1cc2e398d95a4b87a87fc91c856a6e658b08a07e34ae517da6ab230a5b409b94c2cd9db81350a5f8ba6b09652624d17d6a9f8651c28bd60c57ac1c950e90a36d04d5cee43c813a6c1da9303d619dcc2a626d57d868d1cc098696c522a2e1ec5ad3494369bb159b8599851b5ab73025bc8bd940a07b6aaf838f29f93bf149516079663bb88312fca831dc23238a64c7e1ce43348e61ef9435128e7a92b9ba6b08b9867757e86dd6cb0a16a04058c1f5f3d873de44dcc2d36141255a3bc63f62a75c84f9e22116261ac77fb006e53d680bc62f7d18da1761cfb1930ba760ac56c40ecb01307c4c486a9bd6b5b6db32811f8cccbf41f1cb0e220b194ba6671bb300fd65717b539a750ca4826ef311c628a3aef1cca448a61a63dad3694934ee9ebcc38cce64a95761ce1416d4e178e2a08d59cc33166605cd1860a124fef3b3187e31c255d6eab0577309de8c14b38413a4b9e329855d7bebf82d26111ad0c4b1f8295cc8e2deb874d0010a2f1e674cdc0ce64d49e223868ab6bd8052703186acc7009704235751bcfda667027fb9e5ed58bbb58bfde7d0077abf86752b76316f70811baf2a64bb857d98f6b67701fd1495ed38bfb79bd441d19b5e101ee2fa367ee121e24206a4f5e2f4e92c1091516545299e0cdef449540019a26b869296d188247a8c28d5da816902c3056ef949b5ef38da64fa2966311e38097036d0814cb4f4d1f6f0483afb4d335033fe967681c421dcf66e4a25e9cbd4eba7987fcc26e10caa0e4713412bd8483d308508a2fecc4297249df5880263238b561a7fc6e6b56764c5eb3fc846d21b6cbf639705a40a24af35f76a095e04a9e43ad38c32dda4616a6b59ad1ce88d97bdbd041b0161dc6435c6109669c25a87175b9e8e4acabe5176497c82b5253b97ec8896e3222dab37610e7088dd68c1e8e77a2fb32ce0bcbebd26ece9d412fdd46c96ba28f64c992bff6fa392eeafd234e0cb00a9d7f0e83dc6109fee62f70415937ee3d18e20e4bdbd46fc145a228f98bfb6d18268a4b5aad18218a6aff6a2b46b92692bccbfb647a8f9131d9f247ee38e3a6366c74e061e69f5e36884744dd11c90d7894f83fc68e67af74e171e5963e3480273886c945763cc9de649e33e3291695e975e069656b1738a6f10c6f0d753d9e6545d1e3163cc73b5b0a14c8df69cf539bb96a082f888337982ee345a6a6f198f112efe1f875cd0ebc2c2c558bfc788569478fd8f02a5d1adcdd788d9b25badd86d74962a9366778126fb08c8cc35d7893706b027d16bcc5261bdcc77bf1b6f2f8a9df8277b8cfa26a578edbf02ed1964a5c788f8fc0b806bc2fda769557a7cdb3f880f4cdb8f8393e140b34548d8f988f54efc0c74a3b8a3af109475c5d68c6a76c477ac08aff03");
        imageData[7] = SSTORE2.write(hex"4558675893571bbed920892d8440d821248421d416072aee0d5851441c684551b3d3fd7d8404241141a080b1a88003cae8b7f7de7b75efbdf740a8a48a14daeff5ba3cf7fbf3be9e739e713feb3def63d140541880b0acda593c2e9032c933812724141d21a1e84c5fdb351b9e14d2397ad70e3c25a139e1128ad47a8b9d785a0843e37a6d78464291a1120a896fc4b3424f88a6655db713cf0961a4d183e7c53d45b2fb2c5e104ac3737c1566bc286e4666b9076d01bc240e07e97de7f1b2381ca65a76ca82570873ef1ab4e155c612d37519af49481179c33db5a7f0927d12af0b27a2b5cd7883b1185cc50ebc29ae22bfd682b7c4c920fd1abc4d77f31b4c788736d4cd3bf12ef9295861c27b2424e3a219ef0b0b50b5aef2e303d29ed361c58764cbe0c4476427a7091fd393c4b3667c22e840aebb6cc08e4f455021bafaea11f3043e13c7c393d60de07361335ae7a91ec29810066777987059a0e88cf5b3181746c3721c9810a210b5a7075f5067ee9d365c112e28f4c72a7aed98648da49776da2610a0912c970d5f0a0f42350b2f597055c0b9898bfb27718d0c19a72631458754a3365c177a95b93bfa4c939816d2485dc3267c45ded346c63023d406256d95123f2b62094e1bc6d7ac989c65267c23b44625fb4afa4c5214376f2a138fb43910246078e692ee31042b6e2a8ac85d8b10053356388a508182e3bde30853dc541b1ae32bed72205ce0604d6b9154f0113c9de71b42a4b0129ddd3c1c40941086263f64c31c218cd07b975c42b41086c79705a01028c4b8fd0294024518973a3097cea6f9700b7526343b70ab4091fa193b62847351da7dc3ce0062e94e6af9e815a8849ed0643be2484841a7fd4ba829d30e209e84e4ba6a91a0605fb827a1215217762191f6b50d9d4822e7fa1b432559b8a334ec1992129d226c04a9bd48e5cd249715692423bbe422d2e99ba6f14817b43caa6b0a2043680949b1412744d1092bfcc814f75070512a58bd1022aba20f06210c56afeeb2204bc0c89806bf0946014362ea575e40363d486c2d1f410eb3a37655219728ddb31979c21f85de83792c07eda929e40b02c20a16f65a0228507006d738701bb315e36bb706305f288a4c3983db49658a6faf0d7710c6792d5fa250c030ede65e0b16889b515a3716b2400cd3262c5270b0af6cc76271303aa91d45a4757ea70d4be87986771f961269f659b08c28dfb71bc5c27894c1258dbfe5644eddd0e1c40a61624ed205aca42caf7cc88c55cc72d6c035aca66bb19b6c58431bc68a41ac55dc1c7f0a8d679ddf3c86754c74c1d571ac67816a5a0ab181b4c698c6b1515c0d995f777dc631814d421c14536ec66681a2e2a5815242b2344d669432b1b9de5a94b10975be096c21e59a7aeb24eee4514da11f5b7934b6d2827259e61bc336a2b4ca096c671cc6158fa0820592ef5ad9e7c00e3a975a3e8d4a3a97218dd49da43db5beba1b556caee4637b24de7731caec93c3d84d82620a87b0472e82b56dd8cb56cfab41356937eceec53e36b7b6d98efd94c51cb6e32ec6983065c501ce4195a7b06b1235f435a5790c0719577273515f00873888128bbb2da85570259dc16166cfd862c1117a10db6cc15171303cc90d131bd850d2668799c5a4ebb0c122a188901bc20258857585a6a9b2c7041b033656c1cea054e76c7090a7e48d7638e55435f7e06ea12622cebb7ac0867b981c63bb19f732e024df0cee939746e304ee27df79dbc7f180d0833477d1a0030f3253696593f896884a91d6b2d1826fcb392f3d873a7a3e6f195ce264508cafe72aea599049be513bdc120c0bba61c5c3d995ea3e6d4603cde5b70ca291aea90f98718c3515b7b9df8926b66b92abbc0d5ef2387fe380fd0a7cf28e5a3e86e3a2cf22f5dea261a9259a99bac425b338c1c599ecdedf6e418bc0e1c9f5a7a4ddd4ca40b34f0ee124b94d6a68471b35a54a53a35da43624151d1cfef3cc7848e6aa71113ab95e53b78d38d0c5b2ca6b77a09bc51257d58d53722f17cd04e0671164fafc38cdada1aadb8a87497ab6d76f430f5798c68f33dccb4627ce52674cdd8c15e71850ec9a19f4b23cd2bc9bd027175db905fd32dad18df372912de8c70541da1c5dd351898a8b6c9c84165c6243c6f75b31c05426bb765fc420f5a8965ec4231cf5393bcf61489ed8072d5730cc91945267c30893acdd7a06a3f23eeb36e151d66a8eafd28aef7029a90a079df82e39569dd882efd1f5d886d57e2bbecf1d356f003fa0079a860d3df821892c58841fb1e76307f06396ab61d7107ec26b59db6d57f053795c5f7f183f6303fc9c19cc2db5e0170c4f5763c62fc98461a105bf62851b1b9776dbf06b529a757512bfe11433362f9496c56f3980d29a574ee0778c28c78bdfd34a564339fe204ff98a1efc51fe9a3305f027d96b69e9ff592e4c6f29fec25ad07afcf82b2b3adbdd3681bf312ca3f424fabbbc4b5d0efc83e358dd705afad4faa7b81aaaafe9b4e35f6c46ada7a4dd8e7fcbaa0e9af11f218d4c69dd3d63c17f795ab3f7b47302ff236799d2a47f8c5da76abe8ec799ad742b9e60df164c07f0a4501392d758346dc7530207198b476c63785aeea5323c431b89529b3dcb6faa9cb3788e64ea97d8f13c2780e6385ee0ad045f1f5e64549a22275e12e6e66a162f941e502fb37774037885959cd06bbb8c574997c6557411af310dba210b5e9797726317dee01c8b77774b1f996fcadf5edbf116f79cfa78b5096f7306e98ef5e31d8e92c4d6c20ebccbb9ac3ad081f76832d6b716efd39f94d5671cf88094c7d6faf121f749beaf7cd08a8f5809ea623b3e968bf6c4fe61133e614e3465a3f854788b8c0e7cc64f35d5083e97b76bc3801963eca6cb5460d8e5c4381957ed929e93f43aebb4055f30a2bcd683b822f603523cd5338e002659f849d2fb3120b33a62c697ec73e3a353b84ab5ea0a3bae91d48cd6611ba6389212778fe23a8b2cdeb5a4d789692656573710c05772eb559dc78cfc90700f6356de93eba497fad71ca009757e07be9187c809bb9441a127a37912414abe569a2c081628dad06a47885238a472cfdac7114a9ce35ddb654218ef262e6f43b8929f588f3a10a1645b362d40a452bc07b24f224a8882741b463147297cd55549b3205ad808d6f9b69e3743a1e48869390a25fd33ae3261aeb81a995426117f8b1046e96b6670ab50149eee5b76c18c18819179bcd03f8158a5f8d512d7b4adcb1c804ac9ca3cb11e718c35d753297dceaa855411bfc58678218dcaa9dbe1b7238121693daba011d2b0f4fd1dce49248ae843d3034852defc0488ca45b2923ddf588314114e7062f9050b5229547b9d4823bbf1ee72a48ba3d0d65775424b61aafd3232683eb9a9579ad23a6131428d4ca62c65c119e819b2be3c0083b8a78c77559fb6218b67f34e5a601426a30dbe5913b279d5e82d470e7d4d715b902be20d4b73204fdc0bcb69ac74601e79cc6b3a847c6a496d9f408138aac8f7159fc66dcca7a6ee2ecc17de2932ddfdd609dc2ef21716db52326499c41dac1443b5138544bac6762ce0655dcbf53e3b1632bb06efec94038b9462442c166485c6a2880951f93677630959ce683c8fa564473df2059611192c6328567258da27b19cf930346d3865c70a59bacf899574346f750f5691822c6fed39ac164c2a558358c37bb1c50eac253bb9b649ac6353a7b5acc17a5accf0969c1dc70666d658bf5d7a2a6ca4cdfc969dd84423c6596c2688f5a184e989f34b4f4a391f3d3694099dd2c49d328d610bf39cd170c9843b294e69ecb83a81ade432a17e651bca793ad9376dc636713a3ac1b7fc2107b60b2f82133b51c15192572fbd2b050a339c1d43a538a8305cc04e1ecc6d1c4015a783da73d6845d6428d55583dd4afe0babab9126e61e5ecdee7362af923f747dd787aca8e65dc3c915d8c73ac86ce9c07e36b7467a58720ea4d4b5e10091b1a11f355492e33d8483ec835cdf4e1c6242d2eaf6a396327d9b1587692ecebd1f47d8f9795d57cd38cac6d394da619247d8ae4198c954f2f43558d894b91e5829320e386013353f470fbb5c566d6638a83ead74184e41cbdcb8c587a582b89b9ea9f738718f6cbcc18a7b19837ac484fb984fad0df7cbd5d7bc050fc85d75cc8f07a944dbda83ff03");
        imageData[8] = SSTORE2.write(hex"4558775c93e7167ed841569330020184981002cab5d751aa5eabb72275966a51b175555b93f025b9bb25248110d11422321444908280deeebdf7de7bcfdbbdd108388bb7f76b7ff77dbe7ff2fb9ddf79bf339ef39c73de37d72601f131907f4a068ee33a599a142b4bd1a90d2bada811624c5a599304b72caaa2653152370bb5e2c3d8b42b1df008295ae777c02ba4a89c7e2b7c4242de964ed40929b13020a15e48934acaadf00b7faad49a76071a8498a477570c2020ce2665355463872c25c4fdf6654e65bb2d8c46a18d31cf756027bd987c2eec12528439e04050a411535c81eb850f98eaf61e4793b09a943a77b7731ccde2cb388b7706424a968110760b3bd14521b430c9e90b07b087aa829968652c458d97a18d07d3fc1d68278aa921073a84f79854ef8a1e097b79d6141cc23e61346a4a009d8438cfd7872e914562913fe4c27e214eca6a6876a19be94fdee8c40121a94aced9d0c38473dd0b9d23e825c845ed561ce4598dc7813e86933dcb851bc895acc0d038fa15fcb74b1810b14e92b1394495a92d8c41c261ac9f852161253e23b86410c3428c525f1db2e230bfd4d69fc5114a1ab70bffa69dac795db8917117af71e0264295e5c6cdc2666449b94c945b889cc65f865b45fe51fada591d4edc26b409c5c1106ea78ff4451db8439c8dce6e281b74e24e92b7a0ca81bb843632d3173ae9c4ddec96a9adb8879cb378712f4f9a8383b663b88f289bcbdb713f2957e093f0007d9a7c97f63af0a03084e2d37888cdabbbd08687652951f57bb176951db48ee011924b5f73008f0a35d2021b7ae4523f46d369ee35ae113c2e649531b0ba3f8c270894e5a23e3c49f073eafaf0949022f3834bf0b4084a6570e0199ac90994f7d8f0ac50c6ebc2788e38a497e179f2495b3d82178857810d2f923f7987f19232323c125ee6b9bc637885ed6bb9481ac5ab4a572cb5e235ce0fc3e2162b5e2745a6c9347883cecd0b06f1263b3bd5538eb7848b44c31cbccd7cd4de453d2ebcc36e9a36bf1aeff2c3fc0a2bde530a22ebde6734c5d2517c40879a6547f021ada8cf74e223d2be3850e9c0c7fc5017b4e213114d526e2d3e15d1c45adc33f648f88c49e5f5b9f01fb223f3303ea72ad32fe10b125bdb79145fb2f63981d203367c4588530365f89a5552cfc3379c6586567c2b84845c3fbea349833784ef997bba27841f2859e4147e64a714faaaf193d263fe35f89961ea1a9d18612fe4ed73e128196cec96708ca4307a109685b8a8df77138e939b05be1518255ef9c318e39ad079e43d8171dad76decc009f65aee95cd38c928f3ea16e114979fd1bdf0104eb3d046df069c6131a7f8077196c5cc5b7b00bf301a9d9cec04cde883bd2e9ca37fcbec1efc572863b3bdfb25fcaa346ceb1890ccdd23efb008214dd2d55a11992ca02818459450c5a45e21215aa822b25b1023545145654ec4d262c18e4b1027245571fd32a88414ab96475b7cb2802dbd6efdb0139392c546315e214f96041e3635399128a4f8d47d1292c4d1c8e21d571f42b25026e97baa91c22c34075c384f841a95bd1a6a665150eb84865266fd22684538b1f981d57b6d48153e90efebae469a1013f5ee39fd48176655e9cb912174b1c64097153a613752dd1846663217fa763bb2e8c5e29b21ef46bdd02698d61d44b63014a50dc864cc118723d48ddb87c7902be4046dcd5c1994c94c4033e4409ed04665340c9d96902f8c25181a96d860606174ad273025f9ff933aa63830b74f1a81517c8d7cef5af9466512c7238a674a2860f6f9bbb61d85591c4e54fbf79c76a050a09150340c8b52e5901345b433f9d26328a62ebbd28aa9c24cb476c7e2be6a4c231885e5132861558dbb8ee10facaa65c889e92c4e6eaf238cf385ff38930b7f24e096d27398c1c873b7568731539c8c996ac52c323ce70066d346861f1788afa2f3e6c863bd9475d10766397121e354f738304721d5e018e626f3c67606f37830bdb10a7f125662d401fb09cc17d9c7eb8265cd365c449fa6abbaad58c07a15ee1cc242c2685a2ce1cfec064ba01917f364befb1c168900224da328a3cba9ada79d58ccef8cfe852827c0eaeb255c22be4bd20d63891062b31bb1945964f8ed584676a7778d63396de45f528d15b2141bf95b59b052788e28d829b3ef52f2dee41990c2a86091cc0d6db88cc535fa07b08ab966789661b5f832ce523fbfdb8ecb198db1df814ae69ed31ec61ac6a65b358ab5043477d7aa01ace39cd26f73a28a50646dedc47abab4c86f8b2bc8aec9ee7617ae54a8b7c4850d4219a70bac91b09113aed01ec6264a8675fbb199a166074e610bd99ee19e31e1c2550cafd8bf40c2567e6a92c7cd3656d1d284ab095e967fd15917ae61d2c6f6e3d84efea9db24589508fcedb0d18c6e3deccc43bb20846a8e074bed552d9084989c73c1722b1cc97c505c76084e4e3b6d175cca78ebb3e32fe23b55a67b5d17feca91a5f19d9918c7df68c7bc2384bf9363a65efc83dcb4782724fc33997797f21efc8b6d9be3ab9ac0b5b21813f19bf23ae14055e85ddaea400deb58226f1f37dbbbc8895a724cbda01b1e82a8f76ced94e065fe857515127c3c6c5ad7813a85481bada82773ccc17df02bab70cb301a78d2d85b8d00a5a2654eec60f2eada413432f21c5fbf7c3bdc498f9a4e07769156f99b764b08923a969a4e5caff4c75c3b9ac4ec4ed0042e6eb18da199fba768b9fc860e294c9ae7c26e4ad3970ca085b86afc0323d8433769dbabd1ca1268971e469b8837b2c03ba3d385760691e3ae440729317d0ef672fe1bfcd8472b859e303a951b46d0892e22a9f3adc17e5a34f8ece856465c930b0784f798cc60e5b0fc88649da736cb4f48c6963f23248de3a03286aabad127c241890d37b0ce9ada0e17fab981b27c97638027d3b7e110099936bb651c83acb3a9611986a89c5cdf62c73051cdebb7e1b002dcae411c21a8055be4372493cc9e70e2465e47cc7b7113d78a618e731437933c79723fdc42495fd5895b09a3b9e10c6ee3fdc7e2a918c1ed82102a9da774bf731c77b00d4a42b853d933f265c989bb9475d1781c771375dd6e3beee18c32d674c98bfd5e6ab5de01dc47d40d3b37ed76e07e5acaaaabc603ac81a1d78a0795cb55c7181ee244cddb34e8c0c3442f75f3413cc2a38532cd1e257a93e597d863ca95b4338cc7b996f2fbf084b099a42bdd63c59304b370f89484a7941dbdd486a709a679e3613c432e65d46dc3b30cc628df2c9e63cf66559dc5f39474ce637841b8883774db47f022c1d1cb83f72545aaacc6cba4d93477355ea14375a903af2a4de0dd8ad7444e89597ebc4e7fd31a17e00d7ea6ddbc076fb2cbd3571e71e22d76b2cebb790c6f2b7de6b7e21de26d5edd358a77956577c485f794dd7b8d0def13fd928d4df88060e8364bf890468b65267fc4b82d5e091f2be1782b6df88466b48183f8549991ee13f84cb913c9ef477a30d7afc6e7ccc2e03e68c517ecc76c37be64cb65fae429f71583c908f4e06bc5837c29f9860d68aab4e35ba69b57e7c077d4a9bde3f89e08673496e307b22473e6207ee4b346330f3f29f4725fde849f19cc9495c30e8cb015748132997d4779dd29a9e8959f91846aea491bc2a48679fb611c67e4b9cee31825c1b3dc15182338ea1d768cf385a40faeef3d8a13ac6af6a6c1719c64376877e3140957ec0fe334ed4c69588a33f491de6ac75965cc04dbf10b6f08992e4cf04a62f6cc92708e75d3efc77f9952b66f157ea594b3de01a4f015e31b46448a6086bee18c1d9142a9ca6c3b8aa814e55de140740a676cb00d31e24395656ddb3862534439b476c4d145a6af142aba30d75484102fc46883577ead4c121faa744e24880f915b6545222573e51092e87eba3cde92294da9eb404a0adfedf27de83c613226c7033533caa8dd008d50c5a6d7404bfba6baf9481552caf9f2032d4d44995858376043ba50c6166d949091c2bf01e517bd8ece8beac691c9c00c2b2464f1a4c93b1b7a9e34cfdf876ce2a2f6acee440ec1360e58919bc2ff8ada1d984ca319dd36e40929baa4ac13f94a916aba6148e1ff3fce114c112e6234a5f23e35d2686ab3fc6a4c116f504dcd851d61fc0f");
        imageData[9] = SSTORE2.write(hex"4d57775893d71e7ed9d35b02044218819004084a6d9116b52a0ed00a8e2aa2806045acd9e9ee051256402241642320160a42f7de7befdddebdf7b45aa1b672f5defbf93c3defd73fdfe79cf31bef6f1ec3154058108080e453666448283450427ed987902940484c33b2c4bd70e38a191805826e6c1ed90245a6babec6628122f40d43582250a0a6cd871c81428cfd365c29a18890cb32d58d5b27ad582ae1900009fb27e22a717351529503574b283c5842a1c6ba2dd3c815d05fe129b460992cb5741e7902f965efb4e31a8182d22a66712da5eafbadc81762c263aafbcc584ea7346366aca0189dbb042be994627337ae13287449b519ab040a5335546035c9487375638d40c159056614f05dbcbb136ba9cf90ebc03a19adebc37aa28c092b3608a222d23b6aa79d28a49c844b675124e214a63263a3f02944d35468c726de4c6a2bc3f5e266704c053633f2fac66528a6426d7b2e4a68b6b26113b688674139666c2569ca8ea2196ce34d55871ddba92eb6620a375083b1c3861dbca971d76227e95d5a6041a970304ce3da3663c32e0947865e0e705ac3cc77e6b32893d3a1f1147613e5ec388a3d343dbed18172dab7c433ec408538f44ff54ea3921619ba6dd84b1b32d69a5045a4cab3a05a5814a871e70d9ab08f6135ac72e046fa92dc5a86fd72feb9f7a3863a324bfa7040aea872d4f2594ae35e1ca448ada71837098501692dcbfb2c38c4824b1c380f1391aadf02332b53d10f8b1cc78e7c58c55184be0e36d9c1b2af6017cc0464e71db3c0c1cad03758e1244f09abacb85948094cd8805bc876f68d4edcca8b197555b88de916d7b2d282db6966b2b71b775083da7d12778aab11d94d35bdb84b403f5d41b7093f66c4333a4a4e58e65047aed27abe453d6d50158ea28115973565864b3c0d8e6b39b4603d0d379fc6e7cda351100b5599cf74064d6c1ec6a6eb1d68a61daada1e2b5a048c3434e4dad0caba37b61c87875668cb7d68636b5beae943bb7818ac750dd8709830bac237870ede4d2875c22b0e0375f51b067184618a6d9d47a7e0de3fc6091f7344d7d0892eb97d1d37e328039fe036a19b96ea262d38c69ac82976a28728e6f02ef43248d9455de8936b696b2ffa055921ea8ebc53760cd0eea4620b06698dc2b51343cc2755f58203c34c0c5db705c789f4950e8c309f740731ca624f6cba30388f31da9353e8c409310442d418a73e75bd13271956ed820d770bed419ad659332684d04559ed959d564c929cd87607ee91fb8b7bd3841953ec538bcf9b30cd0c493d38639dc329217a51525da91533e23834ab616bef69cc32fb9648797c2f1d3578b7e13eb602a5c789fb59fc1a2b1ea045ba32271e644f55baf11025aa8fd9f0302f6678b6e1113a965e7fd13e8747c982e13b2b1e63d4b37a6c789c05a7e971e209b9d93598f0a490e397e12a3ee9c053bc6bdcb780a7294775c48a671859ddba110b9e65462a27f11cfb6b72eb6e0b9e9713a4f41c5ea0238a8de3785184325c89979866ba462b5e16251b66f4e4f749d5fe0a077c5af376335e258daa7d4ebc46533347ec785d58034d2fde9040b0ff658037a93b2677126fd1a19c2d36bc4da46d2fc63b4c2bfd0d0ebc4b9a14d3e7f09ea0295273b8dc67c1fbf44f79600a1f900975073ea4590a573e3e224a70adc2c7cc8a44695dfa44aeb1d5e3f8942a9417c64c73f88ca7192d43f89c6e281bd7e20b2243f120be94bb51be1d3f612618db4fe1a74ce9ac4e0b7e46b3332e5cc4cf694d9a549abf90bb488f19bfe4c0300ee15714a22a18c1afc974a615bf61481225f9bfa57cf5fa71fc4e5c0c486ac0efd9cdb46e1ffe20028b78ef6e13fec8ec51d5e74fe14f744f5b68c39fd908b2ea2cf88bbc71dae7f15792a6f7548ddbf137626dfbf29e79fc5d981015ff0dfec17e97bdb10bff6464b2a47eff2fee52d14d97be75e0df3253b91338cdd24f69cb35e12b790d730fe18cbc5a54f5db71568ef8e6797c4deab23bcee09c1ca9c652ccc953b2b56c14f372810fd8f10d8955b7cce03c1989775bf0addce44a6ce7f01ddb585c4b91e5342eb071657a4aa62c58a0e078a91bfc87a2d2245117b95f447b770d397049880e4b716f75e0bf1c499aedbd36fc8f1b46f288c4a96480df65357e51dcf646acf017087a4f3e02a2e4c49d41206fea5bfb11245068748f03c1024526d49f4108df25b5772354a0f0940b8308e33bd59e198413699bcd88102820d17d0c913cd3acb062112dcb72d7e0473fd050892ba85dd53487a8a8ef1d0d5757411125e856b9d738104d98eca9ea438c80014acf8e8b8815303ccebdd90e6514f7a2a66ac44589aeadf3765ae7114f1332a5fd5525905f4ccd1812c4dd507dc3750b73508bd3c0f403634814a788a9df3860425294f8242520398a4db5c882148649239c0acaea43aab013090d054ea489333fed2568c993aed38674713354e3596d874e680e497295fa9cd0d343658b1306814234f51b9041a43af60d32858e453943c81262fcb3dd45a316181937c37933b2c5d540fd762c1606f8a5b76e5fc012c646e1458e10136438bc6ec0812ba3be1f21018af6f59d8e33582a1e07eb2aa71db88a1625b4db71355f1b1b676c73c8a5e34acb392c134fa58da4c4863cc2ccc62233ae210f892de5271cb856bc0d8af656239fac2fa7c68c15235841b6741dfbb152b81291eac375ccd5ccfd9d58255743bf09aba92cabe0a2e31cd644b15d355ce876a2802137b4d762adb03422a9b17212eb981b0aac670cd463d820a404663497f79b51c85456b45d9846112d379638b191e6c5b9566313152a8e9cc2f5515c8f1b4b6dd82ce48629bdbba44f73b1380ed4361d75a084599f5aba802de2d05fb57bd486adac74d54d13d8f683fa95fe91e424cb5b891b048a582c35bd1da432ce839d6459bdfe284ac55168720776f148b1308f32a13c2466f38c13bba9403f750e7b5871c6a63328a73a43510f2ae883c2674325898c69ce9b75622f9524485fbf2a969a72c2fc35aa996486fa2aeca392189ff48364daeca73a95f44bae212b8ac2091ca0f2c5d21e544ba4bb68c1410626d9730937d1b074d771cb591ca2bf6a77d5304c0c94b6be78c20e33d55b046701d91658599b09d7586093cbd1232dcd761aaa69dd048790189ed2b64c5a129d0ca0317f1637b3183367a5e97d0b132cdd7b1d6e657bd2bb709bdc3936da703b194cf58ccee10ee6932a7fd88e3b49a1eec6d3b88bf426d71dc48fa93fc93d8e3ac637f5921df5a42ab6eb341af82ebd6d162e121ee3b3c34d5e1aa94bbbd38926da254937a199bd3fd3bb7e182d6c54f12d68254de9fb1df044c9237ada711a6d7437b5d5867696444aaecf8ac3b445dd6b45873c424b27e065f0f552011fa1b731cda3e814fafd53adf0517f6aa9095d42bfdf52efde1e138e32dc7123e8a6b7c718cdccfab59d76f4081ca0728d9f9f432f394b5cd98d3e796c5c72a29fd32cb66c1003f24cf2acc320cf0c35760cc90bc3911a0cb397a83c9bcee0380fb56dc31811ad2c4c8751d2a26f3c803132982c8da1137c155d3b8171b955bbd72e587152780bdd3db89b1155d66dc784dc7e364c6292a32f73efb415f790d0841a4c310e8a2a0ba689949b47704a9e89b5a398615492eb67314b26b2a4dfebbd2cd068d7de9139dc2770644c73aef4abbc9fd6c5e69ec403949b5261c7831c0246d726e90bf4106dcfd962c1c3b42875a7038f304f0c8e793c2a1c8954d9f018ab5b553789c79927195b3af18418a78876554f4bbf922719b9ccba65788ad6c5d5d7e069ea30ee1fc533f47349ab0fcf0a2617c5acecb2e1398e218503cf33e2296bfa6c7881fb95b66cc48c17c5d5e0946d788901893f22edb22f935945c3dd78e507293e835719749577cfc979bc46ebd4d536bc4e7ba4afdf30de90691e3f8b37f954dd587ddc89b78815ee01f31cdee61a97595f2c59fc0efb51aca77a1aef92a3b4c397f01edb5a6a07dee7943274e1037986b8edf890291b37e2c047dc4c946b7cb6aff0310d4cdd6bc527f43bbb650e9ff24c55de85cfb85845b7954bfc7d2e67b4cb872fe49717adf852de462a07f17f");
        imageData[10] = SSTORE2.write(hex"45576758936717bed908529b0442083b8310503a542ae000675d05441029a268add9e96e09218c8841a08a589021158be2b7f7de7befefebde7b8248705168fbfa5d3ef7fb27d77572ce73ce7dee339ee77df656203a1c404c66179e13c2025d2f9e9784051192109a76c68a172429265292c20cf9636ebcc86326375e1296917945fd78599262a324293ae1e8da2e075e11da05c6c0385e155288e269275e135e630cfe9119bc4ed3f8261bde1052746e75106ff260e6bc136f89f871ca19bc2d22c625fa0b46dc784798c6a51f98c6bbc2345cb515efd18bf6c825bc4f55ee657cc07c95fd0e7c2890c525786a06f111b124acb1e26321c5e8676df884bac4392726984376a70d93428ad2b55fc745013456edab710631455215657d765c92919ec6b4d0456457d8261164908c391b6684146e18b0e0b238b750ebc215112354115827717a552823357e5c13ca304dd3e6132e5c174162351df619cc126d66473f3e6590d42e37e6689aebe99dc1bc242e8cbe91a6eaf0ee33ee297c466bd3ce397c2ea222be085088fae85bc75c5352e96f9a46e4550c4b386f6ac3759ebd2316890b416066f128c269abe875493fa22aaad6510b228572a1bae30aa284149b78b412d13c98b9eb3816888321867312f1314219a3916a1dabb80936c2e8c5429ed3ac70214e4891e985c3b885f1f2f64c619190e252dbab71ab244584dcc858c1ff0dc72c508ac80b54fe4127544209cdb81bf12277e8fcdb8fbb91a0607b568e422d70c1780d89c24f6856edac031a9e4c3d5c74ca892439c1fd9d166865122f58914ca5b9ea9c1d29428c3578d7d8914abceaa5fd4823c0c47907d285695842d3be6164084421196e640a08b139be8241077484b4c4bf69dc0a3db933350ec3208e862636c1285461c6ed5dc81241a213062c5330b10259812a640b29d474f402ccc41adf5a831ce173a1c2825c7297e79ac162364376e9209608c3a89c12e451a51f75e0366661f46c1fb6e276611aa72ac71d4c21c9bf1d77524ad964c55202d349242e53dc9c8788a4f69a215710cbd962ea2e2bf29953eaa81d77318bdc221b56283875d2ba2c107842d25b8a46dd28148ea3938ed40dd92fa248008c5538b05250b750d75ceac22a394f3f56b35b4d81035843bf9af63d671c286687242e73a084688d255358cb314b6a2c1bc73a4e68eef24ed734d6b39d549bce4d630389d7f758b191eceafa27b1499846a5f45a26703769c8de1ac466964f338d2d3ca75a7e1e5bd920098d166c634f6a6be6b19d39c77b6767708f502eba63a515a54c2465c733286392697e0bca195dbb62103b849b1875c3800d158c98dd7e163bd9e879e750494b556bf100aa8418a16a3aedc22ea66f5e3e806ac1554c5a4bad44c76ee128327b376a64a8252edc4ba8faf241d432be66d8863dec89a47356d40927e1e642ec658d93fdd8c75386f61ed4b3418d0137f6cbf3d834eebe8c03b455b61ec47d6cdff4211b0e92537dd3ba31dc4fa52a7015876465435d3f2cac4692cf052bb330786b61638c94de8bb073b12eae834306573900279d186bfae02287d9de7eb8592763451f1e600d93ca9d7890c42cbee6c043f4a21bb2e361f95c99058f88f4238c0deb1d413c2a13dc3687c778d2d0b8158f0b293cada30c4f887c23d33cdd6e341040769d0d1ee6a4f1a091839c5dd2032f9bc6b0154d0cb7a4b9133e269fdbb616cddce50aefde1eb4c85e1c93682532d5ea20daa8d3d40cc1cfba2c9676dc618e4c7a8d1deddceaf1e5fd2e1ce1bc6b3d95631604d898398d75c75ce8e061b5d4a647e59b6d59373a5953e5b2517491c8545fa9f468e8a63631df8927095057dc89632c4fde311b8eb3acaa9a1ef4f00688efc60932ae94f8ef6587291a4aa77092dc992e38f09450c2b4b5db893e0127ccd8dc253d3cfa398eda40af13a7689de21dbb8a01b2999a6fc320e1e94eda31c49339b38e690c0b7c31a91d38cd5ecaf55662848032ba2d785a5e15be4b382377dd6a0b46894ee52be874e32c29d0753af00c5b49b5cf863106cc9ac63949880afbff26c779ba34f997619cbd935c3f860b7c4fa41e2defc297e46ec9bf802fb373d59e622bbe228fdcd30e7c956b3ba7cb79195f23324d93135fe78a319ec437e42a1607f14d21456b774fe25bf499391ac4b7e5f4b6d8f01d5e148ab6da713bbe2beeaef0344fd119e7457c8f4d6728ebc1f7e5895c6bc10fd811f1de1efc50deaa8d07f02312a25fd78b1f73ce4cd5f809f1e4f89df8a9fceed93e8a9f71559aabf07339a9cda7f00bf9c2cb0fe297c4a59462ff8a7549abc1afe56b7ebf03bf61a39a0a069cf8ad5ca89d6efc4e5eefe32efc5e7e8f14cee00fb4ccf08fe08fbc510c1be7dcf81367c8dcb1137f26d0dcd5a3f80baf7bb51f7f6509d5fe2a27fe26740b941df8bbfcaabe3e8a7f307ae2ce1efc535ec40efc8ba99b3a83f83719d3f8c7f01fc6ceeeb6e1bf9c7c4d5be97927fec71265f867f02cfb226b7406cf09db457706969eb7e379b662425bf9085ee08249abefc18b0caab83e8b97f80e506ec4cb049ed2d089579870fae17b7af02a79d314cdbaf09a10c3537cbbac789d55cc189bc01b2c55deda675c7893d8f3ae58f1165feb6ff390b17d18eff0ff7705a830930befc937e0d19583785fcc6a8c061f900545b51d1fd25b823d888fd8e0daf6a7f031b77e726bc9083ee14333c58b097699e28a0593f218770c5a7091954d5a338a2986506c3b8b4b82f64855c79ed3364cd336f1941b413180519a96d523b62066c41f216adfc62ef7042ecbdf578563b8c2ba687b277155f88e4e0b149e75e21ab559d257dc75929fd5b66100b3f23a39d2854f495852c3aa31cc91d679d2aaaec4677ca12478e66c33f89c600c9ed58052dc58fa8663373e1b851c9adc522a7d04870a3952db5cda69979e351cf0272dd2bd22ea9dd3d08508fad274d49fb023526843333c3588125298de378b68611ba63d52df3d250d9758b1e9c79cd295286642df5ad9277d3c0aedc2cc5e87d4c17c624a731da7141f3639a5a7ddb8451c0d3796cc4a9f088b9890d6bb74cc865bc5e1d8ac864928947c76b4dd0725c3e6040aa42f4595d086a4faa5ef482145dff89e4d106123cdcd954ea895f2cbd685442254f55ba061c804e92a4d52723354f4424b9d3ae0403219d36d7023859659d27b219560721c334853f2197412e94215a7f4b9912190851a2acfd89049eef2aa7ba023b2eca5e7a127ea5caff4f54832b27cfd308a08b1f183c8123e634c8527a66152caaf5c27b2857281a269c54998c9a2b169c7900b394c2abdc5815c25bfa15b0ace6331f34f97285e2294e11a7fdf14f2048418f52adc26630d485f90e44677a81b779080a4fab3b8531c83790d96b2b112e69d58c6ee486a2d1bb262399b27b954ba6af2d9dd9aa536dcc5eed604bab182118df629143062464710857253ad3b8922113f4ada6a2b852a52df7601ab84748bf6ae11ac6600b5731a6b487f5ed9088a0552e455cc3b26504216b33bc6b19660ccde155847309ab263584f9da1d7850d024cb4ce858d9c508577c3892036114066e341dc4d865587fab199ed9edc77155bd83789dd2e6c254f59cd566c63408d6702db05a5b12981393bee116294a6565a96a52ca97e0865421761f45c77a29c31f2ea4f63074b632ab64ea182d0533aeaa5c5b4937e530aa40d5149b466bf0d554494dd348c5da42ea5a11ad5c4be78431776d332ad61196a382b196356dccb3a9a2da8651d73f63ab1873396e95b358e3ad63fa9641c7b8925e1b81dfb9437efb17033ea99c4ed4db5272cd8cfe654f94ee300a36bf64fe33e611b9bd45273d681838c91d17216f7933af35ee973e190300e913e3c7aedb010ad6ecc0d2bfb43376b854d29ee09bb7002a377c70538e833b17d63179cec1ce3045ce422d10b37a1e8ab46f100bda71eeec3839cfed48e2ae93e7b885a53e33e3ccc14cde726f008514a17251e6529b45be6f198001366dc766a068fb3378cadd7f004474513b0a3816e94cdfbe021a71ad74534f2fe327bd74bd7819741f4fe22347189e7d549e5f0312f4dd30e34b355330ea385f193871c68e51233e70f58d0c673891516f8e934d7bfc9892f00");
        imageData[11] = SSTORE2.write(hex"4d58775c93e7167ed8a0d01a9240064808840091d416a156db6b2b55149cb5d8a2a81d7a9b9dbbef65040801992a8803449430b47bcfdbbdf7debddd7b211450944a7b3f7f3fdfe7eb7f3c9cf73df339e73d5feae38198080033676f5f84068122acc51e6c975074b884c2346bd0284431c6eafd6812a208ad0dcd4214a50bd8d122a19951670ece0e9476dad02ae11991128e5616b78da34d1c8e4c6b71628740d1295336ec144723d5eb0ebab14bc0309d6f8f13ed128c0a932012d0c17b860d3bb05ba05863511b3a856f715976ec11a250e3e56dd82bd00c45c30dd827fb3de0c57eca0c3e27ba84edf08caadc36740b189bdabcfb380e306b5965d3e891506cf419c72cd5c53b3da338485599156ef4d2ccecc6321ca2e2f46d43761c66c6cddbdad0c7e424d6db10148144ab3ad02f44e116bf0d03028518ead66150e89c3167fe51378624181172c69f2374243dcf86a344bac061dcc8a45902c5b889b6125b7133dd50978ee11651d0f044dfa95e276e654153cbda1db84d886395fe657bdcb89d7a939a7a7107339552918b3b6512d52fc05d8c3d617d37eea677faeab5b8471809310c7847712f6d1a6b160fe13ee16da8aa13f70b80ec163cc0422514b48fe04101e334c5ad4e3c44dae80241fc572024d50ee06152da328a47489ba4fe713cca90d29705f118b3933ae8c0e3c2428ca96aab0b4fb0d889431e3cc9a38aaa3e3c25509872a50b4f0b7be75ee0c033228911b3fd271ce378966128ebaf1bc473f43ba9b91dcfb3f8eae25ebc4007e65cd3eec18b6c3f837fb5d4612f31c9da6a075e1646a312ebf00a6ba3693b865769c35cb116afb152f18149bccea8b21779f006559a726d789375cbea73e12d5251bbb4cf86b799808cf252bc4335c935ad7897e957f8daf11ec3c839e59ac0fb2c4056871d1ff062d2965e7cc8825bf2f0915c9b7da3f81f69a3fbd380131fd3d3ec8a717c2284c80ee40de2535969a0079fb138e629073e976b9c77185fd0999c490fbea4c5ac8bbcf88ab4d1ccc7d7cca8655317be61b2b31bf02dad25d415e23b313222b4e525bd52c1bf67323497d9f083187531a9f891533869237e12d50d8baf5fdee1c6cf7246a71d1866e31f23454cf50e8cb05de29761945e199cf88565d6143931c61c645ce5c2b838186bacc204fd33e44ee138518e6f134e08a766662e3aed1ec7a490c6256cefc749aad1d8718a64b116783045eb3ad7387e9569553e88d33c995366c7340daaca0fe237564777c885df85f9e8ec9229e704a064a61b4710a21493c3d0b8c78e50218cb4b887a5461469d22ed88b70e5594548aae8711c4784f2ace7d2bc44a4381a61ac74218a364cdb5cd2cb26bc4bdbe7428c928cc8c50c617e86c2df328199d4a2ac1f949a5b5433a96ee5013be284f41cf5851e9c23ae46250696b6e35c0123334e49566689b3d208f4402190a4a918f1d4abf6af91d8ac244eab2e9466844af67e713fd4421aaa69b8c1318104219d99d1b81489421aa7afccddeb82869614755e68050ad7fa5dd00914975c57003d1d4eeb708c2149288a5037cf0f8e23999530548d60b640b332064e2045a0584dee21189482d6a974c6e23b6c1f87519898a9aebb7a1c69f45cb3d08b74518748551e4cacb4f50a1b3284285ced819999d4e6b990294cc4e634ad39348e2cbaa9aceb47363337b7621016de34d63830879951edf42047b81693d8d86f83956ab22a4fe03c0945869e890873e98a6108e78b4b710981a193b8801a137d1ee432f8ccc0bcdd1ecc1338445fbdc4750c79ca3fec64f9b497b2c3860b99a7cc52892df3853026a5b20517514f62797eab0b0b847486b9601f1692b1f1cbdcb898d9492e69f58ce112162a67a9037f623e2c0d6d58c494c7f7da70296d2606e6e132f226bec185c57456ddd489026a492d75e17261315a53bd65b7034bc86573fd80771c4b4568e18a82a376145295a9d181654ca0759917cb892cd20a5b448772fabc28166a2335d59ba63c5821921967f562a5b011929dbbdb8955a4797cd36eac1627a3acad58437e646f18c65a2acdf62f969ea32bc848530fd60910660ee24aba36478ab1441e52e55d584f9dfa402baea271d3aac3b89ab5b29474a154c941dcbc6dbf071bd80f69de116ce424d45cdce34619e3b70c8e61138b65197063b35cd6f2abb0850ec4d79cc63594a54c39712d9566e5ed75e03a5a34778fe27a11e2cccc7c6c15a2687dd565d826ee21a969a51d7fe6bdac022f6e60ef28fcd775c34642687a3cb0d3bea57c1b1cd46a0cb8e1e4c851ccb78dc045a1b97e0a6e722e7b83071eca74552df02acfbec731e90d2583d21bf617c69cdceec65f9966c34107fe467fcc0d0efc9d05d1f98bf10fe141a8717b9b0dff14159995d4d87ac28e7f91ade68a4507f16fbe30c6b5f88f2c6bd8358a72369e61ca8d0a22c5621b2ad9048ac0f2236e54d13fad44111f2b9bb5c28b6a565657b704354c82b56712b5acdeec6ecf30fc7cc71465075027841129be8ba6102029d397ef423dd3a7f215a281170d9ba5ef46713136ab6e890b8d329b83236862f292f3dbd04c77d48d4eb4b07caaca796d68a550df64439b10866596bb8e63077bd254b1a51d3bd95ac672ec122026db8d76f659aa0d1d4c5c4253bb343d7633555669b3eb24b5ac3d0eec1167632cf545076dd8ab3cbb94859ab14ffc1da5c07e06afe9f6a28b3a52af74a09bbc562d99c2013e817adfd6a0073d3caba85987830c372960432f6f2ab7b6e3104966ec923e1a99606df59503e8e3d1ccfa0204a926add38e7e117da8712706381f32ea838e510cb216ba4b4e6388ab8aaaa23088239c6bfa361c1537c3ad0b86a4bcdd280f8fed45b889a4d7e74dbb70331337d777c0318c5bc89584cd5edc4aff4c5283dcc647cb548bdb59d3b9fe2107eea01145ae0b77caac6a2874e32eb253d9786a1477d38662e304eee1383597b9702f51965484fbe47e0dba713f979faca6923e371e6027e99bf7e241769d3ebf130f712668fdd2d723cb9eb0b51b0f53ab66ed213cc2becea8c5a3f22bbe621a8f31e0343f1e9709dfea1ec313ac4762493f9e142743ac83788afc4e0be069b96ba4767b86fa35159378963ad4552bf01c03d0354de079d6c9e2ebf3e0051ab004f122936d58d58597184e5245315efe4352caf00aed994e0de355ee2f19f9788d2065355e9723dd8537582e7393f479f726ad255c3185b7e4756c146f73ed5557ee70e21d923b71e17ebc4b359a6669597b8f6a32ddc7f03edb49ed1ac307745a536fc7879c1ea68ad25e7cc4f832eaa4af468e415de3ea417c2caf313bbdf884368c0b9cf894bbe867ac7fc6c63e7ccea4cc6d58802fe889bee234bea43eabf4b67ec5c7cdb279bf135fb3b0c91e7c432df14107bee5d66659e83986efc4cc411abe678b99fca5bdc3f841eec75a1b7e2451b3161ec04f9cbffac616fc2c6e46697c65de090cd3485a619f1dc7e4e5af763946c4b318a2aeb974da368151b995f2bdf885d334a3bad5710c63b4a43a6dc338f74a55f3faa01313f431b5762f8ecbb3af761e4e90a7a6e60e4ccacbb2671427e9526a7012a7b8051bcb86a49e99e2479ba96e95f445fc2b3569d60ce334d9a32feac4b408274edbb4604a52fd9bfc9207a6f03b834bf1ad97be34c5bc9953d4eb9582e013b7b84ffae8e20f5087a57d5fb4a34eda88c255fc3da4a203112a3667c911292fc21d85f4864609146db9de2b3da4825931fcbfa6dc214d63b6ca4ab7f48e708b926cc552662818429c8a9b6829ce51710eccebc3b9bc9652331fb3e8547ae5322864378e1c47bc4011e9ad1e2855fc52ac7643c594582f6df7424da1257f0c09028528af3f8c4495786af481e9493734349951ed80568ec25f061df5c45feb869e28d95f82241153584a10c902c4eab66236f3954297ad9e091854dc53760c2355a0b8c4801d46069073e6fb2a4dc55f0eeaf2bb5d4827d60472257a98584a83df8d0c71393aa1baa815665a3556d990490e68ba4691a5927f773a896c96c22cbd7f1672205bface98234c4669b7f5d84791c39bda8d83b09266a93e9cc7a3ba4dedee61cc153822b33a5ffaaa3b9fa9b2d8708100d1da43c89593b0d489ff03");
        imageData[12] = SSTORE2.write(hex"4558775c545716fea40a42360cccf0e8c519860164dd555041039810152560433401a3b14c9ff48461189819911110298a521511ddf4de7befbd6e7ab637840414c2c2eebeec2ff79b3fcfefdc7bca77be73ce7d6f6914b02018405082634bbb0139b21c1228cb81718566e40a6941447d0f960909493b4c582e24ff84bc21ac90a5d020590ad5ace836234f888131ee8201e48bb3c1a94516aca4cfc8bafdcda358250efb676f6e33e232590c9b2f8b218ada9c56eb380ac4edb098c666140a2954e3d0a348d80acd74969e306035e397ec5b71b9900214857a5c214bf3037ece26c582629a499bd6e34a1ecc2ed6638d301aacf2ae6bb6612dc357e7cc609d30334fd78712a19a9f96df8bf5c44be3e9c0069ff79a1c940a296491b312570923fedaa3281342785427ca7d1934ce60a350f92d6ec4261a8c5965c66666906cb7610b75ca7633b632ac889c765430feecf2c3d8264c06654ea192558c6fe8c176229d662fc70e9ad40c4de06a21cd8b6c388d6b6429d8ffff3c41953018127d16d5f4259519b193e6933cb9b8565cf28bc52e42a5ab3162b7d00465e13a612e50d98b3d4443d56bc55e32505b35847d8c28aab60cfb45d1e627b9af3c66865eb02a24d9beae17061e96968fc2c844b51b7a611247c3d31b768fc04c2f19b6715884322caa78c800ab1083b4ae560b6cac6af6b01ed71389c409dc2054e152c531dc2858bd20d2b3bedb7c1e37897843246f97651c378b03e131ce9f86ad63b88535546fecc5adc2af5fa2bdec306e633acadc5edc2ea4a0e4ea33a8a12ebbf42cec649aa61db5ac87a6711d1c2284b088dafc6e3dea841ca8b06f3a320127214d6caae81c43bd88e11269d9b5ad682014bad5c356b888a9e6c80f7093d3d9c3f030156d69270e1033c519331a09bed6dd3f8d836475d659039a588a68d324bce268b0545bd68f43542a3d06340b87018a3ab430cfa8413d5ad9f8a92b7098c44bab29479b2c05cefbd9c6115a93bc16b4338cf896317408c94fe76943272d28f5e3e8f2f5eb8e411c25f61aaf11c7380635eb872de8e6d158fb1c8e138634e7599c60df681aabd143d26977dbc6d04b65ca6633fa184d428f01fd8c46e1c8c3002f667aca0c18f48dd66a79929e641dd2eb9b718a944aaabd68c21049a4f594e03495a99e7e138685384fe7e834e18c40747e7c2e46889cce791267196b44c7799cf3c5d33d65c1ef7c8bc0348a3b08728c6b2beee42857bbd7c8ad7517fb27d2b31c7733e9943d3db887b1c69eb4e15ee1046a7b4517ee231133560fe37ee293e9cac103c289bfc23d6219c5834c33c3dd7b010f31be7499a80f5319b561d08a47d82e9abaca7e2b1e653993d7daf018fb5955976b1cc5e34c2e72cf293c21ba3b40edda78da3c81277959e332e2296617bfc68aa7c98ca85d463cc30651971d31e359e12740aa2f976bfa1c0fa73776e1791a4a6cbf8817987b4a7d075e2437338c637889cdaead2d3965c6cb9cf69907bbf10aedc41519f12a79a36a9bc66b3c995e63c1ebac70a47ba50d6f086684a54de34db6a16efd10def2793cd06d9dc4db420e8f73b64d1bf00eeb9650b717ef0a43c18a95788f49c638caf0be70393fa9b1e8183e2051545dd3f890458ba8cb99c4470c3da9b6001f0ba3c8b4e21392487215e253325ce191b9f91917afbc253f278ea95e037e4f1c939ccbf1856f361c1ac7970c34a572145f3123c961c3d79c501a3dbe21348b57b5e35b5ed3d55e86efe82e63d08cefd95e2a7b05fee00329f747fc914824141c9dc09fc88d459ecd7d16fc59a817642d9137ca5f8845e6ac057fa5cfacd9f3f81ba5c8ba3efc9d92d4d8827f7085c415e19f0c3cfdc04afc8bd9a7361930ea5bdd369ca7b744470fc6f8ea90aa30ee43debb1a3ff060729e193fb20595d7f461424897c42f336092c0a84be7708115cb2e1e31e322b783b2a9d58429e13054358669a2165f388b9f382f225c9d06cc90310afb8019ff6667668f5831cbe0345d5398631b6bea3777ea47f11f81f88298c6825623fe4b47ca15567931097492fbc7e455cd49ed35c14ff9cb4d44355c366b86bf92abb9e08cfc8a1392b2698d0ca7e805cd0482948cc8639593150fefccfae326cc172703d4e710224e86a81da308a594babd55de5d02adec8259ab1c2e5fd5de76840b65b8ee900ce5254a2eda6a2b7ec534a2dd065c4a87b14e44887b0b34b5d5662894dc28152d8814ca009d3b578f28a10c4bb2774229d00852d5570d4c42c5fcb30b26114d49b5750e92381b2ed5161ac610436d6c533162859ba0cc92012be2843230a3da8278629079a015093e7ce49d9ba8e454712e1947126ba7b44d2099caf403abac481121f82f6c2aecb520d517c2be135848bcd425c7a056f249b0c4000d31595cd98e34d6523b731e5ae52fecf28fb6cb1f63e348675562b6764027a4609d6b1a1902f8509d1399cc44e159812cd6367395f13c16896017a4356d6a35205bdc84a60abf260d55b53be437ca62d6535583df0843613135d523f82dcbababeb98c0126212ef1a3162298355db279043f8a419137285d530553e965115edd983e5a453c2293d5630749d777b07f2489258ef76e40b293cc16bc64a563662c68855c45cb3f7342e13480628ec3b0fcbafeb021e4ede7a0a8594b4077b50a4146fc0d5a4688c6b4a8fcb851898e1289ac4154423dd556446b12ff086625ca9e48bc88435cc30adcb84b52c4e568b15eb4468a1927b69af690225c26c88e41cb2623df99be298b1600399952957a79414c82e36e22a612a58f294f4e8275026ee22d6699944b9924f12fb46f338360a3938d2bbbfd98a4d649fd23385cd64a654257f4f0adb81a98edc7ef9f256a10e482e39870aa10ed3b8f35a0ca3d84634a48b5654b26e0b672e603b01d00e5ab0830c4b1ec6d50c21de3b8d6b8455bfc8433b46cca3a862be1a9705d5be7952701a3b59b66bd98d9ada8a9671ec622cba8a01eca6a4f59cc175c27bb8428f3d0428b6b1b8d388bd24587c930dfb7cd3cc9d63c27ee6249558a0174a3ff5d25e1b0c42f48f74d92661a4a874ce9960e2d5e8292bcc4432a93107164ebe38fbf21e13acbeb9b3c4041b2baaf6ced970bd387ca9da7d56c6f906255f29d3b89130647a2afa8cb889d96474d97033e745b409b7b05b749ed5b895eda076eb711b5b5051b3ed046e17f702538fa1866c8cab6f819df734b336d42a7ff9860fd3c0c1111dd734a49f441def25d657c2c97bf13b8da8e77c4c9c33a081e927baf6c2c558e21a47c6e166468a1316787c43af260707c824b5cb80464a92e5071c244c916e343121ed2cbc22d0809483971f35e1102ba56e9b44b3d0ce939af23bcd68216c314316b4b29d74ced5878d382ce4d045f65df207711bc91b636fc1115f443b6d6867ad12eb2a4f4ea0838449b16f994127274fac6b8d015ddcc71ac75e138e8a0cfca36b708c3125d58da09bd04ad57a1c27b452cd0a9c103efd52ca47e4cfe91eceef0c678b0dbd9cdfaaaa39f4b14b356ef413b2582b06b84e621a4abb2c18a4cb747b314e126ac9845334a9cc1dc2905005c55b709ae0646defc6301d28f271869c979aca673142fb09b3269c2570f107f367cc38473b19d3f2f725418edddd863b38a4d2ea66a6e48cefe4e534e7c61633eee2f1c8bc4edced9bd3db6cb887b846cbcfe37b399517ee3b67c57d22de10c506dccf93a93f1dc603dc129a3523137890cc4f756cc1436c42e9473cccea681b0c7844c41616672f1f34e251257f5a74e131a2aa9ec2e33e933903788239a4d597e2495f4665e3788a44c9b6e0695e4bdb3e82677c3d5f731ccfb2b162a74d788e832f62b75ce0e739afa4fc51bc40c017cb5f7f2f0a888316bad7cf5826f01293ca5ada8e97e945256fba57c484f097f02a3d26d654e035dfbeb02fc7eb2c44b2dc466ff8d26d1ec59b22b679717df2a07d8b0c4b2ee9c5dbc42c6506eff878d9908777e94f92df2aef31ca84d20ebc4f29d265c607bef7b5790c1ff2b19450838fd887daf5c6717cccaa282bf009715138d6e2533a8f91df389f91d1a983e6497cce8ca2ebe5cf49725fb9165ff8668673085f3230c57103be621d322a2df89a09a936d9f00d434935e25b3a8ff354e03b4a916b4fe17b71709ef602fe07");
        imageData[13] = SSTORE2.write(hex"4558775853f71a7ed961b5859041082b8c8420d416b15a6d1dd45514542a8a836a5d9927dd2d238110813044c48b42403417d1bbf7de7befbd47d7ed42a344ad16da7b7c9efedef3e7f77cfbfdd6ef9c973440720280d88c16375e165482418ae015994a4994a94463d56d09af0a323ea756ba86d7643235e98ea63ab861d081ffc974529c4cc715e275612759e7b7e30d5286be6abc29a8146dd886b7644a157f472b2f8ab7850955316685588ce5540497692277b30b574424aaecf6353388081bc9e6bdb82a88d4a220ae09b5f845a12b9813e6d30a11151c5559fb5e5c1754aa45ba8c1b8242f96a093785b3d4a25e19857704995412d866c32d219b6e091ec26d8189aa6ce3495b14ef12234de0a11109f3423aad64ab030b829b96dd5b6b9fc37b829b9471ce8ef74522b1a54e402b12c95f7611315aa16869d979d68158ed07a277df678bc60951988ed9102f2895d9d78f04f22aa7a34814544c456f1392b41f249666f1d75d814ad84c2e0b235948c615af75c9851354a52b82548656d030833441a5e56d8f205d50a9ea7e0feea25e61601c770b2ac9da761ef750cfd257870c114b8ac97f3c8a4cade88b5ca8052b4edfb9e212b2041449992df527ddd088b0d32a76414ba395bb3dd009cda4ccc0230bd00bcdc44cffe17e17b229acf1bb6110dc94bcb6c7861dc811caaaf25da7dd305258ef9b40ae4ca5a9ee94aacc77302ccd224f482718baf79d47be904ecf5a1f4581301d67f66f96cb5ec8329837b961d27204d7b951240cc517f51c1e4131b3b3d8514200f5dee328155655a5fe01d71ccc4233d1d2beef382c4233a1288a329ad14fc1ca1ae50446502ea8147d473d16b10e863bed5bc16632d68550494a573d8e7b85ff047d70c7bc0d8ba95ae81fb4e33edab55439713f7b463b66471501c9081c0a45b08485d2f84e38504d764e70c01ec152fa2ddd6ac303ccd3ec5fe9c6324126ebfdd30e2c67a605213c2878e966ff123b56083b8939de33582924b1a8090fd1a8d677fb3a1ea6514dc3b80dabc83574543bb19ac9e4d40f610dab59e45b87b51cb85cff306a8849a66fca85471840f985cb58c7b472179c58cf70b2ddd8c0fe29ed7562a3b0925ad2e19ec326d62f73ed093cca6034fe7ed40a2a56dde2c46636adaef520b6080f490627ea184ae58105d47350cd8f4f602bbd679f75621b25b3fcc7b19d65cd6ebd8106ea9535b8f11813aa9894b043b88b2b3c8446c655dc39849d6c727df77404bb985049ad842636ae59c26eb682bebd7ac6893d1435c977662f375879ebd209ec63ba6572d734b38645c1b0138f33a90ccf1cf693d207241c10a2b196ae75e37842261362ee94e220c3cede328c43ac6d76d5091c2612c59da770842dacef19b98ca3646ac7edb0092ad9ea3f04bb4830d6ec8083335ddeb70b4eee3acd9a4b36b8087d6e4b086eda2cec3d03890e4dbdcb66e1616cc681eb7852eca7146bebeeb014c5536497544fe26902a5f556e1198171acb1a5badf8967599dfcaead63788e0da60f49789e9097f46d91f0021ba0a47d082f122e4bfd0c5a58abd203fd68554e986f52ba8a368142aad987762e5b757042825719f876077c4a4fefbc840e919a4aefaf9b90aea093f1a9774bf05335ebd0057409e19842ef1323d21c025cb6395d0d38a65c805107bae9c7e8af468f52de61177a45b489da05045996ecc6e3e8e341cae95b33e9403f5bcb70d2830191194c47ceb830481ffa86211ca77f53571386b8480cfeb338c1129674d5871cb3186666fa7a1b4eb26fca76783042aae0a207a784cf187dd5a00b1f2240bad65318a5cf9cd3519c665f64d49fc619e65c30e4c218f7857106e304ced43d80907267076c98508672d93c26394c25abdcd77096a2a5812598a2a8d13b80737c726437e13c91d20642368495b5bafc363ecc94727dd5b398a65175f31c2eb01e96d32ecc28e76d7b141799a066dc894b6cba4535f8084133ad3b878f0a56bc710e1f63979bb6f53bf07165b866ecf80425cb76e0935c508bbd2b47e6f029c14c314de1d36c05ed801d9f219e79367c5619c8691b3ec764b33b0ee0f35433d7d8f005e252bcf4a21d5f147d11af0d1c0839a3f812d328bc60c797792b727bea257c8565d3dd74e1ab84a6dc3187af29655b3981af93d23e7c1bdf60bfebaee19bc457b746c2b7047557c90323f836d534b5367c87439e1b5c16f6e0bbcccbba7e08dfe34636798f0ce3fb645ad64ee10734646d74e187bcb83a5fad1d3f52de48fbfaf163def8fcebf809c1527b1bf053f649fea651277ec67daaf6efb5e1e7dc56faaa05fc826bfe97346fbee5c1af3805f9c139fc9ac997f678f01b829d5fdf8fdf3203edb81bbfe30b52e36f5ef0e0f7d434af3f893fd0db1f693fb7bd0e7f62fc85479df8b3d278bdfbfbf1172afd958ba3a8d985bfd17141c328fecef08d7bfaf10f52e5ded3f8275f2056efaa69fc8b660a6a1cf837a9bc790ffec38ba26b715fc77f9589dfe0c24bcabba6c58197b9f3b2025bceb9f00adb457f05af12e5f260335e53aed66df99b51391fbe7e09af8b6686fad8d80d5b046fb0b4c62ebca9f4cbba310fdee21bdbe8dde0c1dbca3ebc398759c258d43a8ccb6c9fbcaee567708520e8076f3811519ebc931e5c152e552575b8268898cc3eccb180c517e710e511afe81ac075dac8bb11c50dfa2be86c0ee1260357f78623788730e7cb0f915bca834d6ef4db02c9648d77af338277f9aa37b71d1d9fc33c3796ce8905965d2f7f6bbec75553d08ef7c92a9597277462982ab7861023a8b4ccd6286275e2a169da8d381daf72b079da2e9f083130da63b7ecf2d61055b7c808240ae1a48a405dd821f78900cbd02d7f1308782cfd51240b2a4e23bfb65284d5e4d28e09bb9c8ad851a5efd866e5c7a968344b5715d20533beec967c94efd28909b85b784bb74ee31e21956ee85831890cc14b2b7e1899f45dd0ba076ac14ac99940165de9e56f3a0d7131f99ba01582a91a0774c27e4c5947ed20f43adef49673c8d6f14534ef84415089ead63072489903761885990493ffb013b902c00493ef80fced9a278455d6b613c8a7d9fce0151408d9b8a296b0fc7957c8929a5b5d3031a08209278a28ab0fec1f73a358b88d2deb92dff325829d5edabd42fe462aa5b2a97b0a66219c660c4e49b050d7e06f3e873241aacc7ef96d6815a65415bead2117ca85a9a445f30e2c22bc8619372a846a8a3af0e8182a05bef2d72bee15bcc4921ef94e2c66729ac028ee63c9ccd7703ffb2a674afe7264747aafacb78400e6c81ff4d52c7ce6c6492c25af387c150fe83ed834f7e87bc3371c112c63cba85d582e64630da3121ed4713f9c97bf1a3903fae07aac6438d69e4b78883eb236cde361f24c7d17b08a36f3026bb19a83666edd21bf0bd7e8f87c5f29bfd1d6b26dca7d51d4b0405ab9f28f28e3d234e9c63ab66669c7b40beb296b1d96b041693f9f848de4a91fbb844d3ae57fc7281e2565e875a19605d0f73ab05999e59d6e6c5178ddbb50277053558650cf96d5752dc55666bcb82d846d0a52c796613b433157bbd1c0302b17e4ef464e8975b9bc20775054dfe9442381caf09d756027a734f71c765132b3a7114d2cbf36d088dd3afe64d969c31e465d720d7b19b5d16fc33ec662e81a4333abadeed989c78573e407c212f6b3670a1a718056ac231e3cc14ec8962238a87482fca9734849a16d771887996eb96f5cc2116134c15a83a31c126b036c5c9bbaa5d312ecac837197070e1a55d784dd7072ab6b67e1624a9a999b702beb4aee7b89819637bae1e13c156d9337fa931ce0fce04a3c45aabc73144f73fb5bfaaae5e5f50cb1b10cbaaee259fa2c5ce5c473dce2bac046379e57169df7245ee0c6c90fc86f82170956e646175a94b16d91d0ca2aaae5c3d1c6d6377548d7d1cef834f36e7869467fd60d9fc23b1a4107d75491fc61d3c9f936b79d815fb9959b6de8e295293c89003758a97f9507c7e82123388c6ed64dbd1a3d029c98c2eea6f9087a390a779e0e41258bea31f49167f1b9d1cfc590d53e78d38d01366051cd1006299b7dde86e34ca3d03f862111406cf95e9c6035d4de836e0c53521770e1ff");
        imageData[14] = SSTORE2.write(hex"4558675893e71abed9c8b0859090b0c9209020b57583553ab58e6255ac588ab3353b679fc34842408c222243a6204641bbf7dea77b9eeebdf71410a816aaedf9bc2edffbfb795fcffbecfb79def7fb5a9381691100c2f3fa2c6813685a42c961b40b14abae7363bf40f1793e3b3a24141329a10855f5de93e814c2e8f4f92e74d1a8da3a8a6e2a66540da04742d1e1675d189ad14b91b6d7860342146508a24f02b151674142fd651d0ef433b49c1d37e2a0703f4d5d39d781010946854930d288434231dce85ddaee465028c61803d7e0305152ef088e30d09cfa5518a4664efdc646178684342471be0d47196b418b05c7044296ff186ee2c9dc9a29dc2cecc49bfd1bdb2db885d850d56219c7ad720ce52db88da964d7044771bb10c6a9761fc11d0245a66db2e24e61284eb5a6c5318ebb587593cf86bb059a9e35cf857b684779ed18ee15284a3dc78afb186e5aa90df70baba129fe924e0b1e10d20855d0850745534233eaf11015350bac7898fd5254e011c69655d6669dc0a322ad186355b3158fd168724d331e67e0ca2a2b9ea0d5e426179e148662d23c7b2c13784ae0c89cead5fbddf82f2b6fded88fa7450c916a379e2161d38b0ee15981420deb9d788e15481970e379115d88c9bfd58a178495305d0d5ea4c3a49a66fb385ea2a666491b5e96ed0c4de01522e53a075e259d548112bcc6dea917baf03fe1313eb9614e135e1710a69d6b1d7883ec5677daf1a6882056efbd6eaf136f9122899e336ebc2d606c4665af03ef081869dad0ecc6bb229770ed26bc4716e81775e37dd94bdb297cc0d8b56b26f021d50ae6e3231140986e578bfb043ea6a272762b3e21d25ed3844fd9cbe43a2b3ea3d184860a7c2eec4468aad705ddf84248c3d4c52e7c295c46a87bf1157ba7db3982af2514177d366e45f5952dee617cc362a6efe8c6b7d4ccdb8def64be6e1fc6f71cd39c29377ea04c51de831fc988dc2d41fcc4326aaa6dc3f8591ebc6d56fc429625b5da705cf80b319760985d4e1bb263848bd050d8e6c628f5f267f5e204273d6fc886316125d66cc1b8042242ce1e9ce0a633ef0e9e3a8e5f85c5e9e6791d4e9c14304e31d93b8a53cc21cd3f0bbf3116a3e47c92967481c22e37a6e4a92fefc2efcc37a1f67a2b4e5355d9301b6718a9becc8e3f58c4ace038fe641773fc2b7a9c805ae498d9e042889aa4f25d8d5081e27435f3a5368bc9ceae3b20dd06e79a1a95ed59de681b95face9db1b6556a41a4381e692cdb2b052d368f6208d142146f085a2457e744d1eaeb11a316d3915ae81a932e2bae4cc9671ca34b29eb46bc9ac52b1dc274612536d78ff384284ae519c1f9028599fd1348107186e93da57b5c48141e23b435db2c5088bcc28d81ab8e38479024b423d4737ba1146ea2d29aa0a29be4cd0e240b4da4ed5cd1265544cde0553e0b343c9c3460430a657aff69a412296b2f451a0baddfde8174115fac7e768f1b194218ad0fec41a61046e7542d75224bcd511a44b63819ab691a8796edc9f45de63c0e9dd00c35545704a117e2f084aa4bceb860509fbb844352914343e93b9b6194fb7a8313b9c2637c4e05f2844da4ed6e9a80897a399e2e98d9f4fc2d8dc81747c334fec611cc602ff5be4b51c002982a8b70011b646a708d6226eb98b2d48a0bd91d5de53e5c4482a496f56316e99bb76304b3e5726c1bc31ccad26b9a3057a0f082d54ecc235ff2ea5d98cf0c354e2ca07345f50d28646b32ead73b50246a18a2ab5dd8e9c242c696d861c5c544e90d47b148a8466abd3da3582c54a3340d8bbb8fa35888a38c55258db844c4103e730c977244d2fc25415c2654e3137d730e5a70392d6bea970fe20a56cf50b7da852bd562532d1136c38c7e2c65c50db597e32ab658bdc28665649c6ae1012ce7be302db16385bc2feaad58c9a29a2574b5403119cbed2861c3d5738e8c6315ab9a508c6b440ad3ccbecded2eac2655d2ea47b1869a690b8276ac1530ce54396543a9301492d287752c9b7e45ab0bd732728de538d60b618cc95b6e4199bc3e361cc7061142acb1aa42ba78af63a38d876c286741b415fb703dd932b3ba1d156c9d36b0aacf8e8dc24d7c665d85159be82669ae159bc561286a260fdab185a42838e0c456e69db1e3626ca39b448f1d37302075a01037921086126ce7464baa6b3c698385abd06487550c72841e36764b5b5f0c3b7747b277ca018738186d80934dcef60cc325afddfa32b8d9567393037f21190d956bdbf057aef9bc4afc8da967366cc1df597e83f7a405ff60c1d31b96db26f04f66ab760ee35f32af6acbf16fd64579a515ff119ad1333d25872ca824030c85a89263ad294735673e7b6e0f6a649257b7c0c32aa574c0cb9157f45be1e3201b4abb5c23a8e59cebb6490f1fbf4c2b69a2ea587db5af547a43d4d38ba26d143bd86055b71d0d8c47db50829d72bbabb722209c84a7f7b927b08b5999176237ab9cb863d08d469ad1178d638f082034635745a7134d32375661afbc035dc7d14c8f333c2eec63a4aa6dbd689109b6a309adcc513168431b65a9951d68976d36f4623f8ba5dfb9e4901b1dbc21754bd02940a4ee00ba38c8a65deb82e8e66652d42d3b8c1ec696d263432fe990d2508a03ec6a726531fac8abac836ef4f364ea99df709091ea1bba31c00b29615393158778e7e5ee2cdb8fa0bce66c2770989a69a5ed38c2eda8db8b413acc963eb886d80c5de5a2361ca55e8e771f8eb18b59deb201dcc46b353bb04cfa1eba598843b277f70de316ee8ae45aa974b7b2214a5f1f6e63b4d9b5527cb73317b3ef800577c8675b2db8938c485d6ac35d6c50f69e31dc4da4f43a700f09a9dc60c5bd349adeb0e608ee133b0046dccf0135954cd9c6f000e75ee9edc783a23e480fe221da34f87af03015b3fdeb3a6c7844bea297b7e2516e1d63ad346a8fd14e81058fcb469bf0047b9e51d684274924632f9e62b6e649e91b929548aa3d8ca785f71843dd55432e3c23df4952f6cfb2a66affb23e3c4796e7d65f8ce7797b249c728fe205c2acea459d78514410a7ecc64b6cbac1368e9719c10cbf1bafc8842cb1e05592de58d3edc46b54ccbe44fa8e646934352d789da19a6e9cc21b94254c0ee24d7a4f6bc35b5ccfa993fd789b9b22dd8e7748306d75a11defca8f974ebcc70ea6fa1bf13e8de40516e303f95575740c1f72579b7dbd567cc417ba69333e2667538ba46df3091573fd6df89493a2aa5f8acf645eacb1e173f99ddf872fa896df3d8a2f49c3cc40713fbea215e3e54e7c2dded52129fe7507a52f8b6f84a169a90e7ccb1bc7d488efc899a42b06f13dcf196af0031d264a8f881fd9db947ae9e2fd89b5c8ad1ac0cff227917710bff0bd91d250d182e372e7e7b76198cfa911aebddc9518956b7b9d1d27a892b0d281319245e73d8a7136af6012138c4ab13ee8c2af32956b364b9f9c27d5f20fae129c2223f25df88d13a1f68f609207d3aba630c566aabcdb5bf0bb9871e97bee34f99fb3aa196768247f95057fc88b62c08d3f7941aad635011ad12fb5b7cb81108d58a43a6f3742058ad15459a5f7bdf824c9f4209c07557ea7447a91bbba567aad0a0739de61e9192c5062e7b074cf8a7c746ba6304dc3cf23ef2ac9091feb0356e96dcf3acc72234ea0b8ccc0883402a260a6264cd788cfa1445f49df38ce13c2f094419c2f408caa110922d738e55669d613059cae98b7ba1d0a3a34061d481242e9e3b1f41094149a5605a1625df2175891cc9cccb3c6a1a6cc5c6c8346ce37d08514116a9829502edd12a9421a9d227dcfa709344de3b3219d1e157593c860b9338aa46f45115c58ae47dabc599a733c88ca47b67011aa09b44aef04adc0514acfb2a111e868d65cbf077a519ee8e45d30b089b936e4b056b981a22e18855a687e593b7235dc06a7edc8631646cf5a98e820d53709334faaae388d7c66a11f7461067b9ae359820281e233030e5c2010b4eb1a31935554743b702151ee4a1b2ed2f09950db8359aca1b2d18dd93ca9293c8239f4675ad88eb922c1a864efa2fd9827928fd51fc37c3251bdb01b0be43897b5a29074d3fa7b5c275044ff795b6d58c8b3aa2313b8985cd0963bb048c30776f51c1b160b8fd38c8b504c2baae651fc1f");
        imageData[15] = SSTORE2.write(hex"4d58775c9457163d14696a12181886a1080333c34024668d86a808c69804d1803d22600924d3273da10c30332003020ea84811040149efbdf7de7b2f9b4d0f828aa22ceeeee7fef69d6fff3cbffbbe7bef39b7bc37b32c06089d01c05f5fda874b050a48d9e6c3728166ea5d5b709940418adc16ac905048a08442c32771b9300547e55970854081a9f9365c29d02cb5fd1872253433f82cd2d4acb61fc74a619da16e68429e8466859cfdd250bebedd328155e2f8ec64d7e23366ac260e771eb48ee22ae6abac1d44be848203fe9b2f0a9892b6641a6bc832b1ca8ab54c49e7da8f75c2e739e1171fb64e603d534a28e9c5064648aadb858d82f5ec3915d82481b0a0b307d39d857b70b580c1a99ecbecd82c3ef44bdbb61b85028545b69bb1454233fc248422113c28c5b3a3d9816211003a234a2864bac46eab40d00c9bb08deed59d666c67ce8a410776884c02e2bc9d765cc3c2852f1a40299d465537a18c259e5362c7b59449956dc37502856a6a4d305208439d09261162b6be7a810d66d28baf6a83851f6a878db012a97aecb09185be602fecc24d6854ee80090e162dbc7e1bae67a6ba1d43b8411c9da999df35861b053c2fde39781237d191cebd610437b3cd0c5503e631dc227040b877c07e14b7b28ea94edc26b39e36e276b698d29dd56c47b9c0fedaead2293b2a28bca6611095a2634355ae553efb28aae4deca35c14979935d3da86656ba9a339313a861e7c55e5c326844adac54af092ea695e21c815ba09064cf0678288d7ab70375241f3be01847bd30cecec86ec34e4135407f180dcc2ea1ba055e113f4c5799659b4023a9e9d70ea14958a172ef189ec02e9959f926343348a2e4a985b9c654b6a2957e94d7ecc76e6aad34c1274070722bdad8b55139e36827a7e48bbab04770822e77cf31ec6580d49a7eeca397a4cde8e0dc65f84ed9b19f926b2b7ce8a49bb893d6e3e8220755fe04bad9d2da8a52f4b0c194f59bcd38c005a735a3976ce3774ea14f9c9c955257b61f0749435f6043bf3006cd5d3f3d8a011a0d654338c48819bb1c18e460ea97b66148049c9561c2b00081a9661c1695088dd8b9b0cd8c114e9bc2d98c3b84355873d119db31dcc921caf0197197bc279cadb89b1c933777db710ff7d0bd1446bb6008f7c952e475da703f158e771947f100955137e1410a1c5fbda20b0fd1e3c34c23e6b0098f70cfc53973ba1d78944244d46ec263641be1c6e374af58892728bcb6db8827e9455979dde1713c4501d39c3bf0342b9fb1c68667c4d9c0704fd68019cf7248921a73daf09c308728ab4b5b4c789ee69412a9515ee09a4af274e24591d28c8c7d78498090280b5e66276a06f08a5c4fcf257895c946b81737dbf01afb5bbbd081d7e9c5b0176fc845ea37e14d914a60b4b3cd8ab798697c437ebf056fcbbbbe7c04ef88c37e91398356bccbd5af38edb3e13d8ecdbc7a1bde1731c3922bf081007e51ebf0a17c459476e2238a1e5dde868f997774c5367cc275985cbb72c88e4fd98b86450e7c461515854d367c2e8fdbd4117cc18e48ae18c697a4a1ac3f8aaf68d3944ee16b2e2665f912cb38bea158913df896ad93ea9dc277944e559d89ef495f57de3b891f18435330811fb94263a4f5fa77224363317ee27d96d0b0ca817f30a0321f3f93457afd12fcc2f0eaab06f12bfbfd370aa15f3182dfd97d71ee12f328fe20bf046f09fee445105f93d9e5c05f22ba7f945b6add51369fb2c78623f270183146903c8671266d68f4597154dc457e7115456df6311c13f6304541bf19c709232a6d4730c1bda174f74eda70823493d6eec249a614edd96ac6242b12e7d97cc081533c1cef6cc369113938a536b35f7ab74d71149507c7f14f7690e19403d36417eeb1e08c2c5bbb09ffe2e5abae5fd66dc3bf796f6b327d8ee3805a1454eb364bd322f827bba477a73f8dcaa241a93c7cd98c38a47b522c95b85ce9ad298a11bb611841020546783b102c7c22d6eb1b47087d265de990169e188cb9396710267c06a99661a63041575520bd75450475b1552223e62ed587736852d5e7e05c52d07a274d384f9cf44bf0209c27233d7d8810c8df506682422dc650efec704c2052f69ad38d2881c2925c2628c9413d30816812d43ab71aa1128e820cee4efb09c4308339c7a06694f486b5bd0ec40a1cac729f6eb1234ea659388d78d28c6f428200333426cc51f33740431f12450641a9aef9ad4812c680f8e1a3d088ef42540b90ccef22cadb9122a287c6baf27c666859e1d8262374c21a96d435693b0ebd9c5bb915a9cc3cbd22bfd90803154a6bb0238da4151b912e4c41318b87713eb34b5a731073050ad5950f2083c28657e5e0027ea7c8eec63cda749dc771215182f48be36fa4952edddff3d9021ae788151731978c5558c07889ada358c81688f214e162562ebef2f2162b32d9816905665cc288866a1b16891881699e85462c16463f83bb044b847196e6c04933b2c8c350bf0e4b29b2ca741cd96ab1ee72a84bacdb8465ccd3e05d824b058599fa13584ea5e3dc165cc6b41273ec582128cc8ad8d82aada4cb398ab1cb7db88204e754374b3d7ea5b08644d5372197b3a81c9cc04a26a0f23890a7fedf3e0a89736edd2fe5bd4a500c8e71e50d6035855439737015fb31f26ae92758be3cc9994d2820e335e258a86ab324f75af28a7635611d796564f7613d454b9c3661030b1c53ec7360230750bd7df7316c62e68a5d63b89aad91eab661b3381a70fe8626130ad9c49a9a938e516c218d79e53e14b1a8daf21528e6a7fa86c2769408e3b917ee33632b954c5f65c536713424c93564c4761ae3fa4cd8c13a6b973b700db549ca36a254d43930b60265e41c23ddd8d78a5443d2ea07a569bc4e1c9d9dbe1d464a979e6585892cb4fd569889e2b7f860e18a4dac839594523a4e9a60a370c9f5f36167662a97190e6a71fef4095c2f3e9ca17295d970833cd287467123b74a8c277bc48c9b9880beb10b37530c6de33adc22cefa29dc65d2eff85b59ad186f2e6e6347265537e3768ed1dc8d66943305754d9715156cf4c4aafda8a41e2ae9ed51258efae9aa330fc049af69d263a05a18cfbdc075c08a1ab65de4760b6ae5512bdf0e17a7709e076eee6665113cc2897f42dde931d4099b7fc60ad4337af83ae30476522b65a60d0de4149f6782977dad77ee9a44a3106786de59dc614393c001891557487817afe0180b9a05408c172d02042bd6a1959452a76cd84d4a5ae729f858e4d4652d689317ee2123dad90eb1394dd843fffa1eec95c7dd9b837d2c5aa4b3101db4c59574613f5d6a2f3d864e2ec604d7520bbab80012dc59e3e8668f293c3bd0c3f05afb280eb06d345e077a297092097df23d3e60c34176df9c8685be09f4b3685a130628459a67350eb1840a1f06e54bd3358621524a29ebc23083eb9a4d38ace6ff2659c36318619e099e05b883255435d88fe04eceb07a7d1fee620c43bd0577b30fb5a526dcf37faf88022beee5b8eb2a8a3bcdb84f3e5c3d86fb49396383110fc8a3d07849331ee4f60d6f334fe02101c352164e3bf030e34438a50be311b6835efa99fa282b90d83381c7e44bad7e0c8f33f98c41339e901f441e2b9e94efa70e3ca5967f6dedb5e269619b15378567783f45d564b65bf0acc0d07bb3bb2c788edac638a507e8f35c0f29d203dc8117d8aef39c56bc4815e656f4e025ce59626997092f533045e15ebc22a120ffb31fe2551a54abbbf01a0bad72e7e37536645c6d93196f305c82f4c3f04d798f1539f016c5c9c8efc7dbf223d7b9c78877e4c7e35a1bdee51c2755160f98f01e59a9bccba40dfd3efb30fa0c3ea0b0ba060b3e644c5dd5303e121f062636e47638f0317b5debdc24d5f613864dabcbc7a7f4a4ac69c7676c537d89039f739568abb71d74e00bde0489dba71cf892e4d499bdf88a48b9c887afa9d8bcaa427c4335e7398bf0adfc805f8aeff8da4859da2add60dfcbaf8d6c1b7ee01d995ab9c8841fb919224ff748bf25d96ce10d87f113c7567f5afa29495b9a74f9ffcc8748725d9611bf3048f4fc69fcca5c13bc59f88d82c494f5e177468c706fecc21fecc4686f9e34d67fb2a50d3bf1175b5ab3e28c1da3cc402d7d79840f9aff00");
        imageData[16] = SSTORE2.write(hex"45d36948d3711807f0efeec3a3dcdc9c9be634a75bb6b2729689b66ecbd2caf24551d0a96efffed28ba0b4e99c9a66abe6911d6a07240581d02b41088440088a5e09051104415144e5d6a1d9f1177a9ede8ce7cbf3f99dffdf3e5901bd1ad24f4eb9f8119fa5a8534951e90ad7e18b94e23452921b9b8fde8a628aba718ed65a4429c527dd1010a3243385457ca5913247b0f44a0cdf28ab1cad3b6ec7f09dd7c90909f8c1ddf4a241df274c53579ed23084194ada8ce23efc24abce692eed12314b5d455ab51fbf28e9ec2d3efc9692463137af097fd8b9031580eddfb1e3720f760b90d96898b17516721b6d3ea363d3701d14849519815f3e28a5a892616e5a1aa67036ed829a92ca567d171a4a48f25c829692c6da59091d25992174197a96f67e1171b4983e776b9f80788a2a4773898804b26ac76a1f1279c5ac482de6d1b613f21a375e1331ffff0e3a6e23c9c637eeed8681ac3cb973cfc5e330f2498ca10892b96b0f78067d30d126e29d676b8660a6b6ded0e9bd13450a65989a3d0375b0f0fd99da8ff4f8904a59eb0a0c0b5158693a7552a8b716365a5b9b1f1690c6fbb404a34827aab3aeedf163011fd8b92f820c6acad242657ed8ffdf7fb9884c4af1d6eb02b2a4a455ce7defd43558c84b64f6c6904d2da57b0a0e0a2a4b0572687eada5bd2a8c5c9edf3ae487939be640cd79b8784e63773d16f189cd0ddba5bf431e61b9c9d37f1c8bf902b34eaf1d10e0a655d5c97e2ce1d796ddb445c4527e0096960d02f2f901244b1f75191f2b7b16cba9a5cf6b2ac00afe66a633853e14f0c14c53f0904cb0364ea390a426bd2cf2112b79a0ab75f30c56d140ade50c8af84999db8ae15d370f6af95c42b06d0195e3136e2aa12ba1d25bbe8ded857d6c9ff9d81a1ad8ee3ec7b6ff2adbe777d9da46d9ee9f607b7392edeb376cb3636c8f296464ef19a81c7f9f4925dccba8f4d67bd93ea8641b3dc0b650647b2ac0762ccc767680ed9afb6c5bc6d83e7acc56f5826dd93bb65ddfd93e51cbc9269aa9c44e0795dede022a8393ebd9a654b1dd7b88ede009b6af826ced11b6876fb21d1e61fbf6215bd753b6c24bb6231fd87e9e61bb5caf207b32954aefa893cae0f44a2ac78b37b36daaa6f22f");
    }

     function getImage(uint8[] memory metadata, uint256 tokenId) external override view returns (GIF memory gif) {

        uint8 imageFile = getImageFileForToken(tokenId); 
        bytes memory buffer = BufferUtils.decompress(imageData[imageFile], imageLengths[imageFile]);

        gif.width = 36;
        gif.height = 36;
        gif.frames = new GIFFrame[](1);

        GIFFrame memory frame;
        frame.width = gif.width;
        frame.height = gif.height;
        frame.buffer = new uint32[](frame.width * frame.height);

        (uint256 position, ) = BufferUtils.advanceToTokenPosition(tokenId, buffer);
        (, position) = BufferUtils.readUInt32(position, buffer);
        
        bool isTallToken = metadata[0] == 120;

        for (uint8 i = 1; i < metadata.length; i++) {
            uint8 value = metadata[i];            

            address feature;
            if (isTallToken) {
                feature = tall.get(value);
                if (feature == address(0)) {
                    feature = any.get(value);                   
                }
            } else {
                feature = short.get(value);
                if (feature == address(0)) {      
                    feature = any.get(value);                               
                }
            }

            if (feature != address(0)) {

                uint8 featureId = uint8(buffer[position++]);                
                if (featureId != value) {

                    if(value == 20) {
                        // Creep attribute is always 20, but can be one of:
                        // Body (20), or Eyes (253), in that order
                        //
                        if(featureId == 253) { 
                            value = 253;
                            if (isTallToken) {
                                feature = tall.get(value);
                            } else {
                                feature = short.get(value);                                    
                            }
                        }
                    } else if(value == 37) {
                        // Undead attribute is always 37, but can be one of:
                        // Body (37), or Eyes (252), in that order
                        //
                        if(featureId == 252) { 
                            value = 252;
                            if (isTallToken) {
                                feature = tall.get(value);
                            } else {
                                feature = short.get(value);                                    
                            }
                        }
                    } else if(value == 55) {
                        // Vampire attribute is always 55, but can be one of:
                        // Mouth (55), Head (249), or Eyes (250), in that order
                        //
                        if(featureId == 249) { 
                            value = 249;
                            if (isTallToken) {
                                feature = tall.get(value);
                            } else {
                                feature = short.get(value);                                    
                            }
                        } else if(featureId == 250) {
                            value = 250;
                            feature = any.get(value);
                        }
                    }

                    if(value != featureId) {
                        revert InvalidDrawOrder(featureId);
                    }
                }

                Rectangle memory rect;
                if (isTallToken) {
                    rect = tall.getRect(value);
                } else {
                    rect = short.getRect(value);                                    
                }

                GIFDraw.draw(IPixelRenderer(renderer), frame, SSTORE2.read(feature), 0, rect.x, rect.y, true);
            }
        }       

        int8 deltaFile = ICrypToadzDeltas(deltas).getDeltaFileForToken(tokenId);
        if(deltaFile != -1) {
            (frame.buffer) = ICrypToadzDeltas(deltas).drawDelta(frame, tokenId, uint8(deltaFile));
        }

        gif.frames[gif.frameCount++] = frame;
    }

    function getImage(uint8[] memory metadata) external override view returns (GIF memory gif) {

        gif.width = 36;
        gif.height = 36;
        gif.frames = new GIFFrame[](1);

        GIFFrame memory frame;
        frame.width = gif.width;
        frame.height = gif.height;
        frame.buffer = new uint32[](frame.width * frame.height);

        bool isTallToken = metadata[0] == 120;
        
        for (uint8 i = 1; i < metadata.length; i++) {
            uint8 value = metadata[i];         

            address feature;
            if (isTallToken) {
                feature = tall.get(value);
                if (feature == address(0)) {
                    feature = any.get(value);                   
                }
            } else {
                feature = short.get(value);
                if (feature == address(0)) {      
                    feature = any.get(value);                               
                }
            }

            if (feature != address(0)) {
                Rectangle memory rect;
                if (isTallToken) {
                    rect = tall.getRect(value);
                } else {
                    rect = short.getRect(value);                                    
                }
                GIFDraw.draw(IPixelRenderer(renderer), frame, SSTORE2.read(feature), 0, rect.x, rect.y, true);
            }
        }
        
        gif.frames[gif.frameCount++] = frame;
    }

    function getImageFileForToken(uint tokenId) private pure returns (uint8) {
        if(tokenId >= 1 && tokenId <= 430) {
            return 0;
        }
        if(tokenId >= 431 && tokenId <= 860) {
            return 1;
        }
        if(tokenId >= 861 && tokenId <= 1290) {
            return 2;
        }
        if(tokenId >= 1291 && tokenId <= 1723) {
            return 3;
        }
        if(tokenId >= 1724 && tokenId <= 2154) {
            return 4;
        }
        if(tokenId >= 2155 && tokenId <= 2587) {
            return 5;
        }
        if(tokenId >= 2588 && tokenId <= 3018) {
            return 6;
        }
        if(tokenId >= 3019 && tokenId <= 3446) {
            return 7;
        }
        if(tokenId >= 3447 && tokenId <= 3877) {
            return 8;
        }
        if(tokenId >= 3878 && tokenId <= 4308) {
            return 9;
        }
        if(tokenId >= 4309 && tokenId <= 4739) {
            return 10;
        }
        if(tokenId >= 4740 && tokenId <= 5171) {
            return 11;
        }
        if(tokenId >= 5172 && tokenId <= 5601) {
            return 12;
        }
        if(tokenId >= 5602 && tokenId <= 6032) {
            return 13;
        }
        if(tokenId >= 6033 && tokenId <= 6464) {
            return 14;
        }
        if(tokenId >= 6465 && tokenId <= 6894) {
            return 15;
        }
        if(tokenId >= 6895 && tokenId <= 56000000) {
            return 16;
        }
        revert ImageFileOutOfRange(tokenId);
    }    
}

// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)

pragma solidity ^0.8.0;

/**
 * @dev Interface of the ERC165 standard, as defined in the
 * https://eips.ethereum.org/EIPS/eip-165[EIP].
 *
 * Implementers can declare support of contract interfaces, which can then be
 * queried by others ({ERC165Checker}).
 *
 * For an implementation, see {ERC165}.
 */
interface IERC165 {
    /**
     * @dev Returns true if this contract implements the interface defined by
     * `interfaceId`. See the corresponding
     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]
     * to learn more about how these ids are created.
     *
     * This function call must use less than 30 000 gas.
     */
    function supportsInterface(bytes4 interfaceId) external view returns (bool);
}

// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165Checker.sol)

pragma solidity ^0.8.0;

import "./IERC165.sol";

/**
 * @dev Library used to query support of an interface declared via {IERC165}.
 *
 * Note that these functions return the actual result of the query: they do not
 * `revert` if an interface is not supported. It is up to the caller to decide
 * what to do in these cases.
 */
library ERC165Checker {
    // As per the EIP-165 spec, no interface should ever match 0xffffffff
    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;

    /**
     * @dev Returns true if `account` supports the {IERC165} interface,
     */
    function supportsERC165(address account) internal view returns (bool) {
        // Any contract that implements ERC165 must explicitly indicate support of
        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid
        return
            _supportsERC165Interface(account, type(IERC165).interfaceId) &&
            !_supportsERC165Interface(account, _INTERFACE_ID_INVALID);
    }

    /**
     * @dev Returns true if `account` supports the interface defined by
     * `interfaceId`. Support for {IERC165} itself is queried automatically.
     *
     * See {IERC165-supportsInterface}.
     */
    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {
        // query support of both ERC165 as per the spec and support of _interfaceId
        return supportsERC165(account) && _supportsERC165Interface(account, interfaceId);
    }

    /**
     * @dev Returns a boolean array where each value corresponds to the
     * interfaces passed in and whether they're supported or not. This allows
     * you to batch check interfaces for a contract where your expectation
     * is that some interfaces may not be supported.
     *
     * See {IERC165-supportsInterface}.
     *
     * _Available since v3.4._
     */
    function getSupportedInterfaces(address account, bytes4[] memory interfaceIds)
        internal
        view
        returns (bool[] memory)
    {
        // an array of booleans corresponding to interfaceIds and whether they're supported or not
        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);

        // query support of ERC165 itself
        if (supportsERC165(account)) {
            // query support of each interface in interfaceIds
            for (uint256 i = 0; i < interfaceIds.length; i++) {
                interfaceIdsSupported[i] = _supportsERC165Interface(account, interfaceIds[i]);
            }
        }

        return interfaceIdsSupported;
    }

    /**
     * @dev Returns true if `account` supports all the interfaces defined in
     * `interfaceIds`. Support for {IERC165} itself is queried automatically.
     *
     * Batch-querying can lead to gas savings by skipping repeated checks for
     * {IERC165} support.
     *
     * See {IERC165-supportsInterface}.
     */
    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {
        // query support of ERC165 itself
        if (!supportsERC165(account)) {
            return false;
        }

        // query support of each interface in _interfaceIds
        for (uint256 i = 0; i < interfaceIds.length; i++) {
            if (!_supportsERC165Interface(account, interfaceIds[i])) {
                return false;
            }
        }

        // all interfaces supported
        return true;
    }

    /**
     * @notice Query if a contract implements an interface, does not check ERC165 support
     * @param account The address of the contract to query for support of an interface
     * @param interfaceId The interface identifier, as specified in ERC-165
     * @return true if the contract at account indicates support of the interface with
     * identifier interfaceId, false otherwise
     * @dev Assumes that account contains a contract that supports ERC165, otherwise
     * the behavior of this method is undefined. This precondition can be checked
     * with {supportsERC165}.
     * Interface identification is specified in ERC-165.
     */
    function _supportsERC165Interface(address account, bytes4 interfaceId) private view returns (bool) {
        bytes memory encodedParams = abi.encodeWithSelector(IERC165.supportsInterface.selector, interfaceId);
        (bool success, bytes memory result) = account.staticcall{gas: 30000}(encodedParams);
        if (result.length < 32) return false;
        return success && abi.decode(result, (bool));
    }
}

// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)

pragma solidity ^0.8.0;

import "../utils/Context.sol";

/**
 * @dev Contract module which provides a basic access control mechanism, where
 * there is an account (an owner) that can be granted exclusive access to
 * specific functions.
 *
 * By default, the owner account will be the one that deploys the contract. This
 * can later be changed with {transferOwnership}.
 *
 * This module is used through inheritance. It will make available the modifier
 * `onlyOwner`, which can be applied to your functions to restrict their use to
 * the owner.
 */
abstract contract Ownable is Context {
    address private _owner;

    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);

    /**
     * @dev Initializes the contract setting the deployer as the initial owner.
     */
    constructor() {
        _transferOwnership(_msgSender());
    }

    /**
     * @dev Throws if called by any account other than the owner.
     */
    modifier onlyOwner() {
        _checkOwner();
        _;
    }

    /**
     * @dev Returns the address of the current owner.
     */
    function owner() public view virtual returns (address) {
        return _owner;
    }

    /**
     * @dev Throws if the sender is not the owner.
     */
    function _checkOwner() internal view virtual {
        require(owner() == _msgSender(), "Ownable: caller is not the owner");
    }

    /**
     * @dev Leaves the contract without owner. It will not be possible to call
     * `onlyOwner` functions anymore. Can only be called by the current owner.
     *
     * NOTE: Renouncing ownership will leave the contract without an owner,
     * thereby removing any functionality that is only available to the owner.
     */
    function renounceOwnership() public virtual onlyOwner {
        _transferOwnership(address(0));
    }

    /**
     * @dev Transfers ownership of the contract to a new account (`newOwner`).
     * Can only be called by the current owner.
     */
    function transferOwnership(address newOwner) public virtual onlyOwner {
        require(newOwner != address(0), "Ownable: new owner is the zero address");
        _transferOwnership(newOwner);
    }

    /**
     * @dev Transfers ownership of the contract to a new account (`newOwner`).
     * Internal function without access restriction.
     */
    function _transferOwnership(address newOwner) internal virtual {
        address oldOwner = _owner;
        _owner = newOwner;
        emit OwnershipTransferred(oldOwner, newOwner);
    }
}

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

import "@openzeppelin/contracts/access/Ownable.sol";

import "../lib/SSTORE2.sol";
import "../ICrypToadzFeatureBuilder.sol";

contract CrypToadzBuilderAny is Ownable, ICrypToadzFeatureBuilder {

    function get(uint8 key) external view returns (address) {
        return key < 106 ? CrypToadzBuilderAnyA(_a).get(key) : CrypToadzBuilderAnyB(_b).get(key);
    }

    function getRect(uint8 key) external view returns (Rectangle memory) { /* intentionally blank, all backgrounds are (0, 0) */ }

	address _a;
	address _b;
	
    function setAddresses(address a, address b) external onlyOwner {
		_a = a;
		_b = b;
	}
}

contract CrypToadzBuilderAnyA {
	mapping(uint8 => address) any;
	
	function get(uint8 key) external view returns (address) {
        return any[key];
    }
	
	constructor() {
        any[0] = SSTORE2.write(hex"");
        any[1] = SSTORE2.write(hex"");
        any[2] = SSTORE2.write(hex"01ff5d858510050000020100000201000102010002020100030201000402010005020100060201000702010008020100090201000a0201000b0201000c0201000d0201000e0201000f020100100201001102010012020100130201001402010015020100160201001702010018020100190201001a0201001b0201001c0201001d0201001e0201001f02010020020100210201002202010023020101000201010102010102020101030201010402010105020101060201010702010108020101090201010a0201010b0201010c0201010d0201010e0201010f020101100201011102010112020101130201011402010115020101160201011702010118020101190201011a0201011b0201011c0201011d0201011e0201011f02010120020101210201012202010123020102000201020102010202020102030201020402010205020102060201020702010208020102090201020a0201020b0201020c0201020d0201020e0201020f020102100201021102010212020102130201021402010215020102160201021702010218020102190201021a0201021b0201021c0201021d0201021e0201021f02010220020102210201022202010223020103000201030102010302020103030201030402010305020103060201030702010308020103090201030a0201030b0201030c0201030d0201030e0201030f020103100201031102010312020103130201031402010315020103160201031702010318020103190201031a0201031b0201031c0201031d0201031e0201031f02010320020103210201032202010323020104000201040102010402020104030201040402010405020104060201040702010408020104090201040a0201040b0201040c0201040d0201040e0201040f020104100201041102010412020104130201041402010415020104160201041702010418020104190201041a0201041b0201041c0201041d0201041e0201041f02010420020104210201042202010423020105000201050102010502020105030201050402010505020105060201050702010508020105090201050a0201050b0201050c0201050d0201050e0201050f020105100201051102010512020105130201051402010515020105160201051702010518020105190201051a0201051b0201051c0201051d0201051e0201051f02010520020105210201052202010523020106000201060102010602020106030201060402010605020106060201060702010608020106090201060a0201060b0201060c0201060d0201060e0201060f020106100201061102010612020106130201061402010615020106160201061702010618020106190201061a0201061b0201061c0201061d0201061e0201061f02010620020106210201062202010623020107000201070102010702020107030201070402010705020107060201070702010708020107090201070a0201070b0201070c0201070d0201070e0201070f020107100201071102010712020107130201071402010715020107160201071702010718020107190201071a0201071b0201071c0201071d0201071e0201071f02010720020107210201072202010723020108000201080102010802020108030201080402010805020108060201080702010808020108090201080a0201080b0201080c0201080d0201080e0201080f020108100201081102010812020108130201081402010815020108160201081702010818020108190201081a0201081b0201081c0201081d0201081e0201081f02010820020108210201082202010823020109000201090102010902020109030201090402010905020109060201090702010908020109090201090a0201090b0201090c0201090d0201090e0201090f020109100201091102010912020109130201091402010915020109160201091702010918020109190201091a0201091b0201091c0201091d0201091e0201091f0201092002010921020109220201092302010a0002010a0102010a0202010a0302010a0402010a0502010a0602010a0702010a0802010a0902010a0a02010a0b02010a0c02010a0d02010a0e02010a0f02010a1002010a1102010a1202010a1302010a1402010a1502010a1602010a1702010a1802010a1902010a1a02010a1b02010a1c02010a1d02010a1e02010a1f02010a2002010a2102010a2202010a2302010b0002010b0102010b0202010b0302010b0402010b0502010b0602010b0702010b0802010b0902010b0a02010b0b02010b0c02010b0d02010b0e02010b0f02010b1002010b1102010b1202010b1302010b1402010b1502010b1602010b1702010b1802010b1902010b1a02010b1b02010b1c02010b1d02010b1e02010b1f02010b2002010b2102010b2202010b2302010c0002010c0102010c0202010c0302010c0402010c0502010c0602010c0702010c0802010c0902010c0a02010c0b02010c0c02010c0d02010c0e02010c0f02010c1002010c1102010c1202010c1302010c1402010c1502010c1602010c1702010c1802010c1902010c1a02010c1b02010c1c02010c1d02010c1e02010c1f02010c2002010c2102010c2202010c2302010d0002010d0102010d0202010d0302010d0402010d0502010d0602010d0702010d0802010d0902010d0a02010d0b02010d0c02010d0d02010d0e02010d0f02010d1002010d1102010d1202010d1302010d1402010d1502010d1602010d1702010d1802010d1902010d1a02010d1b02010d1c02010d1d02010d1e02010d1f02010d2002010d2102010d2202010d2302010e0002010e0102010e0202010e0302010e0402010e0502010e0602010e0702010e0802010e0902010e0a02010e0b02010e0c02010e0d02010e0e02010e0f02010e1002010e1102010e1202010e1302010e1402010e1502010e1602010e1702010e1802010e1902010e1a02010e1b02010e1c02010e1d02010e1e02010e1f02010e2002010e2102010e2202010e2302010f0002010f0102010f0202010f0302010f0402010f0502010f0602010f0702010f0802010f0902010f0a02010f0b02010f0c02010f0d02010f0e02010f0f02010f1002010f1102010f1202010f1302010f1402010f1502010f1602010f1702010f1802010f1902010f1a02010f1b02010f1c02010f1d02010f1e02010f1f02010f2002010f2102010f2202010f23020110000201100102011002020110030201100402011005020110060201100702011008020110090201100a0201100b0201100c0201100d0201100e0201100f020110100201101102011012020110130201101402011015020110160201101702011018020110190201101a0201101b0201101c0201101d0201101e0201101f02011020020110210201102202011023020111000201110102011102020111030201110402011105020111060201110702011108020111090201110a0201110b0201110c0201110d0201110e0201110f020111100201111102011112020111130201111402011115020111160201111702011118020111190201111a0201111b0201111c0201111d0201111e0201111f02011120020111210201112202011123020112000201120102011202020112030201120402011205020112060201120702011208020112090201120a0201120b0201120c0201120d0201120e0201120f020112100201121102011212020112130201121402011215020112160201121702011218020112190201121a0201121b0201121c0201121d0201121e0201121f02011220020112210201122202011223020113000201130102011302020113030201130402011305020113060201130702011308020113090201130a0201130b0201130c0201130d0201130e0201130f020113100201131102011312020113130201131402011315020113160201131702011318020113190201131a0201131b0201131c0201131d0201131e0201131f02011320020113210201132202011323020114000201140102011402020114030201140402011405020114060201140702011408020114090201140a0201140b0201140c0201140d0201140e0201140f020114100201141102011412020114130201141402011415020114160201141702011418020114190201141a0201141b0201141c0201141d0201141e0201141f02011420020114210201142202011423020115000201150102011502020115030201150402011505020115060201150702011508020115090201150a0201150b0201150c0201150d0201150e0201150f020115100201151102011512020115130201151402011515020115160201151702011518020115190201151a0201151b0201151c0201151d0201151e0201151f02011520020115210201152202011523020116000201160102011602020116030201160402011605020116060201160702011608020116090201160a0201160b0201160c0201160d0201160e0201160f020116100201161102011612020116130201161402011615020116160201161702011618020116190201161a0201161b0201161c0201161d0201161e0201161f02011620020116210201162202011623020117000201170102011702020117030201170402011705020117060201170702011708020117090201170a0201170b0201170c0201170d0201170e0201170f020117100201171102011712020117130201171402011715020117160201171702011718020117190201171a0201171b0201171c0201171d0201171e0201171f02011720020117210201172202011723020118000201180102011802020118030201180402011805020118060201180702011808020118090201180a0201180b0201180c0201180d0201180e0201180f020118100201181102011812020118130201181402011815020118160201181702011818020118190201181a0201181b0201181c0201181d0201181e0201181f02011820020118210201182202011823020119000201190102011902020119030201190402011905020119060201190702011908020119090201190a0201190b0201190c0201190d0201190e0201190f020119100201191102011912020119130201191402011915020119160201191702011918020119190201191a0201191b0201191c0201191d0201191e0201191f0201192002011921020119220201192302011a0002011a0102011a0202011a0302011a0402011a0502011a0602011a0702011a0802011a0902011a0a02011a0b02011a0c02011a0d02011a0e02011a0f02011a1002011a1102011a1202011a1302011a1402011a1502011a1602011a1702011a1802011a1902011a1a02011a1b02011a1c02011a1d02011a1e02011a1f02011a2002011a2102011a2202011a2302011b0002011b0102011b0202011b0302011b0402011b0502011b0602011b0702011b0802011b0902011b0a02011b0b02011b0c02011b0d02011b0e02011b0f02011b1002011b1102011b1202011b1302011b1402011b1502011b1602011b1702011b1802011b1902011b1a02011b1b02011b1c02011b1d02011b1e02011b1f02011b2002011b2102011b2202011b2302011c0002011c0102011c0202011c0302011c0402011c0502011c0602011c0702011c0802011c0902011c0a02011c0b02011c0c02011c0d02011c0e02011c0f02011c1002011c1102011c1202011c1302011c1402011c1502011c1602011c1702011c1802011c1902011c1a02011c1b02011c1c02011c1d02011c1e02011c1f02011c2002011c2102011c2202011c2302011d0002011d0102011d0202011d0302011d0402011d0502011d0602011d0702011d0802011d0902011d0a02011d0b02011d0c02011d0d02011d0e02011d0f02011d1002011d1102011d1202011d1302011d1402011d1502011d1602011d1702011d1802011d1902011d1a02011d1b02011d1c02011d1d02011d1e02011d1f02011d2002011d2102011d2202011d2302011e0002011e0102011e0202011e0302011e0402011e0502011e0602011e0702011e0802011e0902011e0a02011e0b02011e0c02011e0d02011e0e02011e0f02011e1002011e1102011e1202011e1302011e1402011e1502011e1602011e1702011e1802011e1902011e1a02011e1b02011e1c02011e1d02011e1e02011e1f02011e2002011e2102011e2202011e2302011f0002011f0102011f0202011f0302011f0402011f0502011f0602011f0702011f0802011f0902011f0a02011f0b02011f0c02011f0d02011f0e02011f0f02011f1002011f1102011f1202011f1302011f1402011f1502011f1602011f1702011f1802011f1902011f1a02011f1b02011f1c02011f1d02011f1e02011f1f02011f2002011f2102011f2202011f23020120000201200102012002020120030201200402012005020120060201200702012008020120090201200a0201200b0201200c0201200d0201200e0201200f020120100201201102012012020120130201201402012015020120160201201702012018020120190201201a0201201b0201201c0201201d0201201e0201201f02012020020120210201202202012023020121000201210102012102020121030201210402012105020121060201210702012108020121090201210a0201210b0201210c0201210d0201210e0201210f020121100201211102012112020121130201211402012115020121160201211702012118020121190201211a0201211b0201211c0201211d0201211e0201211f02012120020121210201212202012123020122000201220102012202020122030201220402012205020122060201220702012208020122090201220a0201220b0201220c0201220d0201220e0201220f020122100201221102012212020122130201221402012215020122160201221702012218020122190201221a0201221b0201221c0201221d0201221e0201221f02012220020122210201222202012223020123000201230102012302020123030201230402012305020123060201230702012308020123090201230a0201230b0201230c0201230d0201230e0201230f020123100201231102012312020123130201231402012315020123160201231702012318020123190201231a0201231b0201231c0201231d0201231e0201231f02012320020123210201232202012323");
        any[3] = SSTORE2.write(hex"");
        any[4] = SSTORE2.write(hex"");
        any[5] = SSTORE2.write(hex"");
        any[6] = SSTORE2.write(hex"");
        any[7] = SSTORE2.write(hex"");
        any[8] = SSTORE2.write(hex"01ff2f363510050000020100000201000102010002020100030201000402010005020100060201000702010008020100090201000a0201000b0201000c0201000d0201000e0201000f020100100201001102010012020100130201001402010015020100160201001702010018020100190201001a0201001b0201001c0201001d0201001e0201001f02010020020100210201002202010023020101000201010102010102020101030201010402010105020101060201010702010108020101090201010a0201010b0201010c0201010d0201010e0201010f020101100201011102010112020101130201011402010115020101160201011702010118020101190201011a0201011b0201011c0201011d0201011e0201011f02010120020101210201012202010123020102000201020102010202020102030201020402010205020102060201020702010208020102090201020a0201020b0201020c0201020d0201020e0201020f020102100201021102010212020102130201021402010215020102160201021702010218020102190201021a0201021b0201021c0201021d0201021e0201021f02010220020102210201022202010223020103000201030102010302020103030201030402010305020103060201030702010308020103090201030a0201030b0201030c0201030d0201030e0201030f020103100201031102010312020103130201031402010315020103160201031702010318020103190201031a0201031b0201031c0201031d0201031e0201031f02010320020103210201032202010323020104000201040102010402020104030201040402010405020104060201040702010408020104090201040a0201040b0201040c0201040d0201040e0201040f020104100201041102010412020104130201041402010415020104160201041702010418020104190201041a0201041b0201041c0201041d0201041e0201041f02010420020104210201042202010423020105000201050102010502020105030201050402010505020105060201050702010508020105090201050a0201050b0201050c0201050d0201050e0201050f020105100201051102010512020105130201051402010515020105160201051702010518020105190201051a0201051b0201051c0201051d0201051e0201051f02010520020105210201052202010523020106000201060102010602020106030201060402010605020106060201060702010608020106090201060a0201060b0201060c0201060d0201060e0201060f020106100201061102010612020106130201061402010615020106160201061702010618020106190201061a0201061b0201061c0201061d0201061e0201061f02010620020106210201062202010623020107000201070102010702020107030201070402010705020107060201070702010708020107090201070a0201070b0201070c0201070d0201070e0201070f020107100201071102010712020107130201071402010715020107160201071702010718020107190201071a0201071b0201071c0201071d0201071e0201071f02010720020107210201072202010723020108000201080102010802020108030201080402010805020108060201080702010808020108090201080a0201080b0201080c0201080d0201080e0201080f020108100201081102010812020108130201081402010815020108160201081702010818020108190201081a0201081b0201081c0201081d0201081e0201081f02010820020108210201082202010823020109000201090102010902020109030201090402010905020109060201090702010908020109090201090a0201090b0201090c0201090d0201090e0201090f020109100201091102010912020109130201091402010915020109160201091702010918020109190201091a0201091b0201091c0201091d0201091e0201091f0201092002010921020109220201092302010a0002010a0102010a0202010a0302010a0402010a0502010a0602010a0702010a0802010a0902010a0a02010a0b02010a0c02010a0d02010a0e02010a0f02010a1002010a1102010a1202010a1302010a1402010a1502010a1602010a1702010a1802010a1902010a1a02010a1b02010a1c02010a1d02010a1e02010a1f02010a2002010a2102010a2202010a2302010b0002010b0102010b0202010b0302010b0402010b0502010b0602010b0702010b0802010b0902010b0a02010b0b02010b0c02010b0d02010b0e02010b0f02010b1002010b1102010b1202010b1302010b1402010b1502010b1602010b1702010b1802010b1902010b1a02010b1b02010b1c02010b1d02010b1e02010b1f02010b2002010b2102010b2202010b2302010c0002010c0102010c0202010c0302010c0402010c0502010c0602010c0702010c0802010c0902010c0a02010c0b02010c0c02010c0d02010c0e02010c0f02010c1002010c1102010c1202010c1302010c1402010c1502010c1602010c1702010c1802010c1902010c1a02010c1b02010c1c02010c1d02010c1e02010c1f02010c2002010c2102010c2202010c2302010d0002010d0102010d0202010d0302010d0402010d0502010d0602010d0702010d0802010d0902010d0a02010d0b02010d0c02010d0d02010d0e02010d0f02010d1002010d1102010d1202010d1302010d1402010d1502010d1602010d1702010d1802010d1902010d1a02010d1b02010d1c02010d1d02010d1e02010d1f02010d2002010d2102010d2202010d2302010e0002010e0102010e0202010e0302010e0402010e0502010e0602010e0702010e0802010e0902010e0a02010e0b02010e0c02010e0d02010e0e02010e0f02010e1002010e1102010e1202010e1302010e1402010e1502010e1602010e1702010e1802010e1902010e1a02010e1b02010e1c02010e1d02010e1e02010e1f02010e2002010e2102010e2202010e2302010f0002010f0102010f0202010f0302010f0402010f0502010f0602010f0702010f0802010f0902010f0a02010f0b02010f0c02010f0d02010f0e02010f0f02010f1002010f1102010f1202010f1302010f1402010f1502010f1602010f1702010f1802010f1902010f1a02010f1b02010f1c02010f1d02010f1e02010f1f02010f2002010f2102010f2202010f23020110000201100102011002020110030201100402011005020110060201100702011008020110090201100a0201100b0201100c0201100d0201100e0201100f020110100201101102011012020110130201101402011015020110160201101702011018020110190201101a0201101b0201101c0201101d0201101e0201101f02011020020110210201102202011023020111000201110102011102020111030201110402011105020111060201110702011108020111090201110a0201110b0201110c0201110d0201110e0201110f020111100201111102011112020111130201111402011115020111160201111702011118020111190201111a0201111b0201111c0201111d0201111e0201111f02011120020111210201112202011123020112000201120102011202020112030201120402011205020112060201120702011208020112090201120a0201120b0201120c0201120d0201120e0201120f020112100201121102011212020112130201121402011215020112160201121702011218020112190201121a0201121b0201121c0201121d0201121e0201121f02011220020112210201122202011223020113000201130102011302020113030201130402011305020113060201130702011308020113090201130a0201130b0201130c0201130d0201130e0201130f020113100201131102011312020113130201131402011315020113160201131702011318020113190201131a0201131b0201131c0201131d0201131e0201131f02011320020113210201132202011323020114000201140102011402020114030201140402011405020114060201140702011408020114090201140a0201140b0201140c0201140d0201140e0201140f020114100201141102011412020114130201141402011415020114160201141702011418020114190201141a0201141b0201141c0201141d0201141e0201141f02011420020114210201142202011423020115000201150102011502020115030201150402011505020115060201150702011508020115090201150a0201150b0201150c0201150d0201150e0201150f020115100201151102011512020115130201151402011515020115160201151702011518020115190201151a0201151b0201151c0201151d0201151e0201151f02011520020115210201152202011523020116000201160102011602020116030201160402011605020116060201160702011608020116090201160a0201160b0201160c0201160d0201160e0201160f020116100201161102011612020116130201161402011615020116160201161702011618020116190201161a0201161b0201161c0201161d0201161e0201161f02011620020116210201162202011623020117000201170102011702020117030201170402011705020117060201170702011708020117090201170a0201170b0201170c0201170d0201170e0201170f020117100201171102011712020117130201171402011715020117160201171702011718020117190201171a0201171b0201171c0201171d0201171e0201171f02011720020117210201172202011723020118000201180102011802020118030201180402011805020118060201180702011808020118090201180a0201180b0201180c0201180d0201180e0201180f020118100201181102011812020118130201181402011815020118160201181702011818020118190201181a0201181b0201181c0201181d0201181e0201181f02011820020118210201182202011823020119000201190102011902020119030201190402011905020119060201190702011908020119090201190a0201190b0201190c0201190d0201190e0201190f020119100201191102011912020119130201191402011915020119160201191702011918020119190201191a0201191b0201191c0201191d0201191e0201191f0201192002011921020119220201192302011a0002011a0102011a0202011a0302011a0402011a0502011a0602011a0702011a0802011a0902011a0a02011a0b02011a0c02011a0d02011a0e02011a0f02011a1002011a1102011a1202011a1302011a1402011a1502011a1602011a1702011a1802011a1902011a1a02011a1b02011a1c02011a1d02011a1e02011a1f02011a2002011a2102011a2202011a2302011b0002011b0102011b0202011b0302011b0402011b0502011b0602011b0702011b0802011b0902011b0a02011b0b02011b0c02011b0d02011b0e02011b0f02011b1002011b1102011b1202011b1302011b1402011b1502011b1602011b1702011b1802011b1902011b1a02011b1b02011b1c02011b1d02011b1e02011b1f02011b2002011b2102011b2202011b2302011c0002011c0102011c0202011c0302011c0402011c0502011c0602011c0702011c0802011c0902011c0a02011c0b02011c0c02011c0d02011c0e02011c0f02011c1002011c1102011c1202011c1302011c1402011c1502011c1602011c1702011c1802011c1902011c1a02011c1b02011c1c02011c1d02011c1e02011c1f02011c2002011c2102011c2202011c2302011d0002011d0102011d0202011d0302011d0402011d0502011d0602011d0702011d0802011d0902011d0a02011d0b02011d0c02011d0d02011d0e02011d0f02011d1002011d1102011d1202011d1302011d1402011d1502011d1602011d1702011d1802011d1902011d1a02011d1b02011d1c02011d1d02011d1e02011d1f02011d2002011d2102011d2202011d2302011e0002011e0102011e0202011e0302011e0402011e0502011e0602011e0702011e0802011e0902011e0a02011e0b02011e0c02011e0d02011e0e02011e0f02011e1002011e1102011e1202011e1302011e1402011e1502011e1602011e1702011e1802011e1902011e1a02011e1b02011e1c02011e1d02011e1e02011e1f02011e2002011e2102011e2202011e2302011f0002011f0102011f0202011f0302011f0402011f0502011f0602011f0702011f0802011f0902011f0a02011f0b02011f0c02011f0d02011f0e02011f0f02011f1002011f1102011f1202011f1302011f1402011f1502011f1602011f1702011f1802011f1902011f1a02011f1b02011f1c02011f1d02011f1e02011f1f02011f2002011f2102011f2202011f23020120000201200102012002020120030201200402012005020120060201200702012008020120090201200a0201200b0201200c0201200d0201200e0201200f020120100201201102012012020120130201201402012015020120160201201702012018020120190201201a0201201b0201201c0201201d0201201e0201201f02012020020120210201202202012023020121000201210102012102020121030201210402012105020121060201210702012108020121090201210a0201210b0201210c0201210d0201210e0201210f020121100201211102012112020121130201211402012115020121160201211702012118020121190201211a0201211b0201211c0201211d0201211e0201211f02012120020121210201212202012123020122000201220102012202020122030201220402012205020122060201220702012208020122090201220a0201220b0201220c0201220d0201220e0201220f020122100201221102012212020122130201221402012215020122160201221702012218020122190201221a0201221b0201221c0201221d0201221e0201221f02012220020122210201222202012223020123000201230102012302020123030201230402012305020123060201230702012308020123090201230a0201230b0201230c0201230d0201230e0201230f020123100201231102012312020123130201231402012315020123160201231702012318020123190201231a0201231b0201231c0201231d0201231e0201231f02012320020123210201232202012323");
        any[9] = SSTORE2.write(hex"");
        any[10] = SSTORE2.write(hex"");
        any[11] = SSTORE2.write(hex"");
        any[12] = SSTORE2.write(hex"01ff7d7d7d10050000020100000201000102010002020100030201000402010005020100060201000702010008020100090201000a0201000b0201000c0201000d0201000e0201000f020100100201001102010012020100130201001402010015020100160201001702010018020100190201001a0201001b0201001c0201001d0201001e0201001f02010020020100210201002202010023020101000201010102010102020101030201010402010105020101060201010702010108020101090201010a0201010b0201010c0201010d0201010e0201010f020101100201011102010112020101130201011402010115020101160201011702010118020101190201011a0201011b0201011c0201011d0201011e0201011f02010120020101210201012202010123020102000201020102010202020102030201020402010205020102060201020702010208020102090201020a0201020b0201020c0201020d0201020e0201020f020102100201021102010212020102130201021402010215020102160201021702010218020102190201021a0201021b0201021c0201021d0201021e0201021f02010220020102210201022202010223020103000201030102010302020103030201030402010305020103060201030702010308020103090201030a0201030b0201030c0201030d0201030e0201030f020103100201031102010312020103130201031402010315020103160201031702010318020103190201031a0201031b0201031c0201031d0201031e0201031f02010320020103210201032202010323020104000201040102010402020104030201040402010405020104060201040702010408020104090201040a0201040b0201040c0201040d0201040e0201040f020104100201041102010412020104130201041402010415020104160201041702010418020104190201041a0201041b0201041c0201041d0201041e0201041f02010420020104210201042202010423020105000201050102010502020105030201050402010505020105060201050702010508020105090201050a0201050b0201050c0201050d0201050e0201050f020105100201051102010512020105130201051402010515020105160201051702010518020105190201051a0201051b0201051c0201051d0201051e0201051f02010520020105210201052202010523020106000201060102010602020106030201060402010605020106060201060702010608020106090201060a0201060b0201060c0201060d0201060e0201060f020106100201061102010612020106130201061402010615020106160201061702010618020106190201061a0201061b0201061c0201061d0201061e0201061f02010620020106210201062202010623020107000201070102010702020107030201070402010705020107060201070702010708020107090201070a0201070b0201070c0201070d0201070e0201070f020107100201071102010712020107130201071402010715020107160201071702010718020107190201071a0201071b0201071c0201071d0201071e0201071f02010720020107210201072202010723020108000201080102010802020108030201080402010805020108060201080702010808020108090201080a0201080b0201080c0201080d0201080e0201080f020108100201081102010812020108130201081402010815020108160201081702010818020108190201081a0201081b0201081c0201081d0201081e0201081f02010820020108210201082202010823020109000201090102010902020109030201090402010905020109060201090702010908020109090201090a0201090b0201090c0201090d0201090e0201090f020109100201091102010912020109130201091402010915020109160201091702010918020109190201091a0201091b0201091c0201091d0201091e0201091f0201092002010921020109220201092302010a0002010a0102010a0202010a0302010a0402010a0502010a0602010a0702010a0802010a0902010a0a02010a0b02010a0c02010a0d02010a0e02010a0f02010a1002010a1102010a1202010a1302010a1402010a1502010a1602010a1702010a1802010a1902010a1a02010a1b02010a1c02010a1d02010a1e02010a1f02010a2002010a2102010a2202010a2302010b0002010b0102010b0202010b0302010b0402010b0502010b0602010b0702010b0802010b0902010b0a02010b0b02010b0c02010b0d02010b0e02010b0f02010b1002010b1102010b1202010b1302010b1402010b1502010b1602010b1702010b1802010b1902010b1a02010b1b02010b1c02010b1d02010b1e02010b1f02010b2002010b2102010b2202010b2302010c0002010c0102010c0202010c0302010c0402010c0502010c0602010c0702010c0802010c0902010c0a02010c0b02010c0c02010c0d02010c0e02010c0f02010c1002010c1102010c1202010c1302010c1402010c1502010c1602010c1702010c1802010c1902010c1a02010c1b02010c1c02010c1d02010c1e02010c1f02010c2002010c2102010c2202010c2302010d0002010d0102010d0202010d0302010d0402010d0502010d0602010d0702010d0802010d0902010d0a02010d0b02010d0c02010d0d02010d0e02010d0f02010d1002010d1102010d1202010d1302010d1402010d1502010d1602010d1702010d1802010d1902010d1a02010d1b02010d1c02010d1d02010d1e02010d1f02010d2002010d2102010d2202010d2302010e0002010e0102010e0202010e0302010e0402010e0502010e0602010e0702010e0802010e0902010e0a02010e0b02010e0c02010e0d02010e0e02010e0f02010e1002010e1102010e1202010e1302010e1402010e1502010e1602010e1702010e1802010e1902010e1a02010e1b02010e1c02010e1d02010e1e02010e1f02010e2002010e2102010e2202010e2302010f0002010f0102010f0202010f0302010f0402010f0502010f0602010f0702010f0802010f0902010f0a02010f0b02010f0c02010f0d02010f0e02010f0f02010f1002010f1102010f1202010f1302010f1402010f1502010f1602010f1702010f1802010f1902010f1a02010f1b02010f1c02010f1d02010f1e02010f1f02010f2002010f2102010f2202010f23020110000201100102011002020110030201100402011005020110060201100702011008020110090201100a0201100b0201100c0201100d0201100e0201100f020110100201101102011012020110130201101402011015020110160201101702011018020110190201101a0201101b0201101c0201101d0201101e0201101f02011020020110210201102202011023020111000201110102011102020111030201110402011105020111060201110702011108020111090201110a0201110b0201110c0201110d0201110e0201110f020111100201111102011112020111130201111402011115020111160201111702011118020111190201111a0201111b0201111c0201111d0201111e0201111f02011120020111210201112202011123020112000201120102011202020112030201120402011205020112060201120702011208020112090201120a0201120b0201120c0201120d0201120e0201120f020112100201121102011212020112130201121402011215020112160201121702011218020112190201121a0201121b0201121c0201121d0201121e0201121f02011220020112210201122202011223020113000201130102011302020113030201130402011305020113060201130702011308020113090201130a0201130b0201130c0201130d0201130e0201130f020113100201131102011312020113130201131402011315020113160201131702011318020113190201131a0201131b0201131c0201131d0201131e0201131f02011320020113210201132202011323020114000201140102011402020114030201140402011405020114060201140702011408020114090201140a0201140b0201140c0201140d0201140e0201140f020114100201141102011412020114130201141402011415020114160201141702011418020114190201141a0201141b0201141c0201141d0201141e0201141f02011420020114210201142202011423020115000201150102011502020115030201150402011505020115060201150702011508020115090201150a0201150b0201150c0201150d0201150e0201150f020115100201151102011512020115130201151402011515020115160201151702011518020115190201151a0201151b0201151c0201151d0201151e0201151f02011520020115210201152202011523020116000201160102011602020116030201160402011605020116060201160702011608020116090201160a0201160b0201160c0201160d0201160e0201160f020116100201161102011612020116130201161402011615020116160201161702011618020116190201161a0201161b0201161c0201161d0201161e0201161f02011620020116210201162202011623020117000201170102011702020117030201170402011705020117060201170702011708020117090201170a0201170b0201170c0201170d0201170e0201170f020117100201171102011712020117130201171402011715020117160201171702011718020117190201171a0201171b0201171c0201171d0201171e0201171f02011720020117210201172202011723020118000201180102011802020118030201180402011805020118060201180702011808020118090201180a0201180b0201180c0201180d0201180e0201180f020118100201181102011812020118130201181402011815020118160201181702011818020118190201181a0201181b0201181c0201181d0201181e0201181f02011820020118210201182202011823020119000201190102011902020119030201190402011905020119060201190702011908020119090201190a0201190b0201190c0201190d0201190e0201190f020119100201191102011912020119130201191402011915020119160201191702011918020119190201191a0201191b0201191c0201191d0201191e0201191f0201192002011921020119220201192302011a0002011a0102011a0202011a0302011a0402011a0502011a0602011a0702011a0802011a0902011a0a02011a0b02011a0c02011a0d02011a0e02011a0f02011a1002011a1102011a1202011a1302011a1402011a1502011a1602011a1702011a1802011a1902011a1a02011a1b02011a1c02011a1d02011a1e02011a1f02011a2002011a2102011a2202011a2302011b0002011b0102011b0202011b0302011b0402011b0502011b0602011b0702011b0802011b0902011b0a02011b0b02011b0c02011b0d02011b0e02011b0f02011b1002011b1102011b1202011b1302011b1402011b1502011b1602011b1702011b1802011b1902011b1a02011b1b02011b1c02011b1d02011b1e02011b1f02011b2002011b2102011b2202011b2302011c0002011c0102011c0202011c0302011c0402011c0502011c0602011c0702011c0802011c0902011c0a02011c0b02011c0c02011c0d02011c0e02011c0f02011c1002011c1102011c1202011c1302011c1402011c1502011c1602011c1702011c1802011c1902011c1a02011c1b02011c1c02011c1d02011c1e02011c1f02011c2002011c2102011c2202011c2302011d0002011d0102011d0202011d0302011d0402011d0502011d0602011d0702011d0802011d0902011d0a02011d0b02011d0c02011d0d02011d0e02011d0f02011d1002011d1102011d1202011d1302011d1402011d1502011d1602011d1702011d1802011d1902011d1a02011d1b02011d1c02011d1d02011d1e02011d1f02011d2002011d2102011d2202011d2302011e0002011e0102011e0202011e0302011e0402011e0502011e0602011e0702011e0802011e0902011e0a02011e0b02011e0c02011e0d02011e0e02011e0f02011e1002011e1102011e1202011e1302011e1402011e1502011e1602011e1702011e1802011e1902011e1a02011e1b02011e1c02011e1d02011e1e02011e1f02011e2002011e2102011e2202011e2302011f0002011f0102011f0202011f0302011f0402011f0502011f0602011f0702011f0802011f0902011f0a02011f0b02011f0c02011f0d02011f0e02011f0f02011f1002011f1102011f1202011f1302011f1402011f1502011f1602011f1702011f1802011f1902011f1a02011f1b02011f1c02011f1d02011f1e02011f1f02011f2002011f2102011f2202011f23020120000201200102012002020120030201200402012005020120060201200702012008020120090201200a0201200b0201200c0201200d0201200e0201200f020120100201201102012012020120130201201402012015020120160201201702012018020120190201201a0201201b0201201c0201201d0201201e0201201f02012020020120210201202202012023020121000201210102012102020121030201210402012105020121060201210702012108020121090201210a0201210b0201210c0201210d0201210e0201210f020121100201211102012112020121130201211402012115020121160201211702012118020121190201211a0201211b0201211c0201211d0201211e0201211f02012120020121210201212202012123020122000201220102012202020122030201220402012205020122060201220702012208020122090201220a0201220b0201220c0201220d0201220e0201220f020122100201221102012212020122130201221402012215020122160201221702012218020122190201221a0201221b0201221c0201221d0201221e0201221f02012220020122210201222202012223020123000201230102012302020123030201230402012305020123060201230702012308020123090201230a0201230b0201230c0201230d0201230e0201230f020123100201231102012312020123130201231402012315020123160201231702012318020123190201231a0201231b0201231c0201231d0201231e0201231f02012320020123210201232202012323");
        any[13] = SSTORE2.write(hex"");
        any[14] = SSTORE2.write(hex"");
        any[15] = SSTORE2.write(hex"");
        any[16] = SSTORE2.write(hex"");
        any[51] = SSTORE2.write(hex"02ffffb310ff43c58c460000000200000302000004020000050200010202010103020101040200010502000201020102020201020302010204020002050200030102010302020103030201030402000305020004010201040202010403020104040200040502000500020005010201050202010503020105040200050502000600020006010201060202010603020106040200060502000700020007010201070202010703020107040200070502000800020208010200080202010803020108040200080502000900020209010202090202000903020009040200090502000a0002020a0102020a0202020a0302020a0402000a0502000b0102020b0202020b0302020b0402000b0502000c0202020c0302020c0402000c0502000d0302000d0402000d05");
        any[54] = SSTORE2.write(hex"01ffb0393729000000020000050200010302000104020101050200020102000202020102030201020402010205020003000201030102010302020103030201030402010305020004000201040102010402020104030201040402010405020005010201050202010503020105040201050502000601020106020201060302010604020106050200070102000702020007030200070402000705020008000200090102000a0202000b0202000c01");
        any[55] = SSTORE2.write(hex"04ff8f7fa0fff9f4f2ffff0e0eff8f77b42d00000002010000020100010201000202010100020001010201010202010200020002010201020202010300020003010201030202010400020004010201040202010500020205010203050202010600020006010204060202010700020007010204070202010800020208010203080202010900020009010201090202010a0002000a0102010a0202010b0002000b0102010b0202010c0002000c0102010c0202010d0002000d0102010d0202010e0002010e0102010e02");
        any[56] = SSTORE2.write(hex"03ffb03937ff8c242cffff0e0e460000000200000302000004020000050200010202010103020101040200010502000201020102020201020302010204020002050200030102010302020103030201030402000305020004010201040202010403020104040200040502000500020005010201050202010503020105040200050502000600020006010201060202010603020106040200060502000700020007010201070202010703020107040200070502000800020208010200080202010803020108040200080502000900020309010202090202000903020009040200090502000a0002020a0102030a0202020a0302030a0402000a0502000b0102020b0202030b0302020b0402000b0502000c0202020c0302030c0402000c0502000d0302000d0402000d05");
        any[57] = SSTORE2.write(hex"02ff004d72ffa0002020a0102020a0202020a0302020a0402020a0502010a0602020a0702020b0002020b0102020b0202020b0302020b0402020b0502010b0602020b0702020c0002020c0102020c0202020c0302020c0402020c0502010c0602010c0702020d0002020d0102020d0202020d0302020d0402020d0502010d0602020d0702020e0002020e0102020e0202020e0302020e0402020e0502010e0602020e0702010f0602010f07");
        any[58] = SSTORE2.write(hex"02ff90cff1fff38b7c200000000200000102000002020000040200010002010101020101020200010302020104020002000201020102000202020002040200030002010301020003020200040102000601020006020200060402000700020107010201070202000703020207040200080002010801020008020200080402000900020109010200090202000a01");
        any[59] = SSTORE2.write(hex"02fff4e299ffff0e0e200000000200000102000002020000040200010002010101020101020200010302020104020002000201020102000202020002040200030002010301020003020200040102000901020009020200090402000a0002010a0102010a0202000a0302020a0402000b0002010b0102000b0202000b0402000c0002010c0102000c0202000d01");
        any[60] = SSTORE2.write(hex"02ff008080ff3fbdac5500000002010002020100030201000402010005020100060201010102010102020201030202010402010105020101060201020002010201020102020202020302020204020102050201020602010300020203010202030202010303020103040201030502010306020104000202040102020402020104030201040402010405020104060201050002010501020105020201050302010504020105050201050602010600020106010201060202010603020106040201060502010606020107000201070102010702020107030201070402010705020107060201080002010801020108020201080302010804020108050201080602010901020109020201090302010904020109050201090602010a0202010a0302010a0402010a0502010a0602010b0302010b0402010b0502010b0602010c0502010c0602010d0502010d0602010e0502010e0602010f0502010f060201100502011105");
        any[61] = SSTORE2.write(hex"02ff666d42ff9675c21b000000020000010200000202000100020101010201010202000103020002000201020102010202020002030200020402000300020103010201030202000303020203040200040002010401020104020200040302000404020005000201050102010502020005030200060102000602");
        any[63] = SSTORE2.write(hex"02ffc54e38fff38b7ca0202010a0302010a0402010a0502010a0602010b0302010b0402010b0502010b0602010c0502010c0602010d0502010d0602010e0502010e0602010f0502010f060201100502011105");
        any[65] = SSTORE2.write(hex"01ffffe3307f0000000200000802000107020001080200020702000208020002090200030602000307020003080200030902000406020004070200040802000409020005050200050602000507020005080200050902000605020006060201060702000608020006090200060a0200070402000705020007060200070702010708020007090200070a0200080402000805020008060200080702010808020008090200080a0201090402000905020009060201090702000908020009090200090a02000a0302010a0402000a0502000a0602010a0702000a0802000a0902000a0a02000a0b02000b0302000b0402010b0502010b0602000b0702000b0802000b0902000b0a02000b0b02000c0202000c0302000c0402000c0502000c0602000c0702000c0802000c0902000c0a02000c0b02000d0202000d0302000d0402000d0502000d0602000d0702000d0802000d0902000d0a02000d0b02000e0102000e0202000e0302000e0402000e0502000e0602000e0702000e0802000e0902000e0a02000e0b02000e0c02000f0102000f0202000f0302000f0402000f0502000f0602000f0702000f0802000f0902000f0a02000f0b02000f0c020010000200100102001002020010030200100402001005020010060200100702001008020010090200100a0200100b0200100c020011000200110102001102020011030200110402001105");
        any[67] = SSTORE2.write(hex"02ff666d42ff43c58c2600000002000001020000020200010002010101020101020200010302000104020002000201020102010202020002030202020402000300020103010201030202000303020003040200040102000402020006010200060202000700020107010201070202000703020007040200080002010801020108020200080302020804020009000201090102010902020009030200090402000a0102000a02");
        any[68] = SSTORE2.write(hex"02ff666d42ff575e335d00000002010002020100030201010202010103020102000201020102010202020102030201020402010205020103020201030302010304020103050201040002010401020104020201040302010404020104050201050002010501020105020201050302010504020106000201060102010602020106030201060402010700020107010201070202010703020107040201070502010800020108010201080202010803020108040201080502010900020109010201090202020903020109040201090502010a0002010a0102010a0202010a0302020a0402010a0502010b0002010b0102010b0202010b0302010b0402020b0502010c0002010c0102010c0202020c0302010c0402010c0502010d0002010d0102010d0202010d0302020d0402010d0502010e0002010e0102010e0202010e0302010e0402020e0502010f0102010f0202010f0302010f0402010f0502011002020110030201100402011005020111030201110402011105020111060201120302011205");
        any[71] = SSTORE2.write(hex"01ffff0e0e7f0000000200000802000107020001080200020702010208020002090200030602010307020103080200030902000406020104070201040802000409020005050201050602010507020105080200050902000605020106060201060702010608020106090200060a0200070402010705020107060201070702010708020107090200070a0200080402010805020108060201080702010808020108090200080a0200090402010905020109060201090702010908020109090200090a02000a0302010a0402010a0502010a0602010a0702010a0802010a0902010a0a02000a0b02000b0302010b0402010b0502010b0602010b0702010b0802010b0902010b0a02000b0b02000c0202010c0302010c0402010c0502010c0602010c0702010c0802010c0902010c0a02000c0b02000d0202010d0302010d0402010d0502010d0602010d0702010d0802010d0902010d0a02000d0b02000e0102010e0202010e0302010e0402010e0502010e0602010e0702010e0802010e0902010e0a02010e0b02000e0c02000f0102010f0202010f0302010f0402010f0502010f0602010f0702010f0802010f0902010f0a02010f0b02000f0c020010000201100102011002020110030201100402011005020010060200100702001008020010090200100a0200100b0200100c020011000200110102001102020011030200110402001105");
        any[72] = SSTORE2.write(hex"02ffd32a09ffffa0002020a0102020a0202020a0302020a0402020a0502010a0602020a0702020b0002020b0102020b0202020b0302020b0402020b0502010b0602020b0702020c0002020c0102020c0202020c0302020c0402020c0502010c0602010c0702020d0002020d0102020d0202020d0302020d0402020d0502010d0602020d0702020e0002020e0102020e0202020e0302020e0402020e0502010e0602020e0702010f0602010f07");
        any[73] = SSTORE2.write(hex"01ff43c58c3200000002000001020101010200010202010201020102020200020302010300020103010201030202010303020003040200040002000401020004020201040302010404020105000201050102010502020005030200050402010600020106010201060202010603020106040200070002000701020007020200070302000704020108010201080202010803020108040200090102000902020009030200090402010a0202010a0302010a0402000b0202000b0302000b0402010c0302010c0402000d0302000d0402010e04");
        any[74] = SSTORE2.write(hex"01ff12c1fb5d00000002000002020000030200010202000103020002000200020102000202020002030200020402000205020003020200030302000304020003050200040002000401020004020200040302000404020004050200050002000501020005020200050302000504020006000200060102000602020006030200060402000700020007010200070202000703020007040200070502000800020008010200080202000803020008040200080502000900020009010200090202010903020009040200090502000a0002000a0102000a0202000a0302010a0402000a0502000b0002000b0102000b0202000b0302000b0402010b0502000c0002000c0102000c0202010c0302000c0402000c0502000d0002000d0102000d0202000d0302010d0402000d0502000e0002000e0102000e0202000e0302000e0402010e0502000f0102000f0202000f0302000f0402000f0502001002020010030200100402001005020011030200110402001105020011060200120302001205");
        any[76] = SSTORE2.write(hex"02ffd89537fff4e2992600000002000001020000020200010002010101020101020200010302000104020002000201020102010202020002030202020402000300020103010201030202000303020003040200040102000402020006010200060202000700020107010201070202000703020007040200080002010801020108020200080302020804020009000201090102010902020009030200090402000a0102000a02");
        any[77] = SSTORE2.write(hex"01fff38b7c1e000000020000030200000402000101020001020201010302010104020002000201020102010202020102030200020402000300020103010201030202010303020103040200040002010401020104020201040302000404020005010201050202010503020105040200060202010603020106040200070302000704");
        any[79] = SSTORE2.write(hex"06ff9675c2ff12c1fbff43c58cffffe330ffff7216ffff0e0e3200000002000001020101010200010202010201020102020200020302010300020103010201030202010303020003040200040002000401020004020201040302010404020205000202050102020502020005030200050402020600020206010202060202020603020206040200070002000701020007020200070302000704020308010203080202030803020308040200090102000902020009030200090402040a0202040a0302040a0402000b0202000b0302000b0402050c0302050c0402000d0302000d0402060e04");
        any[80] = SSTORE2.write(hex"03ff5c412aff030103ff7253284b00000002010005020101050201020502020304020103050202040402010405020305030202050402010505020306020203060302020604020106050203070102030702020307030202070402010705020308010203080202030803020208040201080502020900020309010203090202030903020209040201090502010a0002030a0102030a0202020a0302020a0402010a0502010b0002020b0102030b0202030b0302020b0402010b0502010c0002020c0102010c0202010c0302020c0402010c0502010d0002010d0102010d0202010d0302020d0402010d0502010e0002010e0102010e0202010e0302020e0402010e0502010f0102010f0202010f0302020f0402010f0502011002020110030202100402011005020111030202110402011105020112050201130502011405");
        any[82] = SSTORE2.write(hex"02ffff7216ffffe3302e00000002000001020000020200000302000100020101010201010202010103020001040200020002010201020102020201020302010204020003000201030102010302020203030202030402000400020104010201040202010403020104040200050102010502020105030202050402000602020106030201060402000703020107040200080302010804020009030201090402000a0302010a0402000b0302010b0402000c0402000e0402000f0302001006020010080200100a");
        any[83] = SSTORE2.write(hex"02ff4d381dffffe330200000000200000102000002020000040200010002010101020101020200010302020104020002000201020102000202020002040200030002010301020003020200040102000901020009020200090402000a0002010a0102010a0202000a0302020a0402000b0002010b0102000b0202000b0402000c0002010c0102000c0202000d01");
        any[84] = SSTORE2.write(hex"02ff2f3635ff52665ca0002020a0102020a0202020a0302020a0402020a0502010a0602020a0702020b0002020b0102020b0202020b0302020b0402020b0502010b0602020b0702020c0002020c0102020c0202020c0302020c0402020c0502010c0602010c0702020d0002020d0102020d0202020d0302020d0402020d0502010d0602020d0702020e0002020e0102020e0202020e0302020e0402020e0502010e0602020e0702010f0602010f07");
        any[85] = SSTORE2.write(hex"02fff38b7cffb0393733000000020100020200000302010101020201020200010302010200020102010201020202000203020103000202030102010302020003030201040102020402020004030201050002010501020105020200050302010600020206010201060202000603020107010201070202000703020108000202080102020802020008030201090002010901020109020200090302020a0102010a0202000a0302010b0002020b0102020b0202000b0302010c0002010c0102010c0202000c0302010d0102020d0202000d0302010e0202000e03");
        any[86] = SSTORE2.write(hex"02ff667af9ffa7a0f355000000020100050201010502010205020102060201030502010306020104050201040602010505020105060201060302010604020106050201060602010702020107030201070402010705020107060201080102010802020208030202080402010805020108060201090002010901020109020202090302020904020109050201090602010a0002020a0102020a0202010a0302010a0402010a0502010a0602010b0002020b0102020b0202010b0302010b0402010b0502010b0602010c0002010c0102010c0202010c0302010c0402010c0502010c0602010d0002010d0102010d0202010d0302010d0402010d0502010d0602010e0002010e0102010e0202010e0302010e0402010e0502010e0602010f0002010f0102010f0202010f0302010f0402010f0502010f060201100102011002020110030201100402011005020110060201110202011103020111040201110502011106");
        any[87] = SSTORE2.write(hex"01ff43c58c1e000000020000030200000402000101020001020201010302010104020002000201020102010202020102030200020402000300020103010201030202010303020103040200040002010401020104020201040302000404020005010201050202010503020105040200060202010603020106040200070302000704");
        any[88] = SSTORE2.write(hex"01ff0080807f0000000200000802000107020001080200020702010208020002090200030602010307020103080200030902000406020104070201040802000409020005050201050602010507020105080200050902000605020106060201060702010608020106090200060a0200070402010705020107060201070702010708020107090200070a0200080402010805020108060201080702010808020108090200080a0200090402010905020109060201090702010908020109090200090a02000a0302010a0402010a0502010a0602010a0702010a0802010a0902010a0a02000a0b02000b0302010b0402010b0502010b0602010b0702010b0802010b0902010b0a02000b0b02000c0202010c0302010c0402010c0502010c0602010c0702010c0802010c0902010c0a02000c0b02000d0202010d0302010d0402010d0502010d0602010d0702010d0802010d0902010d0a02000d0b02000e0102010e0202010e0302010e0402010e0502010e0602010e0702010e0802010e0902010e0a02010e0b02000e0c02000f0102010f0202010f0302010f0402010f0502010f0602010f0702010f0802010f0902010f0a02010f0b02000f0c020010000201100102011002020110030201100402011005020010060200100702001008020010090200100a0200100b0200100c020011000200110102001102020011030200110402001105");
        any[90] = SSTORE2.write(hex"02ff4d381dffffe3301b000000020000010200000202000100020101010201010202000103020002000201020102010202020002030200020402000300020103010201030202000303020203040200040002010401020104020200040302000404020005000201050102010502020005030200060102000602");
        any[91] = SSTORE2.write(hex"02fff58f79ffa652389200000002010006020200070202010402010105020101060202010702020108020202030202020402020205020202060200020702000208020203020202030302020304020203050201030602020307020203080202040202020403020204040202040502010406020204070202040802020502020205030202050402010505020105060202050702020508020206020202060302020604020206050202060602020607020206080202070202020703020207040202070502000706020007070200070802020802020208030202080402000805020208060202080702020808020209020202090302020904020209050202090602020a0202020a0302020a0402020a0502000a0602000a0702000a0802020b0202020b0302020b0402000b0502010b0602020b0702020b0802020c0202020c0302020c0402010c0502010c0602020c0702020c0802020d0202020d0302020d0402020d0502020d0602020d0702020d0802020e0202020e0302020e0402020e0502000e0602000e0702020f0202020f0302020f0402000f0502010f0602020f0702020f08020210020202100302021004020210050201100602021007020210080202110202021103020211040201110502011106020211070202120202021203020212040202120502021206020212070202120802021301020213030202130402021305020013060200130702001308020013090202140002021403020214040202140502021406020214070202140802021409020215040202150502011506020215070202150802021509020116060202160702021608");
        any[93] = SSTORE2.write(hex"02ff43c58cff3bae7c5d00000002010002020100030201010202010103020102000201020102010202020102030201020402010205020103020201030302010304020103050201040002010401020104020201040302010404020104050201050002010501020105020201050302010504020106000201060102010602020106030201060402010700020107010201070202010703020107040201070502010800020108010201080202010803020108040201080502010900020109010201090202020903020109040201090502010a0002010a0102010a0202010a0302020a0402010a0502010b0002010b0102010b0202010b0302010b0402020b0502010c0002010c0102010c0202020c0302010c0402010c0502010d0002010d0102010d0202010d0302020d0402010d0502010e0002010e0102010e0202010e0302010e0402020e0502010f0102010f0202010f0302010f0402010f0502011002020110030201100402011005020111030201110402011105020111060201120302011205");
        any[95] = SSTORE2.write(hex"02ff666d42ff92a9622e00000002000001020000020200000302000100020101010201010202010103020001040200020002010201020102020201020302010204020003000201030102010302020203030202030402000400020104010201040202010403020104040200050102010502020105030202050402000602020106030201060402000703020107040200080302010804020009030201090402000a0302010a0402000b0302010b0402000c0402000e0402000f0302001006020010080200100a");
        any[100] = SSTORE2.write(hex"02fffff0eeffc54e38aa0002020a0102020a0202020a0302020a0402020a0502020a0602020a0702000a0802020b0002020b0102020b0202010b0302020b0402020b0502020b0602010b0702000b0802020c0102020c0202020c0302020c0402020c0502010c0602010c0702000c0802020d0102020d0202020d0302020d0402020d0502010d0602010d0702000d0802020e0102020e0202020e0302020e0402020e0502010e0602010e0702000e0802010f0202020f0302020f0402020f0502010f0602010f0702000f080201100202011003020210040202100502021006020110070201100802021103020211040202110502021106020211070202110802021109020212030202120402021205020212060202120702021208020212090202120a0202130402021305020213060202130702021308020213090202130a0202140502011406020114070201140802021409");
        any[103] = SSTORE2.write(hex"01ffbb5d45a100000002010003020100040201000502010006020101020201010302010104020101050201010602010107020102020201020302010204020102050201020602010207020002080201030102010302020103030201030402010305020103060201030702000308020104010201040202010403020104040201040502010406020104070200040802010500020105010201050202010503020105040201050502010506020105070200050802010600020106010201060202010603020106040201060502010606020106070200060802010700020107010201070202010703020107040201070502010706020107070200070802010800020108010201080202010803020108040201080502010806020108070200080802010900020109010201090202010903020109040201090502010906020109070200090802010a0002010a0102010a0202010a0302010a0402010a0502010a0602010a0702000a0802010b0002010b0102010b0202010b0302010b0402010b0502010b0602010b0702000b0802010c0102010c0202010c0302010c0402010c0502010c0602010c0702000c0802010d0102010d0202010d0302010d0402010d0502010d0602010d0702000d0802010e0102010e0202010e0302010e0402010e0502010e0602010e0702000e0802010f0202010f0302010f0402010f0502010f0602010f0702000f080201100202011003020110040201100502011006020110070201100802011103020111040201110502011106020111070201110802011109020112030201120402011205020112060201120702011208020112090201120a0201130402011305020113060201130702011308020113090201130a0201140502011406020114070201140802011409");
        any[104] = SSTORE2.write(hex"0366d4b6b1ffe95f2afff9f4f21b000000020100030201000402010005020101010201010202000108020102000200020702020208020002090201030002000307020303080200030902010400020004070203040802000409020005070203050802000509020006070203060802000609020007080200080802000908");
        any[105] = SSTORE2.write(hex"0366d4b6b1ffe95f2afff9f4f21800000002010005020100060201000702010103020101040200010902010200020102010201020202000208020202090200020a02000308020303090200030a02000408020304090200040a02000508020305090200050a020006090200070902000809");   	
	}	
}

contract CrypToadzBuilderAnyB {
	mapping(uint8 => address) any;
	
	function get(uint8 key) external view returns (address) {
        return any[key];
    }
	
	constructor() {
		any[106] = SSTORE2.write(hex"0180e76f5b0600000002010000020101000201020002010a0002010b0002010c00");
        any[108] = SSTORE2.write(hex"01ffffe330050000000200000102000100020101010200010202000201");
        any[109] = SSTORE2.write(hex"02ffabaaa8ffcfc9b806000000020100000202010002010200020104000202050002010600");
        any[110] = SSTORE2.write(hex"02ffaa940cffffe93903000000020100000202010002020200");
        any[122] = SSTORE2.write(hex"02ffb7601bfff9f4f22d00000002010000020100010201000202010100020001010201010202010200020202010201020202010300020203010201030202010400020204010201040202010500020205010201050202010600020006010201060202010700020207010201070202010800020208010201080202010900020209010201090202010a0002020a0102010a0202010b0002000b0102010b0202010c0002000c0102010c0202010d0002000d0102010d0202010e0002010e0102010e02");
        any[124] = SSTORE2.write(hex"01ff8f7fa03500000002010000020100010201000202010100020001010201010202010200020002010201020202010203020103000200030102000302020103030201040002000401020104020201040302010500020005010201050202010600020006010201060202010700020007010201070202010800020008010201080202010900020009010201090202010a0002000a0102010a0202010b0002000b0102010b0202010c0002000c0102010c0202010d0002000d0102010d0202010d0302010e0002010e0102000e0202010e0302010f0102010f0202010f03");
        any[125] = SSTORE2.write(hex"01ff34ac8037000000020100000201000102010002020101000200010102010102020101030201020002010201020002020201020302010301020003020201030302010401020004020201040302010501020005020201050302010601020006020201060302010701020007020201070302010801020008020201080302010901020009020201090302010a0102000a0202010a0302010b0102000b0202010b0302010c0102000c0202010c0302010d0102000d0202010d0302010e0002010e0102000e0202010e0302010f0002000f0102010f0202010f03020110000201100102011002");
        any[126] = SSTORE2.write(hex"03ffba7881fff9f4f2ffeed81137000000020100000201000102010002020101000200010102010102020101030201020002010201020002020201020302010301020203020201030302010401020204020201040302010501020205020201050302010601020206020201060302010701020207020201070302010801020208020201080302010901020209020201090302010a0102020a0202010a0302010b0102030b0202010b0302010c0102030c0202010c0302010d0102020d0202010d0302010e0002010e0102000e0202010e0302010f0002000f0102010f0202010f03020110000201100102011002");
        any[127] = SSTORE2.write(hex"02ff8f7fa0fff9f4f234000000020100000201000102010002020101000200010102010102020102000200020102000202020102030201030002020301020103020201030302010400020204010201040202010500020005010201050202010600020206010201060202010700020207010201070202010800020008010201080202010900020209010201090202010a0002020a0102010a0202010b0002000b0102010b0202010c0002020c0102010c0202010d0002020d0102010d0202010d0302010e0002010e0102000e0202010e0302010f0102010f0202010f03");
        any[128] = SSTORE2.write(hex"01ff8f7fa03f00000002010000020100010201000202010100020001010201010202010200020002010201020202010300020003010201030202010400020004010201040202010500020005010201050202010600020006010201060202010700020007010201070202010800020008010201080202010900020009010201090202010a0002000a0102010a0202010b0002000b0102010b0202010c0002000c0102010c0202010d0002000d0102010d0202010e0002000e0102010e0202010f0002000f0102010f02020110000200100102011002020111000200110102011102020112000200120102011202020113000200130102011302020114000201140102011402");
        any[129] = SSTORE2.write(hex"01ffe8705b37000000020100000201000102010002020101000200010102010102020101030201020002010201020002020201020302010301020003020201030302010401020004020201040302010501020005020201050302010601020006020201060302010701020007020201070302010801020008020201080302010901020009020201090302010a0102000a0202010a0302010b0102000b0202010b0302010c0102000c0202010c0302010d0102000d0202010d0302010e0002010e0102000e0202010e0302010f0002000f0102010f0202010f03020110000201100102011002");
        any[130] = SSTORE2.write(hex"02ffc4da53fff9f4f23900000002010001020100020201000302010100020001010200010202010103020101040201020102010202020002030201020402010302020003030201030402010402020004030201040402010502020005030201050402010602020006030201060402010702020207030201070402010802020008030201080402010902020209030201090402010a0202000a0302010a0402010b0202000b0302010b0402010c0202000c0302010c0402010d0202000d0302010d0402010e0102010e0202000e0302010e0402010f0002000f0102000f0202010f0302010f04020110010201100202011003");
        any[131] = SSTORE2.write(hex"01ff0c9cf337000000020100000201000102010002020101000200010102010102020101030201020002010201020002020201020302010301020003020201030302010401020004020201040302010501020005020201050302010601020006020201060302010701020007020201070302010801020008020201080302010901020009020201090302010a0102000a0202010a0302010b0102000b0202010b0302010c0102000c0202010c0302010d0102000d0202010d0302010e0002010e0102000e0202010e0302010f0002000f0102010f0202010f03020110000201100102011002");
        any[132] = SSTORE2.write(hex"01ff34ac803f00000002010000020100010201000202010100020001010201010202010200020002010201020202010300020003010201030202010400020004010201040202010500020005010201050202010600020006010201060202010700020007010201070202010800020008010201080202010900020009010201090202010a0002000a0102010a0202010b0002000b0102010b0202010c0002000c0102010c0202010d0002000d0102010d0202010e0002000e0102010e0202010f0002000f0102010f02020110000200100102011002020111000200110102011102020112000200120102011202020113000200130102011302020114000201140102011402");
        any[133] = SSTORE2.write(hex"02ff0c9cf3ffff82ad4f000000020100000201000102010002020101000200010102010102020101030201020002000201020002020201020302010204020103000200030102000302020003030201030402010400020004010200040202000403020104040201050002000501020005020200050302010504020106000200060102020602020006030201060402010700020007010202070202020703020107040201080002000801020208020202080302010804020109000200090102020902020209030201090402010a0002000a0102000a0202020a0302010a0402010b0002000b0102000b0202000b0302010b0402010c0002000c0102000c0202000c0302010c0402010d0002000d0102000d0202000d0302010d0402010e0002000e0102000e0202010e0302010e0402010f0002000f0102010f0202010f03020110000201100102011002");
        any[134] = SSTORE2.write(hex"03ffba7881fff9f4f2ffeed8113f00000002010000020100010201000202010100020001010201010202010200020002010201020202010300020203010201030202010400020204010201040202010500020205010201050202010600020206010201060202010700020207010201070202010800020208010201080202010900020209010201090202010a0002020a0102010a0202010b0002020b0102010b0202010c0002020c0102010c0202010d0002020d0102010d0202010e0002030e0102010e0202010f0002030f0102010f02020110000202100102011002020111000202110102011102020112000200120102011202020113000200130102011302020114000201140102011402");
        any[135] = SSTORE2.write(hex"02ff80a72dfff9f4f22d00000002010000020100010201000202010100020001010201010202010200020202010201020202010300020203010201030202010400020204010201040202010500020205010201050202010600020006010201060202010700020207010201070202010800020208010201080202010900020209010201090202010a0002020a0102010a0202010b0002000b0102010b0202010c0002000c0102010c0202010d0002000d0102010d0202010e0002010e0102010e02");
        any[136] = SSTORE2.write(hex"02ff80a72dffff82ad2d00000002010000020100010201000202010100020001010201010202010200020002010201020202010300020003010201030202010400020004010201040202010500020005010201050202010600020006010201060202010700020207010201070202010800020208010201080202010900020209010201090202010a0002020a0102010a0202010b0002020b0102010b0202010c0002020c0102010c0202010d0002020d0102010d0202010e0002010e0102010e02");
        any[138] = SSTORE2.write(hex"01ffffe3301400000002000000020000010200010002000101020002000200020102010300020103010201040002010401020006000200060102000700020007010200080002000801020109000201090102010a0002010a01");
        any[139] = SSTORE2.write(hex"02ff688679fffff0ee1e00000002010000020200010201000202010100020201010201010202010200020002010201020202010300020003010201030202010400020004010201040202010600020206010201060202010700020207010201070202010800020008010201080202010900020009010201090202010a0002000a0102010a02");
        any[140] = SSTORE2.write(hex"02ff0827f5fffff0ee400000000201000002010001020100020201000302010004020101000202010102020102020201030201010402010200020202010202020202020203020102040201030002000301020003020200030302010304020104000200040102000402020004030201040402010500020105010201050202010503020105040201060202010700020107010201070202010703020107040201080002020801020208020202080302010804020109000202090102020902020209030201090402010a0002000a0102000a0202000a0302010a0402010b0002000b0102000b0202000b0302010b0402010c0002010c0102010c0202010c0302010c0402010d0202010e0202010e03");
        any[141] = SSTORE2.write(hex"02ff9675c2fffff0ee36000000020100010201000202010100020101010201010202010103020102000202020102020202020102030201030002020301020203020201030302010400020204010202040202010403020105000201050102010502020105030201060002010601020106020201060302010700020107010201070202010703020108000202080102020802020108030201090002020901020209020201090302010a0002020a0102020a0202010a0302010b0002010b0102010b0202010b0302010c0102010c0202010d0102010d0202010e0102010e0202010f0102010f02");
        any[142] = SSTORE2.write(hex"02ffffe330ffff0e0e3400000002000001020000020200000302000100020101010201010202010103020001040200020002010201020202020201020302000204020003000201030102020302020103030200030402000400020104010201040202010403020004040200050102000502020005030200070102000702020007030200080002010801020108020201080302000804020009000201090102020902020109030200090402000a0002010a0102020a0202010a0302000a0402000b0002010b0102010b0202010b0302000b0402000c0102000c0202000c03");
        any[143] = SSTORE2.write(hex"03ffc09a43ff857b6cffe8e4ba24000000020100000201010002010101020101020201020002020201020102020201030002030301020103020201040002030401020104020201050002010501020105020201060002010700020107010201070202010800020208010201080202010900020309010201090202010a0002030a0102010a0202010b0002010b0102010b0202010c0002010d0002010e0002010f00");
        any[144] = SSTORE2.write(hex"02ffffffffff6886793400000002000001020000020200000302000100020101010201010202020103020001040200020002010201020002020202020302000204020003000201030102000302020203030200030402000400020104010201040202020403020004040200050102000502020005030200070102000702020007030200080002010801020108020202080302000804020009000201090102000902020209030200090402000a0002010a0102000a0202020a0302000a0402000b0002010b0102010b0202020b0302000b0402000c0102000c0202000c03");
        any[145] = SSTORE2.write(hex"01ffff72161400000002010000020100010200010002010101020002000200020102010300020003010201040002010401020106000201060102000700020107010200080002000801020109000200090102010a0002010a01");
        any[146] = SSTORE2.write(hex"01ffffffff270000000200000102000101020002010200020202000300020003010201030202000303020004000201040102010402020004030200050002010501020005020200050302000601020006020200070102000801020008020200090002000901020109020200090302000a0002010a0102010a0202000a0302000b0002010b0102000b0202000b0302000c0102000c0202000d0102000e0102000f0102001001");
        any[147] = SSTORE2.write(hex"05ebebecfaffa7a0f3ff6c5c9cff9675c2ff3228504200000002000002020001000200010102000102020001030200010402000200020102010202020202020203020002040200030002030301020303020204030302000304020004000205040102050402020404030200040402000500020505010205050202010503020005040200060002000601020006020200060302000604020007020200080002000801020008020200080302000804020009000201090102030902020409030200090402000a0002050a0102050a0202040a0302000a0402000b0002050b0102050b0202040b0302000b0402000c0002020c0102020c0202010c0302000c0402000d0002000d0102000d0202000d0302000d0402000e0202000f020200100202001102");
        any[148] = SSTORE2.write(hex"03ffff0e0efffffffffff38b7c2800000002010000020100010201000202010003020201000203010102030102020101030201020002000201020002020201020302010300020303010203030202020303020104000201040102010402020104030201060002010601020106020201060302020700020307010203070202010703020108000200080102000802020108030201090002030901020309020202090302010a0002010a0102010a0202010a03");
        any[149] = SSTORE2.write(hex"04ff12c1fbffffe330ffff7216ffff0e0e2400000002000000020001000201020002010201020103000201030102010302020204000202040102020402020305000203050102030502020306000203060102030602020407000204070102030800020308010203080202030900020309010203090202020a0002020a0102020a0202010b0002010b0102010b0202010c0002010c0102000d0002000e0002000f0002001000");
        any[150] = SSTORE2.write(hex"01ff4f0dfa3400000002000001020000020200010002000101020001020200010302000200020102010201020202000203020003000201030102010302020003030200040002010401020104020200040302000500020005010200050202000503020006010200060202000700020007010200070202000703020008000201080102010802020008030200090002010901020109020200090302000a0002010a0102010a0202000a0302000b0002000b0102000b0202000b0302000c0102000c0202000d0102000d0202000e0102000e0202000f0102000f02");
        any[151] = SSTORE2.write(hex"02ff0827f5fffff0ee26000000020100010201000202010003020001000202010102000102020101030200010402000201020002020201020302000300020103010201030202010303020003040202040102020402020204030201060102010602020106030200070002020701020007020201070302000704020008010200080202010803020009000201090102010902020109030200090402020a0102020a0202020a03");
        any[152] = SSTORE2.write(hex"01ffff0e0e3400000002010001020100020201010002010101020101020201010302010200020002010200020202010203020103000200030102000302020103030201040002000401020004020201040302010500020105010201050202010503020106010201060202010700020107010201070202010703020108000200080102000802020108030201090002000901020009020201090302010a0002000a0102000a0202010a0302010b0002010b0102010b0202010b0302010c0102010c0202010d0102010d0202010e0102010e0202010f0102010f02");
        any[153] = SSTORE2.write(hex"01fffff0ee2800000002000000020000010200000202000003020001000201010102000102020001030200020002000201020102020200020302000300020003010200030202000303020104000201040102010402020104030200060002000601020006020200060302000700020107010200070202000703020008000200080102010802020008030200090002000901020009020200090302010a0002010a0102010a0202010a03");
        any[154] = SSTORE2.write(hex"02fff9f4f2ffff0e0e3400000002010001020100020201010002010101020101020201010302010200020202010202020202010203020103000202030102020302020103030201040002020401020204020201040302010500020105010201050202010503020106010201060202010700020107010201070202010703020108000202080102020802020108030201090002020901020209020201090302010a0002020a0102020a0202010a0302010b0002010b0102010b0202010b0302010c0102010c0202010d0102010d0202010e0102010e0202010f0102010f02");
        any[155] = SSTORE2.write(hex"0380f38b7bffff0e0effffffff2e00000002010001020100020201010002020101020201020201010302010200020202010202020202010203020103000202030102020302020103030201040002030401020304020201040302010500020305010203050202010503020106010201060202010700020207010202070202010703020108000202080102020802020108030201090002020901020209020201090302010a0002030a0102030a0202010a0302010b0002030b0102030b0202010b0302010c0102010c02");
        any[156] = SSTORE2.write(hex"02ff667af9fffff4491400000002010000020000010201010002000101020102000200020102010300020203010201040002020401020106000200060102010700020007010201080002000801020109000202090102010a0002020a01");
        any[157] = SSTORE2.write(hex"001c00000002000001020001010200020102000202020003000200030102000302020003030200040002000401020004020200040302000500020005010200050202000503020006010200060202000701020008010200090102000a0102000b0102000c0102000d0102000e0102000f0102001001");
        any[158] = SSTORE2.write(hex"03ff70cce4ffffe330ffff0e0e2100000002000000020001000200020002000201020003000200030102010302020004000202040102000402020305000200050102000502020006000200060102000700020008000200080102000900020009010201090202000a0002020a0102000a0202030b0002000b0102000b0202000c0002000c0102000d0002000e0002000f0002001000");
        any[159] = SSTORE2.write(hex"06ffc54e38fffff0eeffa7a0f3ff7d5799ff9675c2ff3228503b0000000201000202010101020101020201010302010200020202010203020202030203020102040201030002040301020403020205030302010304020104000206040102060402020504030201040402010500020605010206050202020503020105040201060102010602020106030201060402010702020108010201080202010803020109000202090102040902020509030201090402010a0002060a0102060a0202050a0302010a0402010b0002060b0102060b0202050b0302010b0402010c0002030c0102030c0202020c0302010c0402010d0102010d0202010d0302010e0202010f020201100202011102");
        any[160] = SSTORE2.write(hex"03ffc54e38fff38b7cffff0e0e1e00000002010000020000010201000202010100020201010201010202010200020202010201020202010300020203010201030202010400020304010201040202010600020006010201060202010700020207010201070202010800020208010201080202010900020209010201090202010a0002030a0102010a02");
        any[161] = SSTORE2.write(hex"02ffff0e0efffff0ee400000000201000002010001020100020201000302010004020101000202010102020102020201030201010402010200020202010202020202020203020102040201030002000301020003020200030302010304020104000200040102000402020004030201040402010500020105010201050202010503020105040201060202010700020107010201070202010703020107040201080002020801020208020202080302010804020109000202090102020902020209030201090402010a0002000a0102000a0202000a0302010a0402010b0002000b0102000b0202000b0302010b0402010c0002010c0102010c0202010c0302010c0402010d0202010e0202010e03");
        any[162] = SSTORE2.write(hex"03ff08030dfffff0eeff949dda52000000020100020201000302010100020101010201010202010103020102000201020102010202020102030201030002010301020103020201030302010400020204010202040202010403020105000202050102020502020105030201060002020601020206020201060302010700020307010203070202010703020108000203080102030802020108030201090002010901020109020201090302010a0002020a0102020a0202010a0302010b0002020b0102020b0202010b0302010c0002020c0102020c0202010c0302010d0002030d0102030d0202010d0302010e0002030e0102030e0202010e0302010f0002010f0102010f0202010f030201100002011001020110020201100302011100020111010201110202011103020112000201120102011202020112030201130002011301020113020201130302011400020114010201140202011403");
        any[163] = SSTORE2.write(hex"05fff0f0f0ff001db3ff328dfdff9e0000fffd32322a00000002010000020100010201000202010100020201010201010202010200020202010201020202010300020203010201030202010400020304010201040202010500020305010201050202010600020106010201060202010700020407010201070202010800020408010201080202010900020409010201090202010a0002050a0102010a0202010b0002050b0102010b0202010c0002010c0102010c0202010d0002010d0102010e00");
        any[164] = SSTORE2.write(hex"01ffff0e0e1400000002010000020100010200010002010101020002000200020102010300020003010201040002010401020106000201060102000700020107010200080002000801020109000200090102010a0002010a01");
        any[165] = SSTORE2.write(hex"02ff008080ffffe3301400000002010000020000010201010002000101020102000200020102010300020203010201040002020401020106000200060102010700020007010201080002000801020109000202090102010a0002020a01");
        any[166] = SSTORE2.write(hex"033300faffff43c58cffffffff2e00000002010001020100020201010002020101020201020201010302010200020202010202020202010203020103000202030102020302020103030201040002030401020304020201040302010500020305010203050202010503020106010201060202010700020207010202070202010703020108000202080102020802020108030201090002020901020209020201090302010a0002030a0102030a0202010a0302010b0002030b0102030b0202010b0302010c0102010c02");
        any[167] = SSTORE2.write(hex"04ff2c9290ff75d9baff496e80fff9f4f22d0000000200000102000100020001010200020002010201020202020202020302000300020303010204030202020303020004000204040102030402020204030200050002010501020205020202050302000600020006010200070002000701020008000201080102020802020208030200090002030901020409020202090302000a0002040a0102030a0202020a0302000b0002010b0102020b0202020b0302000c0002000c0102000d0102000e0102000f0102001001");
        any[238] = SSTORE2.write(hex"06ffc04c3129fe7c7cffb58b744efed7d7ffddd1bfff6198b9800200000200000e0200000f020000100200001102000012020000130200001402000105020001060200010702000108020001090200010a0200010b0200010c0200010d0200010e0201010f020001100201011102000112020101130200011402000115020001160200020402020205020202060202020702020208020202090202020a0202020b0202020c0202020d0202020e0200020f0200021002000211020002120200021302000214020302150203021602000217020003030202030402020305020203060202030702020308020203090202030a0202030b0202030c0202030d0202030e0202030f02020310020203110202031202000313020003140203031502000316020103170200031802000402020204030202040402040405020404060202040702020408020204090202040a0202040b0202040c0202040d0202040e0202040f0202041002020411020204120200041302000414020304150200041602010417020004180200050102020502020205030204050402040505020405060202050702020508020205090202050a0202050b0202050c0202050d0202050e0202050f0202051002020511020205120200051302000514020305150200051602010517020005180200060102020602020406030204060402040605020206060202060702020608020206090202060a0202060b0202060c0202060d0202060e0202060f020206100202061102020612020006130200061402000615020006160201061702000618020007000202070102020702020407030204070402020705020207060202070702020708020207090202070a0202070b0202070c0202070d0202070e0202070f020207100202071102020712020007130201071402000715020007160201071702000718020008000202080102020802020208030202080402020805020208060202080702020808020208090202080a0202080b0202080c0202080d0202080e0202080f020208100202081102020812020008130205081402000815020008160201081702000818020009000202090102020902020209030202090402020905020209060202090702020908020209090202090a0202090b0202090c0202090d0202090e0202090f02020910020209110202091202000913020609140200091502000916020109170200091802000a0002020a0102020a0202020a0302020a0402020a0502020a0602020a0702020a0802020a0902020a0a02020a0b02020a0c02020a0d02020a0e02020a0f02020a1002020a1102020a1202000a1302000a1402000a1502000a1602000a1702000a1802000b0002020b0102020b0202020b0302020b0402020b0502020b0602020b0702020b0802020b0902020b0a02020b0b02020b0c02020b0d02020b0e02020b0f02020b1002020b1102020b1202000b1302030b1402000b1502050b1602050b1702000b1802000c0002020c0102020c0202020c0302020c0402020c0502020c0602020c0702020c0802020c0902020c0a02020c0b02020c0c02020c0d02020c0e02020c0f02020c1002020c1102020c1202000c1302030c1402000c1502050c1602050c1702000c1802000d0002020d0102020d0202020d0302020d0402020d0502020d0602020d0702020d0802020d0902020d0a02020d0b02020d0c02020d0d02020d0e02020d0f02020d1002020d1102020d1202000d1302000d1402000d1502000d1602000d1702000d1802000e0002020e0102020e0202020e0302020e0402020e0502020e0602020e0702020e0802020e0902020e0a02020e0b02020e0c02020e0d02020e0e02020e0f02020e1002020e1102020e1202000e1302030e1402000e1502050e1602050e1702000e1802000f0002020f0102020f0202020f0302020f0402020f0502020f0602020f0702020f0802020f0902020f0a02020f0b02020f0c02020f0d02020f0e02020f0f02020f1002020f1102020f1202000f1302030f1402000f1502050f1602050f1702000f18020010000202100102021002020210030202100402021005020210060202100702021008020210090202100a0202100b0202100c0202100d0202100e0202100f020210100202101102021012020010130200101402001015020010160200101702001018020011000202110102021102020211030202110402021105020211060202110702021108020211090202110a0202110b0202110c0202110d0202110e0202110f020211100202111102021112020011130205111402051115020011160201111702001118020012000202120102021202020212030202120402021205020212060202120702021208020212090202120a0202120b0202120c0202120d0202120e0202120f020212100202121102021212020012130205121402051215020012160201121702001218020013000202130102021302020213030202130402021305020213060202130702021308020213090202130a0202130b0202130c0202130d0202130e0202130f020213100202131102021312020013130205131402051315020013160201131702001318020014000202140102021402020214030202140402021405020214060202140702021408020214090202140a0202140b0202140c0202140d0202140e0202140f020214100202141102021412020014130205141402001415020014160201141702001418020015000202150102021502020215030202150402021505020215060202150702021508020215090202150a0202150b0202150c0202150d0202150e0202150f0202151002021511020215120200151302001514020315150200151602011517020015180200160102021602020216030202160402021605020216060202160702021608020216090202160a0202160b0202160c0202160d0202160e0202160f0202161002021611020216120200161302001614020316150200161602011617020016180200170102021702020217030202170402021705020217060202170702021708020217090202170a0202170b0202170c0202170d0202170e0200170f02001710020017110200171202001713020017140203171502001716020117170200171802001802020218030202180402021805020218060202180702021808020218090202180a0202180b0202180c0202180d0200180e0201180f020018100201181102001812020118130200181402031815020018160201181702001818020019030202190402021905020219060202190702021908020219090200190a0202190b0200190c0202190d0200190e0201190f020019100201191102001912020119130200191402031915020319160200191702001a0402021a0502021a0602021a0702021a0802021a0902021a0a02021a0b02021a0c02021a0d02001a0e02011a0f02001a1002011a1102001a1202011a1302001a1402001a1502001a1602001b0502001b0602001b0702001b0802001b0902001b0a02001b0b02001b0c02001b0d02001b0e02001b0f02001b1002001b1102001b1202001b1302001b14");
        any[241] = SSTORE2.write(hex"04ffff0e0eff8c242cffffe330fff3322c4700000002010004020101040201020402010302020203030201030402010400020104010201040202020403020104040201050002010501020305020203050302010504020106000203060102040602020306030201060402010700020107010203070202030703020107040201080002030801020408020203080302010804020109000201090102030902020309030201090402010a0002010a0102010a0202020a0302010a0402010b0002010b0102010b0202020b0302010b0402010c0002010c0102010c0202020c0302010c0402010d0002010d0102010d0202020d0302010d0402010e0202020e0302010e0402020f0302010f0402001003020010040200110302001104020012030200120402001303020013040200140302001404");
        any[242] = SSTORE2.write(hex"03fff38b7cff0c9cf3fff9f4f2770000000201000b0201000c020201000202010102020102020301090200010a0200010b0201010c02020200020002010202020202020203020102090200020a0200020b0201020c020203000200030102000302020203030202030402010308020303090201030a0201030b0201030c02020400020304010200040202000403020204040201040702010408020104090201040a0201040b0202050002000501020005020200050302020504020105060201050702010508020105090201050a0202060002030601020006020200060302020604020106050201060602010607020106080201060902020700020007010200070202000703020107040201070502010706020107070201070802020800020308010200080202010803020108040201080502010806020108070202090002000901020009020201090302010904020109050201090602020a0002030a0102000a0202010a0302010a0402010a0502020b0002000b0102000b0202010b0302010b0402020c0002030c0102000c0202010c0302020c0402020d0002000d0102000d0202010d0302020d0402020e0002030e0102000e0202000e0302020e0402020f0002000f0102000f0202020f0302020f0402021000020310010202100202021003020211000202110102021102");
        any[243] = SSTORE2.write(hex"01ffffffff06000000020100000200010102000102020002010200020202010300");
        any[250] = SSTORE2.write(hex"04ff688679ffff0e0e333a085bfffff0ee1e00000002010000020200010203000202010100020201010203010202010200020202010203020202010300020403010203030202010400020404010203040202010600020206010203060202010700020207010203070202010800020208010203080202010900020409010203090202010a0002040a0102030a02");
        any[252] = SSTORE2.write(hex"01ffff0e0e1400000002000000020000010200010002000101020002000200020102010300020103010201040002010401020006000200060102000700020007010200080002000801020109000201090102010a0002010a01");
        any[253] = SSTORE2.write(hex"03ffa7a0f3fffff0eeffff0e0e3400000002010001020100020201000302010100020201010202010202020103020101040201020002020201020302020202020302010204020103000202030102030302020203030201030402010400020204010202040202020403020104040201050102010502020105030201070102010702020107030201080002020801020208020202080302010804020109000202090102030902020209030201090402010a0002020a0102030a0202020a0302010a0402010b0002020b0102020b0202020b0302010b0402010c0102010c0202010c03");	
	}
}

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

import "../lib/SSTORE2.sol";
import "../Rectangle.sol";

import "../ICrypToadzFeatureBuilder.sol";

contract CrypToadzBuilderShort is ICrypToadzFeatureBuilder {

    mapping(uint8 => address) short;
    mapping(uint8 => Rectangle) rects;

    function get(uint8 key) external view returns (address) {
        return short[key];
    }

    function getRect(uint8 key) external view returns (Rectangle memory) {
        return rects[key];
    }

    constructor() {
        short[17] = SSTORE2.write(hex"04fffffffffffff0eefff7e3d8ffff0e0e3801000002000008020000090200000a0200010702010108020201090201010a0200010b0200010d020002060202020702010208020102090201020a0201020b0200020c0201020d0200020e02000305020003060200030702000308020203090201030a0202030b0200030c0201030d0200030e0200040402010405020304060203040702030408020004090201040a0201040b0200040c0201040d0200040e02000502020005030201050402010505020305060200050702030508020105090200050a0201050b0201050c0201050d0200050e0200060102010602020206030204060402010605020306060200060702030608020106090201060a0200060b0201060c0201060d0200060e020007000201070102010702020207030204070402010705020307060200070702030708020107090201070a0201070b0200070c0201070d0200070e020008000201080102010802020208030204080402010805020308060200080702030808020108090201080a0201080b0200080c0201080d0200080e020009000201090102010902020209030203090402010905020309060200090702030908020109090200090a0201090b0200090c0200090d0200090e02000a0002010a0102010a0202020a0302030a0402010a0502030a0602000a0702030a0802010a0902010a0a02000a0b02000a0c02010a0d02000a0e02000b0002010b0102010b0202010b0302010b0402010b0502030b0602000b0702030b0802010b0902010b0a02010b0b02010b0c02010b0d02000b0e02000c0002010c0102010c0202020c0302040c0402010c0502030c0602000c0702030c0802010c0902000c0a02000c0b02000c0c02000c0d02000c0e02000d0002020d0102010d0202020d0302040d0402010d0502030d0602000d0702030d0802010d0902010d0a02010d0b02010d0c02010d0d02000d0e02000e0002010e0102010e0202020e0302040e0402010e0502030e0602000e0702030e0802010e0902010e0a02000e0b02000e0c02010e0d02000e0e02000f0002010f0102010f0202020f0302030f0402010f0502030f0602000f0702030f0802010f0902000f0a02010f0b02000f0c02000f0d02000f0e020010000201100102011002020210030203100402011005020310060200100702031008020110090201100a0201100b0200100c0201100d0200100e020011000201110102021102020111030201110402011105020311060200110702031108020111090201110a0201110b0200110c0201110d0200110e020012000201120102011202020212030201120402011205020312060203120702031208020112090201120a0201120b0200120c0201120d0200120e0200130102011302020113030201130402011305020113060201130702011308020113090201130a0200130b0201130c0201130d0200130e02001402020014030201140402011405020214060201140702011408020114090200140a0201140b0200140c0201140d0200140e0200150402001505020015060200150702001508020015090201150a0201150b0200150c0201150d0200150e02001605020116060201160702021608020116090201160a0201160b0200160c0201160d0200160e020017060201170702011708020117090202170a0201170b0201170c0200170d0200180702021808020118090201180a0201180b0200180c02001908020019090200190a0200190b");
        short[18] = SSTORE2.write(hex"03fffff0eeffe1c3c3ffbca1993801000002000008020000090200000a0200010702010108020201090201010a0200010b0200010d020002060202020702010208020102090201020a0201020b0200020c0201020d0200020e02000305020003060200030702000308020203090201030a0202030b0200030c0201030d0200030e0200040402010405020204060202040702020408020004090201040a0201040b0200040c0201040d0200040e02000502020005030201050402010505020205060203050702020508020105090200050a0201050b0201050c0201050d0200050e0200060102010602020306030200060402010605020206060203060702020608020106090201060a0200060b0201060c0201060d0200060e020007000201070102020702020307030200070402010705020207060203070702020708020107090201070a0201070b0200070c0201070d0200070e020008000201080102010802020308030200080402010805020208060203080702020808020108090201080a0201080b0200080c0201080d0200080e020009000202090102010902020309030202090402010905020209060203090702020908020109090200090a0201090b0200090c0200090d0200090e02000a0002010a0102010a0202030a0302020a0402010a0502020a0602030a0702020a0802010a0902010a0a02000a0b02000a0c02010a0d02000a0e02000b0002010b0102010b0202010b0302010b0402010b0502020b0602030b0702020b0802010b0902010b0a02010b0b02010b0c02010b0d02000b0e02000c0002020c0102010c0202030c0302000c0402010c0502020c0602030c0702020c0802010c0902000c0a02000c0b02000c0c02000c0d02000c0e02000d0002010d0102010d0202030d0302000d0402010d0502020d0602030d0702020d0802010d0902010d0a02010d0b02010d0c02010d0d02000d0e02000e0002010e0102020e0202030e0302000e0402010e0502020e0602030e0702020e0802010e0902010e0a02000e0b02000e0c02010e0d02000e0e02000f0002010f0102010f0202030f0302020f0402010f0502020f0602030f0702020f0802010f0902000f0a02010f0b02000f0c02000f0d02000f0e020010000202100102011002020310030202100402011005020210060203100702021008020110090201100a0201100b0200100c0201100d0200100e020011000201110102011102020111030201110402011105020211060203110702021108020111090201110a0201110b0200110c0201110d0200110e020012000201120102011202020112030201120402011205020212060202120702021208020112090201120a0201120b0200120c0201120d0200120e0200130102011302020113030202130402011305020113060201130702011308020113090201130a0200130b0201130c0201130d0200130e02001402020014030201140402011405020214060201140702011408020114090200140a0201140b0200140c0201140d0200140e0200150402001505020015060200150702001508020015090201150a0201150b0200150c0201150d0200150e02001605020116060201160702021608020116090201160a0201160b0200160c0201160d0200160e020017060201170702011708020117090202170a0201170b0201170c0200170d0200180702011808020118090201180a0201180b0200180c02001908020019090200190a0200190b");
        short[19] = SSTORE2.write(hex"04ff1e6f7eff008080ff2c9290ff3fbdac3801000002000008020000090200000a0200010702010108020101090201010a0200010b0200010d020002060201020702010208020202090201020a0201020b0200020c0201020d0200020e02000305020003060200030702000308020103090201030a0201030b0200030c0201030d0200030e0200040402010405020304060203040702030408020004090201040a0202040b0200040c0201040d0200040e02000502020005030201050402010505020305060204050702030508020105090200050a0201050b0201050c0201050d0200050e0200060102010602020306030201060402010605020306060204060702030608020106090201060a0200060b0201060c0201060d0200060e020007000201070102010702020107030203070402010705020307060204070702030708020107090201070a0202070b0200070c0201070d0200070e020008000201080102010802020108030203080402010805020308060204080702030808020108090201080a0201080b0200080c0201080d0200080e020009000201090102010902020109030203090402010905020309060204090702030908020109090200090a0201090b0200090c0200090d0200090e02000a0002010a0102010a0202030a0302010a0402010a0502030a0602040a0702030a0802010a0902010a0a02000a0b02000a0c02010a0d02000a0e02000b0002010b0102010b0202010b0302010b0402010b0502030b0602040b0702030b0802010b0902010b0a02010b0b02010b0c02010b0d02000b0e02000c0002010c0102010c0202030c0302010c0402010c0502030c0602040c0702030c0802010c0902000c0a02000c0b02000c0c02000c0d02000c0e02000d0002010d0102010d0202010d0302030d0402010d0502030d0602040d0702030d0802010d0902010d0a02010d0b02010d0c02010d0d02000d0e02000e0002010e0102010e0202010e0302030e0402010e0502030e0602040e0702030e0802010e0902010e0a02000e0b02000e0c02010e0d02000e0e02000f0002010f0102010f0202010f0302030f0402010f0502030f0602040f0702030f0802010f0902000f0a02010f0b02000f0c02000f0d02000f0e020010000201100102011002020310030201100402011005020310060204100702031008020110090201100a0201100b0200100c0201100d0200100e020011000201110102011102020111030201110402011105020311060204110702031108020111090201110a0201110b0200110c0201110d0200110e020012000201120102011202020112030201120402011205020312060203120702031208020112090202120a0201120b0200120c0201120d0200120e0200130102011302020113030202130402011305020113060201130702011308020113090201130a0200130b0201130c0201130d0200130e02001402020014030201140402011405020114060202140702011408020114090200140a0201140b0200140c0201140d0200140e0200150402001505020015060200150702001508020015090201150a0201150b0200150c0201150d0200150e02001605020116060201160702011608020116090201160a0201160b0200160c0201160d0200160e020017060201170702021708020117090201170a0201170b0201170c0200170d0200180702011808020118090202180a0201180b0200180c02001908020019090200190a0200190b");
        short[20] = SSTORE2.write(hex"03fffff0eeffb8a6baffecddf53801000002000008020000090200000a0200010702010108020201090201010a0200010b0200010d020002060202020702010208020202090203020a0202020b0200020c0202020d0200020e02000305020003060200030702000308020203090201030a0202030b0200030c0202030d0200030e0200040402030405020204060203040702020408020004090201040a0202040b0200040c0202040d0200040e02000502020005030202050402030505020205060200050702020508020105090200050a0202050b0201050c0202050d0200050e0200060102020602020306030201060402030605020206060200060702020608020106090202060a0200060b0201060c0202060d0200060e020007000201070102020702020307030200070402030705020207060200070702020708020307090202070a0201070b0200070c0202070d0200070e020008000203080102020802020308030201080402030805020208060200080702020808020108090202080a0203080b0200080c0202080d0200080e020009000201090102020902020309030201090402030905020209060200090702020908020109090200090a0201090b0200090c0200090d0200090e02000a0002010a0102020a0202030a0302010a0402030a0502020a0602000a0702020a0802010a0902030a0a02000a0b02000a0c02020a0d02000a0e02000b0002010b0102020b0202010b0302020b0402030b0502020b0602000b0702020b0802010b0902010b0a02020b0b02010b0c02020b0d02000b0e02000c0002010c0102020c0202030c0302010c0402030c0502020c0602000c0702020c0802010c0902000c0a02000c0b02000c0c02000c0d02000c0e02000d0002030d0102020d0202030d0302010d0402030d0502020d0602000d0702020d0802010d0902010d0a02020d0b02010d0c02020d0d02000d0e02000e0002010e0102020e0202030e0302010e0402030e0502020e0602000e0702020e0802010e0902010e0a02000e0b02000e0c02020e0d02000e0e02000f0002010f0102020f0202030f0302000f0402030f0502020f0602000f0702020f0802010f0902000f0a02010f0b02000f0c02000f0d02000f0e020010000203100102021002020310030201100402031005020210060200100702021008020110090202100a0201100b0200100c0202100d0200100e020011000201110102021102020111030202110402031105020211060200110702021108020111090202110a0203110b0200110c0202110d0200110e020012000201120102021202020312030202120402031205020212060200120702021208020112090202120a0201120b0200120c0202120d0200120e0200130102021302020113030202130402031305020213060203130702021308020113090202130a0200130b0201130c0202130d0200130e02001402020014030202140402031405020214060201140702021408020114090200140a0202140b0200140c0202140d0200140e0200150402001505020015060200150702001508020015090201150a0202150b0200150c0202150d0200150e02001605020116060202160702031608020216090201160a0202160b0200160c0202160d0200160e020017060202170702011708020217090203170a0202170b0201170c0200170d0200180702031808020218090201180a0202180b0200180c02001908020019090200190a0200190b");
        short[21] = SSTORE2.write(hex"08ff51410eff996a0eff674d54ffd8c792ff170e0fffd15907ffffe330ff9a920a3801000002000008020000090200000a0200010702010108020101090202010a0200010b0200010d020002060201020702010208020202090202020a0202020b0200020c0202020d0200020e02000305020003060200030702000308020103090202030a0201030b0200030c0202030d0200030e0200040402020405020304060203040702030408020004090202040a0202040b0200040c0202040d0200040e02000502020005030202050402020505020305060200050702030508020405090200050a0202050b0202050c0202050d0200050e0200060102020602020106030205060402010605020306060200060702030608020406090204060a0200060b0202060c0202060d0200060e020007000202070102020702020107030205070402010705020307060200070702030708020407090204070a0204070b0200070c0202070d0200070e020008000202080102020802020108030206080402010805020308060200080702030808020408090204080a0204080b0200080c0202080d0200080e020009000201090102020902020109030207090402010905020309060200090702030908020409090200090a0204090b0200090c0200090d0200090e02000a0002010a0102010a0202010a0302080a0402010a0502030a0602000a0702030a0802040a0902020a0a02000a0b02000a0c02020a0d02000a0e02000b0002010b0102010b0202020b0302020b0402020b0502030b0602000b0702030b0802040b0902020b0a02020b0b02020b0c02020b0d02000b0e02000c0002010c0102020c0202010c0302050c0402010c0502030c0602000c0702030c0802040c0902000c0a02000c0b02000c0c02000c0d02000c0e02000d0002010d0102020d0202010d0302050d0402010d0502030d0602000d0702030d0802040d0902020d0a02020d0b02020d0c02020d0d02000d0e02000e0002010e0102020e0202010e0302060e0402010e0502030e0602000e0702030e0802040e0902020e0a02000e0b02000e0c02020e0d02000e0e02000f0002020f0102020f0202010f0302070f0402010f0502030f0602000f0702030f0802040f0902000f0a02040f0b02000f0c02000f0d02000f0e020010000202100102021002020110030208100402011005020310060200100702031008020410090204100a0204100b0200100c0202100d0200100e020011000201110102021102020211030202110402021105020311060200110702031108020411090204110a0204110b0200110c0202110d0200110e020012000202120102021202020212030201120402021205020312060203120702031208020412090204120a0204120b0200120c0202120d0200120e0200130102011302020213030202130402021305020213060202130702021308020213090204130a0200130b0202130c0202130d0200130e02001402020014030202140402021405020114060202140702021408020214090200140a0202140b0200140c0202140d0200140e0200150402001505020015060200150702001508020015090202150a0202150b0200150c0202150d0200150e02001605020116060201160702011608020216090202160a0202160b0200160c0202160d0200160e020017060201170702021708020217090201170a0202170b0202170c0200170d0200180702011808020218090202180a0202180b0200180c02001908020019090200190a0200190b");
        short[22] = SSTORE2.write(hex"07ff7d5799ff714b8dfff38b7cffd26451ffe8705bfff9f4f2fffff0ee49010000020000090200000a0200000b02000108020101090201010a0201010b0200010c0200010e0200020702010208020102090201020a0202020b0201020c0200020d0203020e0200020f020003060200030702000308020003090201030a0201030b0201030c0200030d0203030e0200030f02000405020304060204040702040408020404090200040a0201040b0202040c0200040d0203040e0200040f02000502020005030200050402030505020305060204050702000508020405090203050a0200050b0201050c0201050d0203050e0200050f0200060102010602020306030204060402000605020506060204060702000608020406090203060a0201060b0200060c0201060d0203060e0200060f020007000201070102010702020307030204070402000705020507060204070702000708020407090203070a0203070b0201070c0200070d0203070e0200070f020008000201080102010802020308030204080402000805020508060204080702060808020408090203080a0203080b0201080c0200080d0203080e0200080f020009000201090102010902020109030204090402070905020509060204090702060908020409090203090a0200090b0201090c0200090d0200090e0200090f02000a0002010a0102020a0202010a0302040a0402070a0502050a0602040a0702000a0802040a0902030a0a02010a0b02000a0c02000a0d02030a0e02000a0f02000b0002010b0102010b0202020b0302030b0402030b0502030b0602040b0702000b0802040b0902030b0a02010b0b02010b0c02010b0d02030b0e02000b0f02000c0002010c0102010c0202020c0302030c0402030c0502030c0602040c0702000c0802040c0902030c0a02000c0b02000c0c02000c0d02000c0e02000c0f02000d0002010d0102020d0202010d0302040d0402000d0502050d0602040d0702000d0802040d0902030d0a02010d0b02010d0c02010d0d02030d0e02000d0f02000e0002010e0102010e0202030e0302040e0402000e0502050e0602040e0702060e0802040e0902030e0a02010e0b02000e0c02000e0d02030e0e02000e0f02000f0002010f0102010f0202030f0302040f0402000f0502050f0602040f0702060f0802040f0902030f0a02000f0b02010f0c02000f0d02000f0e02000f0f020010000201100102011002020310030204100402071005020510060204100702001008020410090203100a0203100b0201100c0200100d0203100e0200100f020011000201110102011102020311030204110402071105020511060204110702001108020411090203110a0203110b0201110c0200110d0203110e0200110f020012000202120102011202020112030203120402031205020312060204120702041208020412090203120a0201120b0201120c0200120d0203120e0200120f0200130102011302020113030201130402011305020213060203130702031308020313090203130a0201130b0200130c0201130d0203130e0200130f02001402020014030201140402011405020114060201140702011408020114090201140a0200140b0201140c0200140d0203140e0200140f0200150402001505020015060200150702001508020015090200150a0201150b0202150c0200150d0203150e0200150f020016060201160702011608020116090202160a0201160b0201160c0200160d0203160e0200160f0200170702021708020117090201170a0201170b0201170c0201170d0200170e02001808020118090201180a0202180b0201180c0200180d020019090200190a0200190b0200190c");
        short[23] = SSTORE2.write(hex"07fff5f48bffdddb3bffc4da53ff909b0efff78a18ffff0e0efff9f4f2650100000200000702000008020000090200000a02000105020001060201010702010108020201090203010a0200010b0200010c0200020402030205020202060203020702040208020302090203020a0204020b0203020c0200020d0200030402000305020003060200030702000308020303090202030a0203030b0203030c0203030d0200030e02000402020004030200040402030405020204060203040702030408020004090200040a0203040b0200040c0200040d0200040e0200050102020502020305030203050402010505020105060203050702030508020305090203050a0200050b0200050c0203050d0200050e020006000203060102010602020306030203060402010605020106060203060702020608020406090203060a0203060b0200060c0203060d0200060e020007000203070102030702020407030205070402010705020607060206070702060708020307090203070a0203070b0200070c0203070d0200070e020008000203080102030802020408030200080402030805020608060200080702060808020308090200080a0203080b0200080c0203080d0200080e020009000202090102030902020409030200090402030905020609060207090702060908020309090203090a0200090b0200090c0200090d0200090e02000a0002030a0102030a0202040a0302000a0402030a0502060a0602000a0702060a0802030a0902030a0a02010a0b02010a0c02030a0d02000a0e02000b0002030b0102030b0202040b0302050b0402030b0502060b0602070b0702060b0802030b0902030b0a02030b0b02030b0c02030b0d02000b0e02000c0002020c0102030c0202030c0302030c0402030c0502060c0602000c0702060c0802030c0902000c0a02030c0b02030c0c02030c0d02000c0e02000d0002030d0102030d0202040d0302050d0402030d0502060d0602070d0702060d0802030d0902030d0a02000d0b02000d0c02000d0d02000d0e02000e0002030e0102030e0202040e0302000e0402030e0502060e0602000e0702060e0802030e0902030e0a02010e0b02010e0c02030e0d02000e0e02000f0002020f0102030f0202040f0302000f0402030f0502060f0602070f0702060f0802030f0902030f0a02030f0b02030f0c02030f0d02000f0e020010000203100102031002020410030200100402011005020610060200100702061008020310090203100a0203100b0203100c0203100d0200100e020011000203110102031102020411030205110402011105020611060206110702061108020311090200110a0200110b0200110c0200110d0200110e020012000203120102031202020312030203120402011205020112060203120702031208020312090202120a0203120b0200120c0203120d0200120e020013000203130102021302020313030203130402031305020213060203130702031308020313090203130a0203130b0200130c0203130d0200130e020014000203140102031402020414030202140402031405020314060203140702021408020314090204140a0203140b0200140c0203140d0200140e0200150102031502020315030203150402031505020215060204150702031508020315090203150a0200150b0200150c0203150d0200150e02001602020016030200160402031605020316060203160702031608020016090200160a0203160b0200160c0200160d0200160e0200170402001705020017060200170702001708020317090203170a0203170b0203170c0203170d0200170e0200180402031805020218060203180702031808020318090202180a0203180b0204180c0203180d0200180e0200190402031905020319060203190702041908020319090203190a0203190b0203190c0200190d02001a0502031a0602021a0702031a0802031a0902031a0a02001a0b02001a0c02001b0602001b0702001b0802001b0902001b0a");
        short[24] = SSTORE2.write(hex"04ffc4da53ff909b0eff80a72dffffe3303801000002000008020000090200000a0200010702010108020101090201010a0200010b0200010d020002060202020702010208020202090201020a0201020b0200020c0201020d0200020e02000305020003060200030702000308020103090202030a0201030b0200030c0201030d0200030e0200040402010405020304060203040702030408020004090201040a0201040b0200040c0201040d0200040e02000502020005030201050402010505020305060200050702030508020105090200050a0201050b0201050c0201050d0200050e0200060102010602020306030204060402010605020306060200060702030608020106090201060a0200060b0201060c0201060d0200060e020007000201070102010702020307030204070402010705020307060200070702030708020107090201070a0201070b0200070c0201070d0200070e020008000202080102010802020308030200080402010805020308060200080702030808020108090201080a0201080b0200080c0201080d0200080e020009000202090102010902020309030200090402010905020309060200090702030908020109090200090a0201090b0200090c0200090d0200090e02000a0002020a0102010a0202030a0302000a0402010a0502030a0602000a0702030a0802010a0902010a0a02000a0b02000a0c02010a0d02000a0e02000b0002020b0102010b0202010b0302010b0402010b0502030b0602000b0702030b0802010b0902010b0a02010b0b02010b0c02010b0d02000b0e02000c0002020c0102010c0202030c0302040c0402010c0502030c0602000c0702030c0802010c0902000c0a02000c0b02000c0c02000c0d02000c0e02000d0002020d0102010d0202030d0302040d0402010d0502030d0602000d0702030d0802010d0902010d0a02010d0b02010d0c02010d0d02000d0e02000e0002020e0102010e0202030e0302000e0402010e0502030e0602000e0702030e0802010e0902010e0a02000e0b02000e0c02010e0d02000e0e02000f0002020f0102010f0202030f0302000f0402010f0502030f0602000f0702030f0802010f0902000f0a02010f0b02000f0c02000f0d02000f0e020010000202100102011002020310030200100402011005020310060200100702031008020110090201100a0201100b0200100c0201100d0200100e020011000201110102021102020111030201110402011105020311060200110702031108020111090201110a0201110b0200110c0201110d0200110e020012000202120102011202020212030201120402021205020312060203120702031208020112090201120a0201120b0200120c0201120d0200120e0200130102021302020113030201130402021305020213060201130702011308020213090201130a0200130b0201130c0201130d0200130e02001402020014030201140402011405020114060201140702011408020114090200140a0201140b0200140c0201140d0200140e0200150402001505020015060200150702001508020015090201150a0202150b0200150c0201150d0200150e02001605020116060201160702021608020116090201160a0201160b0200160c0201160d0200160e020017060202170702011708020217090201170a0201170b0201170c0200170d0200180702011808020118090201180a0202180b0200180c02001908020019090200190a0200190b");
        short[25] = SSTORE2.write(hex"04ffeebbaaffddaaaafffff0eefff38b7c3801000002000008020000090200000a0200010702010108020201090201010a0200010b0200010d020002060202020702010208020102090201020a0201020b0200020c0203020d0200020e02000305020003060200030702000308020203090201030a0202030b0200030c0203030d0200030e0200040402010405020404060204040702040408020004090201040a0201040b0200040c0203040d0200040e02000502020005030201050402010505020405060200050702040508020105090200050a0201050b0202050c0203050d0200050e0200060102010602020406030200060402010605020406060200060702040608020106090201060a0200060b0202060c0203060d0200060e020007000201070102010702020407030200070402010705020407060200070702040708020107090201070a0201070b0200070c0203070d0200070e020008000201080102010802020408030200080402010805020408060200080702040808020108090201080a0201080b0200080c0203080d0200080e020009000201090102010902020409030202090402010905020409060200090702040908020109090200090a0201090b0200090c0200090d0200090e02000a0002010a0102010a0202040a0302020a0402010a0502040a0602000a0702040a0802010a0902010a0a02000a0b02000a0c02030a0d02000a0e02000b0002010b0102010b0202010b0302010b0402010b0502040b0602000b0702040b0802010b0902010b0a02020b0b02030b0c02030b0d02000b0e02000c0002010c0102010c0202040c0302000c0402010c0502040c0602000c0702040c0802010c0902000c0a02000c0b02000c0c02000c0d02000c0e02000d0002010d0102010d0202040d0302000d0402010d0502040d0602000d0702040d0802010d0902010d0a02020d0b02030d0c02030d0d02000d0e02000e0002010e0102010e0202040e0302000e0402010e0502040e0602000e0702040e0802010e0902010e0a02000e0b02000e0c02030e0d02000e0e02000f0002010f0102010f0202040f0302020f0402010f0502040f0602000f0702040f0802010f0902000f0a02010f0b02000f0c02000f0d02000f0e020010000201100102021002020410030202100402011005020410060200100702041008020110090201100a0201100b0200100c0203100d0200100e020011000201110102011102020111030201110402011105020411060200110702041108020111090201110a0201110b0200110c0203110d0200110e020012000202120102011202020212030201120402011205020412060204120702041208020112090202120a0201120b0200120c0203120d0200120e0200130102011302020113030201130402011305020113060201130702011308020113090201130a0200130b0202130c0203130d0200130e02001402020014030201140402011405020214060201140702011408020114090200140a0201140b0200140c0203140d0200140e0200150402001505020015060200150702001508020015090201150a0201150b0200150c0203150d0200150e02001605020216060201160702021608020116090201160a0201160b0200160c0203160d0200160e020017060201170702011708020117090202170a0201170b0201170c0200170d0200180702021808020118090201180a0201180b0200180c02001908020019090200190a0200190b");
        short[26] = SSTORE2.write(hex"02ff72b802ffb0e1113801000002010008020100090201000a0201010702020108020201090202010a0201010b0201010d020102060202020702020208020202090202020a0202020b0201020c0202020d0201020e02010305020103060201030702010308020203090202030a0202030b0201030c0202030d0201030e0201040402020405020204060202040702020408020104090202040a0202040b0201040c0202040d0201040e02010502020105030202050402020505020205060201050702020508020205090201050a0202050b0202050c0202050d0201050e0201060102020602020206030202060402020605020206060201060702020608020206090202060a0201060b0202060c0202060d0201060e020107000202070102020702020107030201070402020705020207060201070702020708020207090202070a0202070b0201070c0202070d0201070e020108000202080102020802020108030201080402020805020208060201080702020808020208090202080a0202080b0201080c0202080d0201080e020109000202090102020902020209030202090402020905020209060201090702020908020209090201090a0202090b0201090c0201090d0201090e02010a0002020a0102020a0202020a0302020a0402020a0502020a0602010a0702020a0802020a0902020a0a02010a0b02010a0c02020a0d02010a0e02010b0002020b0102020b0202020b0302020b0402020b0502020b0602010b0702020b0802020b0902020b0a02020b0b02020b0c02020b0d02010b0e02010c0002020c0102020c0202020c0302020c0402020c0502020c0602010c0702020c0802020c0902010c0a02010c0b02010c0c02010c0d02010c0e02010d0002020d0102020d0202010d0302010d0402020d0502020d0602010d0702020d0802020d0902020d0a02020d0b02020d0c02020d0d02010d0e02010e0002020e0102020e0202010e0302010e0402020e0502020e0602010e0702020e0802020e0902020e0a02010e0b02010e0c02020e0d02010e0e02010f0002020f0102020f0202020f0302020f0402020f0502020f0602010f0702020f0802020f0902010f0a02020f0b02010f0c02010f0d02010f0e020110000202100102021002020210030202100402021005020210060201100702021008020210090202100a0202100b0201100c0202100d0201100e020111000202110102021102020211030202110402021105020211060201110702021108020211090202110a0202110b0201110c0202110d0201110e020112000202120102021202020212030202120402021205020212060201120702021208020212090202120a0202120b0201120c0202120d0201120e0201130102021302020213030202130402021305020213060202130702021308020213090202130a0201130b0202130c0202130d0201130e02011402020114030202140402021405020214060202140702021408020214090201140a0202140b0201140c0202140d0201140e0201150402011505020115060201150702011508020115090202150a0202150b0201150c0202150d0201150e02011605020216060202160702021608020216090202160a0202160b0201160c0202160d0201160e020117060202170702021708020217090202170a0202170b0202170c0201170d0201180702021808020218090202180a0202180b0201180c02011908020119090201190a0201190b");
        short[27] = SSTORE2.write(hex"02ff4458dbff7e8ffe3801000002010008020100090201000a0201010702020108020201090202010a0201010b0201010d020102060202020702020208020202090202020a0202020b0201020c0202020d0201020e02010305020103060201030702010308020203090202030a0202030b0201030c0202030d0201030e0201040402020405020204060202040702020408020104090202040a0202040b0201040c0202040d0201040e02010502020105030202050402020505020205060201050702020508020205090201050a0202050b0202050c0202050d0201050e0201060102020602020206030202060402020605020206060201060702020608020206090202060a0201060b0202060c0202060d0201060e020107000202070102020702020207030201070402020705020207060201070702020708020207090202070a0202070b0201070c0202070d0201070e020108000202080102020802020208030201080402020805020208060201080702020808020208090202080a0202080b0201080c0202080d0201080e020109000202090102020902020209030202090402020905020209060201090702020908020209090201090a0202090b0201090c0201090d0201090e02010a0002020a0102020a0202020a0302020a0402020a0502020a0602010a0702020a0802020a0902020a0a02010a0b02010a0c02020a0d02010a0e02010b0002020b0102020b0202020b0302020b0402020b0502020b0602010b0702020b0802020b0902020b0a02020b0b02020b0c02020b0d02010b0e02010c0002020c0102020c0202020c0302020c0402020c0502020c0602010c0702020c0802020c0902010c0a02010c0b02010c0c02010c0d02010c0e02010d0002020d0102020d0202020d0302010d0402020d0502020d0602010d0702020d0802020d0902020d0a02020d0b02020d0c02020d0d02010d0e02010e0002020e0102020e0202020e0302010e0402020e0502020e0602010e0702020e0802020e0902020e0a02010e0b02010e0c02020e0d02010e0e02010f0002020f0102020f0202020f0302020f0402020f0502020f0602010f0702020f0802020f0902010f0a02020f0b02010f0c02010f0d02010f0e020110000202100102021002020210030202100402021005020210060201100702021008020210090202100a0202100b0201100c0202100d0201100e020111000202110102021102020211030202110402021105020211060201110702021108020211090202110a0202110b0201110c0202110d0201110e020112000202120102021202020212030202120402021205020212060201120702021208020212090202120a0202120b0201120c0202120d0201120e0201130102021302020213030202130402021305020213060202130702021308020213090202130a0201130b0202130c0202130d0201130e02011402020114030202140402021405020214060202140702021408020214090201140a0202140b0201140c0202140d0201140e0201150402011505020115060201150702011508020115090202150a0202150b0201150c0202150d0201150e02011605020216060202160702021608020216090202160a0202160b0201160c0202160d0201160e020117060202170702021708020217090202170a0202170b0202170c0201170d0201180702021808020218090202180a0202180b0201180c02011908020119090201190a0201190b");
        short[28] = SSTORE2.write(hex"04ff7ad675ffffe330ff4b80c2ffff0e0e3801000002000008020000090200000a0200010702010108020201090201010a0200010b0200010d020002060201020702010208020102090201020a0201020b0200020c0203020d0200020e02000305020003060200030702000308020203090201030a0202030b0200030c0203030d0200030e0200040402010405020304060203040702030408020004090201040a0201040b0200040c0203040d0200040e02000502020005030201050402010505020305060204050702030508020105090200050a0201050b0202050c0203050d0200050e0200060102010602020406030204060402010605020306060204060702030608020106090201060a0200060b0202060c0203060d0200060e020007000201070102010702020407030204070402010705020307060204070702030708020107090201070a0201070b0200070c0203070d0200070e020008000202080102010802020408030204080402010805020308060204080702030808020108090201080a0201080b0200080c0203080d0200080e020009000201090102010902020209030202090402010905020309060202090702030908020109090200090a0201090b0200090c0200090d0200090e02000a0002010a0102010a0202020a0302020a0402010a0502030a0602020a0702030a0802010a0902010a0a02000a0b02000a0c02010a0d02000a0e02000b0002010b0102010b0202010b0302010b0402010b0502030b0602040b0702030b0802010b0902010b0a02010b0b02010b0c02010b0d02000b0e02000c0002020c0102010c0202040c0302040c0402010c0502030c0602040c0702030c0802010c0902000c0a02000c0b02000c0c02000c0d02000c0e02000d0002010d0102010d0202040d0302040d0402010d0502030d0602040d0702030d0802010d0902010d0a02010d0b02010d0c02010d0d02000d0e02000e0002010e0102010e0202040e0302040e0402010e0502030e0602020e0702030e0802010e0902010e0a02000e0b02000e0c02010e0d02000e0e02000f0002010f0102010f0202020f0302020f0402010f0502030f0602020f0702030f0802010f0902000f0a02010f0b02000f0c02000f0d02000f0e020010000202100102011002020210030202100402011005020310060204100702031008020110090201100a0201100b0200100c0203100d0200100e020011000201110102011102020111030201110402011105020311060204110702031108020111090201110a0201110b0200110c0203110d0200110e020012000201120102011202020212030201120402011205020312060203120702031208020112090201120a0201120b0200120c0203120d0200120e0200130102011302020113030201130402011305020113060201130702011308020213090201130a0200130b0202130c0203130d0200130e02001402020014030201140402021405020114060201140702011408020114090200140a0201140b0200140c0203140d0200140e0200150402001505020015060200150702001508020015090201150a0201150b0200150c0203150d0200150e02001605020116060201160702021608020116090201160a0201160b0200160c0203160d0200160e020017060201170702011708020117090202170a0201170b0201170c0200170d0200180702021808020118090201180a0201180b0200180c02001908020019090200190a0200190b");
        short[29] = SSTORE2.write(hex"02ff822a5bffb04e853801000002010008020100090201000a0201010702020108020201090202010a0201010b0201010d020102060202020702020208020202090202020a0202020b0201020c0202020d0201020e02010305020103060201030702010308020203090202030a0202030b0201030c0202030d0201030e0201040402020405020204060202040702020408020104090202040a0202040b0201040c0202040d0201040e02010502020105030202050402020505020205060201050702020508020205090201050a0202050b0202050c0202050d0201050e0201060102020602020206030202060402020605020206060201060702020608020206090202060a0201060b0202060c0202060d0201060e020107000202070102020702020107030202070402020705020207060201070702020708020207090202070a0202070b0201070c0202070d0201070e020108000202080102020802020108030202080402020805020208060201080702020808020208090202080a0202080b0201080c0202080d0201080e020109000202090102020902020209030202090402020905020209060201090702020908020209090201090a0202090b0201090c0201090d0201090e02010a0002020a0102020a0202020a0302020a0402020a0502020a0602010a0702020a0802020a0902020a0a02010a0b02010a0c02020a0d02010a0e02010b0002020b0102020b0202020b0302020b0402020b0502020b0602010b0702020b0802020b0902020b0a02020b0b02020b0c02020b0d02010b0e02010c0002020c0102020c0202020c0302020c0402020c0502020c0602010c0702020c0802020c0902010c0a02010c0b02010c0c02010c0d02010c0e02010d0002020d0102020d0202010d0302020d0402020d0502020d0602010d0702020d0802020d0902020d0a02020d0b02020d0c02020d0d02010d0e02010e0002020e0102020e0202010e0302020e0402020e0502020e0602010e0702020e0802020e0902020e0a02010e0b02010e0c02020e0d02010e0e02010f0002020f0102020f0202020f0302020f0402020f0502020f0602010f0702020f0802020f0902010f0a02020f0b02010f0c02010f0d02010f0e020110000202100102021002020210030202100402021005020210060201100702021008020210090202100a0202100b0201100c0202100d0201100e020111000202110102021102020211030202110402021105020211060201110702021108020211090202110a0202110b0201110c0202110d0201110e020112000202120102021202020212030202120402021205020212060201120702021208020212090202120a0202120b0201120c0202120d0201120e0201130102021302020213030202130402021305020213060202130702021308020213090202130a0201130b0202130c0202130d0201130e02011402020114030202140402021405020214060202140702021408020214090201140a0202140b0201140c0202140d0201140e0201150402011505020115060201150702011508020115090202150a0202150b0201150c0202150d0201150e02011605020216060202160702021608020216090202160a0202160b0201160c0202160d0201160e020117060202170702021708020217090202170a0202170b0202170c0201170d0201180702021808020218090202180a0202180b0201180c02011908020119090201190a0201190b");
        short[30] = SSTORE2.write(hex"04ffff0e0effff7216ffbf0202fffff0ee3801000002000008020000090200000a0200010702010108020001090201010a0200010b0200010d020002060201020702010208020102090201020a0201020b0200020c0201020d0200020e02000305020003060200030702000308020103090200030a0201030b0200030c0201030d0200030e0200040402010405020204060202040702020408020004090201040a0201040b0200040c0201040d0200040e02000502020005030201050402010505020205060200050702020508020205090200050a0201050b0201050c0201050d0200050e0200060102010602020306030200060402010605020206060200060702000608020206090202060a0200060b0201060c0201060d0200060e020007000201070102010702020307030200070402010705020207060200070702020708020207090202070a0202070b0200070c0201070d0200070e020008000200080102010802020308030204080402010805020208060200080702020808020208090202080a0202080b0200080c0201080d0200080e020009000200090102000902020309030204090402010905020209060200090702020908020209090200090a0202090b0200090c0200090d0200090e02000a0002000a0102000a0202030a0302040a0402010a0502020a0602000a0702020a0802020a0902000a0a02000a0b02000a0c02010a0d02000a0e02000b0002000b0102000b0202000b0302010b0402010b0502020b0602000b0702020b0802020b0902010b0a02010b0b02010b0c02010b0d02000b0e02000c0002000c0102000c0202030c0302000c0402010c0502020c0602000c0702020c0802020c0902000c0a02000c0b02000c0c02000c0d02000c0e02000d0002000d0102000d0202030d0302000d0402010d0502020d0602000d0702020d0802020d0902010d0a02010d0b02010d0c02010d0d02000d0e02000e0002000e0102010e0202030e0302040e0402010e0502020e0602000e0702020e0802020e0902000e0a02000e0b02000e0c02010e0d02000e0e02000f0002010f0102010f0202030f0302040f0402010f0502020f0602000f0702020f0802020f0902000f0a02020f0b02000f0c02000f0d02000f0e020010000201100102011002020310030204100402011005020210060200100702021008020210090202100a0202100b0200100c0201100d0200100e020011000201110102011102020111030201110402011105020211060200110702021108020211090202110a0202110b0200110c0201110d0200110e020012000201120102001202020112030201120402011205020212060202120702001208020212090202120a0202120b0200120c0201120d0200120e0200130102011302020113030200130402011305020113060202130702021308020213090202130a0200130b0201130c0201130d0200130e02001402020014030201140402011405020014060201140702011408020214090200140a0201140b0200140c0201140d0200140e0200150402001505020015060200150702001508020015090201150a0201150b0200150c0201150d0200150e02001605020116060201160702001608020116090200160a0201160b0200160c0201160d0200160e020017060201170702011708020117090201170a0201170b0201170c0200170d0200180702011808020018090201180a0201180b0200180c02001908020019090200190a0200190b");
        short[31] = SSTORE2.write(hex"05ff58554effe4c8a1ffccb08bffe8caa8fffff0ee4a0100000200000a0200000b0200000c020001090201010a0201010b0201010c0200010d0200010f02000208020102090201020a0201020b0201020c0201020d0200020e0202020f020002100200030702000308020003090200030a0201030b0201030c0201030d0200030e0202030f02000310020004060201040702010408020304090203040a0200040b0201040c0201040d0200040e0202040f020004100200050402000505020305060203050702030508020005090200050a0203050b0200050c0201050d0201050e0202050f020005100200060002000602020006030204060402030605020006060203060702000608020306090200060a0203060b0201060c0200060d0201060e0202060f020006100200070102010702020407030204070402030705020007060203070702030708020307090200070a0203070b0201070c0201070d0200070e0202070f020007100200080102010802020408030204080402030805020008060203080702030808020008090200080a0203080b0201080c0201080d0200080e0202080f02000810020009000200090102010902020409030204090402030905020509060203090702000908020309090200090a0203090b0200090c0201090d0200090e0200090f0200091002000a0102010a0202040a0302040a0402030a0502050a0602030a0702030a0802030a0902000a0a02030a0b02010a0c02000a0d02000a0e02020a0f02000a1002000b0102010b0202010b0302010b0402040b0502040b0602030b0702030b0802000b0902000b0a02030b0b02010b0c02010b0d02010b0e02020b0f02000b1002000c0002000c0102010c0202040c0302040c0402030c0502000c0602030c0702000c0802030c0902000c0a02030c0b02000c0c02000c0d02000c0e02000c0f02000c1002000d0102010d0202040d0302040d0402030d0502000d0602030d0702030d0802030d0902000d0a02030d0b02010d0c02010d0d02010d0e02020d0f02000d1002000e0102010e0202040e0302040e0402030e0502000e0602030e0702030e0802000e0902000e0a02030e0b02010e0c02000e0d02000e0e02020e0f02000e1002000f0102010f0202040f0302040f0402030f0502050f0602030f0702000f0802030f0902000f0a02030f0b02000f0c02010f0d02000f0e02000f0f02000f100200100102011002020110030204100402031005020510060203100702031008020310090200100a0203100b0201100c0201100d0200100e0202100f020010100200110102011102020111030201110402011105020311060203110702031108020311090200110a0203110b0201110c0201110d0200110e0202110f020011100200120102011202020112030201120402011205020112060201120702011208020312090203120a0203120b0201120c0201120d0200120e0202120f0200121002001302020113030201130402011305020113060201130702011308020113090203130a0203130b0201130c0200130d0201130e0202130f02001310020014030200140402001405020114060201140702011408020114090201140a0201140b0200140c0201140d0200140e0202140f02001410020015060200150702001508020015090200150a0200150b0201150c0201150d0200150e0202150f020015100200160702011608020116090201160a0201160b0201160c0201160d0200160e0202160f0200161002001708020117090201170a0201170b0201170c0201170d0201170e0200170f020018090201180a0201180b0201180c0201180d0200180e0200190a0200190b0200190c0200190d");
        short[32] = SSTORE2.write(hex"02ff52665cffa6ebb51c0100000201000c0201000d0201010b0202010c0202010d0201010e02010204020102050201020602010207020102080201020a0202020b0202020c0202020d0201020e0201021002010300020103030202030402020305020203060202030702020308020103090201030a0201030b0202030c0202030d0202030e0201030f020203100201031102010401020104030202040402020405020104060201040702020408020204090202040a0202040b0201040c0201040d0202040e0201040f020204100201041102010502020205030202050402020505020105060201050702020508020205090202050a0202050b0202050c0202050d0201050e0202050f020205100201051102010602020206030202060402020605020106060201060702020608020206090202060a0202060b0202060c0202060d0202060e0201060f020206100201061102010702020207030202070402020705020107060201070702020708020207090201070a0202070b0202070c0202070d0202070e0201070f020207100201071102010802020208030202080402020805020108060201080702020808020208090201080a0202080b0202080c0201080d0201080e0201080f020108100201081102010902020209030202090402020905020209060202090702020908020209090201090a0202090b0202090c0202090d0202090e0202090f020209100201091102010a0202020a0302020a0402020a0502010a0602010a0702020a0802020a0902010a0a02020a0b02020a0c02010a0d02010a0e02010a0f02010a1002010a1102010b0202020b0302020b0402020b0502010b0602010b0702020b0802020b0902010b0a02020b0b02020b0c02020b0d02020b0e02020b0f02020b1002010b1102010c0202020c0302020c0402020c0502010c0602010c0702020c0802020c0902020c0a02020c0b02020c0c02010c0d02010c0e02010c0f02010c1002010c1102010d0202020d0302020d0402020d0502010d0602010d0702020d0802020d0902020d0a02020d0b02020d0c02020d0d02020d0e02010d0f02010d1002010d1102010e0202020e0302020e0402020e0502010e0602010e0702020e0802020e0902020e0a02020e0b02020e0c02020e0d02020e0e02010e0f02020e1002010e1102010f0202020f0302020f0402020f0502020f0602020f0702020f0802020f0902020f0a02020f0b02020f0c02020f0d02010f0e02010f0f02020f1002010f1102011002020210030202100402021005020210060202100702021008020210090202100a0202100b0202100c0202100d0201100e0202100f020210100201101102011101020111030202110402021105020211060202110702021108020211090202110a0202110b0201110c0201110d0202110e0201110f0202111002011111020112000201120402011205020112060201120702011208020112090201120a0201120b0202120c0202120d0202120e0201120f02021210020112110201130a0202130b0202130c0202130d0201130e020113100201140b0202140c0202140d0201140e0201150c0201150d");
        short[33] = SSTORE2.write(hex"02ffe66724ffefac6d3801000002010008020100090201000a0201010702020108020201090202010a0201010b0201010d020102060202020702020208020202090202020a0202020b0201020c0202020d0201020e02010305020103060201030702010308020203090202030a0202030b0201030c0202030d0201030e0201040402020405020204060202040702020408020104090202040a0202040b0201040c0202040d0201040e02010502020105030202050402020505020205060201050702020508020205090201050a0202050b0202050c0202050d0201050e0201060102020602020206030202060402020605020206060201060702020608020206090202060a0201060b0202060c0202060d0201060e020107000202070102020702020207030201070402020705020207060201070702020708020207090202070a0202070b0201070c0202070d0201070e020108000202080102020802020208030201080402020805020208060201080702020808020208090202080a0202080b0201080c0202080d0201080e020109000202090102020902020209030202090402020905020209060201090702020908020209090201090a0202090b0201090c0201090d0201090e02010a0002020a0102020a0202020a0302020a0402020a0502020a0602010a0702020a0802020a0902020a0a02010a0b02010a0c02020a0d02010a0e02010b0002020b0102020b0202020b0302020b0402020b0502020b0602010b0702020b0802020b0902020b0a02020b0b02020b0c02020b0d02010b0e02010c0002020c0102020c0202020c0302020c0402020c0502020c0602010c0702020c0802020c0902010c0a02010c0b02010c0c02010c0d02010c0e02010d0002020d0102020d0202010d0302020d0402020d0502020d0602010d0702020d0802020d0902020d0a02020d0b02020d0c02020d0d02010d0e02010e0002020e0102020e0202010e0302020e0402020e0502020e0602010e0702020e0802020e0902020e0a02010e0b02010e0c02020e0d02010e0e02010f0002020f0102020f0202020f0302020f0402020f0502020f0602010f0702020f0802020f0902010f0a02020f0b02010f0c02010f0d02010f0e020110000202100102021002020210030202100402021005020210060201100702021008020210090202100a0202100b0201100c0202100d0201100e020111000202110102021102020211030202110402021105020211060201110702021108020211090202110a0202110b0201110c0202110d0201110e020112000202120102021202020212030202120402021205020212060201120702021208020212090202120a0202120b0201120c0202120d0201120e0201130102021302020213030202130402021305020213060202130702021308020213090202130a0201130b0202130c0202130d0201130e02011402020114030202140402021405020214060202140702021408020214090201140a0202140b0201140c0202140d0201140e0201150402011505020115060201150702011508020115090202150a0202150b0201150c0202150d0201150e02011605020216060202160702021608020216090202160a0202160b0201160c0202160d0201160e020117060202170702021708020217090202170a0202170b0202170c0201170d0201180702021808020218090202180a0202180b0201180c02011908020119090201190a0201190b");
        short[34] = SSTORE2.write(hex"03ff90cff1ff75b7dafffff0ee3801000002000008020000090200000a0200010702010108020201090201010a0200010b0200010d020002060201020702010208020102090201020a0201020b0200020c0201020d0200020e02000305020003060200030702000308020203090201030a0202030b0200030c0201030d0200030e0200040402010405020204060202040702020408020004090201040a0201040b0200040c0201040d0200040e02000502020005030201050402010505020205060200050702020508020105090200050a0201050b0201050c0201050d0200050e0200060102010602020206030200060402010605020206060200060702020608020106090201060a0200060b0201060c0201060d0200060e020007000201070102010702020007030203070402010705020207060200070702020708020107090201070a0201070b0200070c0201070d0200070e020008000202080102010802020008030203080402010805020208060200080702020808020108090201080a0201080b0200080c0201080d0200080e020009000201090102010902020009030203090402010905020209060200090702020908020109090200090a0201090b0200090c0200090d0200090e02000a0002010a0102010a0202010a0302000a0402010a0502020a0602000a0702020a0802010a0902010a0a02000a0b02000a0c02010a0d02000a0e02000b0002010b0102010b0202010b0302010b0402010b0502020b0602000b0702020b0802010b0902010b0a02010b0b02010b0c02010b0d02000b0e02000c0002020c0102010c0202010c0302000c0402010c0502020c0602000c0702020c0802010c0902000c0a02000c0b02000c0c02000c0d02000c0e02000d0002010d0102010d0202000d0302030d0402010d0502020d0602000d0702020d0802010d0902010d0a02010d0b02010d0c02010d0d02000d0e02000e0002010e0102010e0202000e0302030e0402010e0502020e0602000e0702020e0802010e0902010e0a02000e0b02000e0c02010e0d02000e0e02000f0002010f0102010f0202000f0302030f0402010f0502020f0602000f0702020f0802010f0902000f0a02010f0b02000f0c02000f0d02000f0e020010000202100102011002020110030200100402011005020210060200100702021008020110090201100a0201100b0200100c0201100d0200100e020011000201110102011102020111030201110402011105020211060200110702021108020111090201110a0201110b0200110c0201110d0200110e020012000201120102011202020212030201120402011205020212060202120702021208020112090201120a0201120b0200120c0201120d0200120e0200130102011302020113030201130402011305020113060201130702011308020213090201130a0200130b0201130c0201130d0200130e02001402020014030201140402021405020114060201140702011408020114090200140a0201140b0200140c0201140d0200140e0200150402001505020015060200150702001508020015090201150a0201150b0200150c0201150d0200150e02001605020116060201160702021608020116090201160a0201160b0200160c0201160d0200160e020017060201170702011708020117090202170a0201170b0201170c0200170d0200180702021808020118090201180a0201180b0200180c02001908020019090200190a0200190b");
        short[35] = SSTORE2.write(hex"02ff279393ff3cb7a43801000002010008020100090201000a0201010702020108020201090202010a0201010b0201010d020102060202020702020208020202090202020a0202020b0201020c0202020d0201020e02010305020103060201030702010308020203090202030a0202030b0201030c0202030d0201030e0201040402020405020204060202040702020408020104090202040a0202040b0201040c0202040d0201040e02010502020105030202050402020505020205060201050702020508020205090201050a0202050b0202050c0202050d0201050e0201060102020602020206030202060402020605020206060201060702020608020206090202060a0201060b0202060c0202060d0201060e020107000202070102020702020107030202070402020705020207060201070702020708020207090202070a0202070b0201070c0202070d0201070e020108000202080102020802020108030202080402020805020208060201080702020808020208090202080a0202080b0201080c0202080d0201080e020109000202090102020902020209030202090402020905020209060201090702020908020209090201090a0202090b0201090c0201090d0201090e02010a0002020a0102020a0202020a0302020a0402020a0502020a0602010a0702020a0802020a0902020a0a02010a0b02010a0c02020a0d02010a0e02010b0002020b0102020b0202020b0302020b0402020b0502020b0602010b0702020b0802020b0902020b0a02020b0b02020b0c02020b0d02010b0e02010c0002020c0102020c0202020c0302020c0402020c0502020c0602010c0702020c0802020c0902010c0a02010c0b02010c0c02010c0d02010c0e02010d0002020d0102020d0202020d0302010d0402020d0502020d0602010d0702020d0802020d0902020d0a02020d0b02020d0c02020d0d02010d0e02010e0002020e0102020e0202020e0302010e0402020e0502020e0602010e0702020e0802020e0902020e0a02010e0b02010e0c02020e0d02010e0e02010f0002020f0102020f0202020f0302020f0402020f0502020f0602010f0702020f0802020f0902010f0a02020f0b02010f0c02010f0d02010f0e020110000202100102021002020210030202100402021005020210060201100702021008020210090202100a0202100b0201100c0202100d0201100e020111000202110102021102020211030202110402021105020211060201110702021108020211090202110a0202110b0201110c0202110d0201110e020112000202120102021202020212030202120402021205020212060201120702021208020212090202120a0202120b0201120c0202120d0201120e0201130102021302020213030202130402021305020213060202130702021308020213090202130a0201130b0202130c0202130d0201130e02011402020114030202140402021405020214060202140702021408020214090201140a0202140b0201140c0202140d0201140e0201150402011505020115060201150702011508020115090202150a0202150b0201150c0202150d0201150e02011605020216060202160702021608020216090202160a0202160b0201160c0202160d0201160e020117060202170702021708020217090202170a0202170b0202170c0201170d0201180702021808020218090202180a0202180b0201180c02011908020119090201190a0201190b");
        short[36] = SSTORE2.write(hex"05ff2f3635ff1a1e1dff0e1213ff52665cff6886793a010000020000090200000a0200000b02000108020101090201010a0201010b0200010c0200010e0200020702010208020202090201020a0202020b0202020c0200020d0201020e0200020f020003060200030702000308020003090201030a0201030b0202030c0200030d0203030e0200030f02000405020104060204040702040408020404090200040a0202040b0202040c0200040d0201040e0200040f020005030200050402010505020105060204050702000508020405090201050a0200050b0202050c0202050d0203050e0200050f02000602020106030202060402050605020106060204060702000608020406090201060a0201060b0200060c0203060d0201060e0200060f0200070102010702020107030202070402050705020107060204070702050708020407090201070a0202070b0202070c0200070d0203070e0200070f020008000201080102010802020108030202080402050805020108060204080702050808020408090201080a0201080b0202080c0200080d0203080e0200080f0200090102020902020109030202090402040905020109060204090702050908020409090201090a0200090b0202090c0200090d0200090e0200090f02000a0102010a0202020a0302020a0402040a0502010a0602040a0702050a0802040a0902010a0a02010a0b02000a0c02000a0d02010a0e02000a0f02000b0102010b0202010b0302010b0402010b0502010b0602040b0702000b0802040b0902010b0a02020b0b02020b0c02020b0d02010b0e02000b0f02000c0102010c0202020c0302020c0402050c0502010c0602040c0702050c0802040c0902010c0a02000c0b02000c0c02000c0d02000c0e02000c0f02000d0102010d0202010d0302020d0402050d0502010d0602040d0702050d0802040d0902010d0a02020d0b02020d0c02020d0d02010d0e02000d0f02000e0002010e0102010e0202010e0302020e0402050e0502010e0602040e0702050e0802040e0902010e0a02010e0b02000e0c02000e0d02010e0e02000e0f02000f0102020f0202010f0302020f0402040f0502010f0602040f0702050f0802040f0902010f0a02000f0b02020f0c02000f0d02000f0e02000f0f0200100102011002020110030202100402041005020110060204100702001008020410090201100a0202100b0202100c0200100d0203100e0200100f0200110102011102020211030201110402011105020111060204110702001108020411090201110a0201110b0202110c0200110d0203110e0200110f0200120102011202020112030201120402021205020112060204120702041208020412090201120a0202120b0202120c0200120d0201120e0200120f02001302020213030201130402011305020113060201130702011308020213090201130a0201130b0200130c0202130d0203130e0200130f020014030200140402011405020214060201140702011408020114090201140a0200140b0202140c0200140d0201140e0200140f02001505020015060200150702001508020015090200150a0202150b0202150c0200150d0203150e0200150f020016060201160702021608020116090201160a0201160b0202160c0200160d0201160e0200160f0200170702011708020117090201170a0202170b0202170c0202170d0200170e02001808020218090201180a0201180b0202180c0200180d020019090200190a0200190b0200190c");
        short[37] = SSTORE2.write(hex"04ff3f723dff5d906effa1b58fffff0e0e3801000002000008020000090200000a0200010702010108020101090202010a0200010b0200010d020002060202020702020208020202090202020a0202020b0200020c0202020d0200020e02000305020003060200030702000308020103090201030a0201030b0200030c0202030d0200030e0200040402020405020304060203040702030408020004090202040a0202040b0200040c0202040d0200040e02000502020005030202050402020505020305060200050702010508020205090200050a0202050b0202050c0202050d0200050e0200060102020602020106030204060402020605020306060200060702030608020206090202060a0200060b0202060c0202060d0200060e020007000202070102020702020107030204070402010705020307060200070702030708020207090202070a0202070b0200070c0202070d0200070e020008000202080102020802020108030204080402020805020308060200080702030808020208090201080a0201080b0200080c0202080d0200080e020009000202090102020902020109030200090402020905020309060200090702030908020209090200090a0202090b0200090c0200090d0200090e02000a0002020a0102020a0202010a0302000a0402020a0502030a0602000a0702030a0802020a0902020a0a02000a0b02000a0c02020a0d02000a0e02000b0002020b0102020b0202020b0302020b0402020b0502030b0602000b0702030b0802020b0902020b0a02020b0b02020b0c02020b0d02000b0e02000c0002020c0102020c0202010c0302040c0402020c0502030c0602000c0702030c0802020c0902000c0a02000c0b02000c0c02000c0d02000c0e02000d0002020d0102020d0202010d0302040d0402020d0502030d0602000d0702030d0802020d0902020d0a02020d0b02020d0c02020d0d02000d0e02000e0002020e0102020e0202010e0302040e0402020e0502030e0602000e0702030e0802020e0902020e0a02000e0b02000e0c02020e0d02000e0e02000f0002020f0102020f0202010f0302000f0402010f0502010f0602000f0702010f0802020f0902000f0a02020f0b02000f0c02000f0d02000f0e020010000202100102021002020110030200100402021005020310060200100702031008020210090202100a0202100b0200100c0202100d0200100e020011000202110102021102020211030202110402021105020311060200110702011108020111090201110a0202110b0200110c0202110d0200110e020012000202120102021202020112030202120402021205020312060203120702031208020212090202120a0202120b0200120c0202120d0200120e0200130102021302020213030201130402021305020213060202130702021308020213090202130a0200130b0202130c0202130d0200130e02001402020014030202140402021405020114060202140702021408020214090200140a0202140b0200140c0202140d0200140e0200150402001505020015060200150702001508020015090202150a0202150b0200150c0202150d0200150e02001605020216060202160702011608020216090202160a0202160b0200160c0202160d0200160e020017060202170702021708020217090201170a0201170b0202170c0200170d0200180702011808020218090202180a0202180b0200180c02001908020019090200190a0200190b");
        short[38] = SSTORE2.write(hex"04ff00b4adff4b80c2ffff0e0effffe3303801000002000008020000090200000a0200010702010108020201090201010a0200010b0200010d020002060201020702010208020102090201020a0201020b0200020c0203020d0200020e02000305020003060200030702000308020203090201030a0202030b0200030c0203030d0200030e0200040402010405020204060202040702020408020004090201040a0201040b0200040c0203040d0200040e02000502020005030201050402010505020205060203050702020508020105090200050a0201050b0204050c0203050d0200050e0200060102010602020306030203060402010605020206060203060702020608020106090201060a0200060b0204060c0203060d0200060e020007000201070102010702020307030203070402010705020207060203070702020708020107090201070a0201070b0200070c0203070d0200070e020008000202080102010802020308030203080402010805020208060203080702020808020108090201080a0201080b0200080c0203080d0200080e020009000201090102010902020409030204090402010905020209060204090702020908020109090200090a0201090b0200090c0200090d0200090e02000a0002010a0102010a0202040a0302040a0402010a0502020a0602040a0702020a0802010a0902010a0a02000a0b02000a0c02010a0d02000a0e02000b0002010b0102010b0202010b0302010b0402010b0502020b0602030b0702020b0802010b0902010b0a02010b0b02010b0c02010b0d02000b0e02000c0002020c0102010c0202030c0302030c0402010c0502020c0602030c0702020c0802010c0902000c0a02000c0b02000c0c02000c0d02000c0e02000d0002010d0102010d0202030d0302030d0402010d0502020d0602030d0702020d0802010d0902010d0a02010d0b02010d0c02010d0d02000d0e02000e0002010e0102010e0202030e0302030e0402010e0502020e0602040e0702020e0802010e0902010e0a02000e0b02000e0c02010e0d02000e0e02000f0002010f0102010f0202040f0302040f0402010f0502020f0602040f0702020f0802010f0902000f0a02010f0b02000f0c02000f0d02000f0e020010000202100102011002020410030204100402011005020210060203100702021008020110090201100a0201100b0200100c0203100d0200100e020011000201110102011102020111030201110402011105020211060203110702021108020111090201110a0201110b0200110c0203110d0200110e020012000201120102011202020212030201120402011205020212060202120702021208020112090201120a0201120b0200120c0203120d0200120e0200130102011302020113030201130402011305020113060201130702011308020213090201130a0200130b0204130c0203130d0200130e02001402020014030201140402021405020114060201140702011408020114090200140a0201140b0200140c0203140d0200140e0200150402001505020015060200150702001508020015090201150a0201150b0200150c0203150d0200150e02001605020116060201160702021608020116090201160a0201160b0200160c0203160d0200160e020017060201170702011708020117090202170a0201170b0201170c0200170d0200180702021808020118090201180a0201180b0200180c02001908020019090200190a0200190b");
        short[39] = SSTORE2.write(hex"05ff7d7d7dffa1a1a1ff464646fffff0eeffff0e0e5201000002000008020000090200000a0200000b0200000c0200010702010108020101090200010a0201010b0201010c0200010d0200010e020002060201020702010208020102090200020a0201020b0201020c0201020d0201020e0200020f02000210020003060200030702000308020003090200030a0200030b0202030c0201030d0200030e0201030f020003100200040402000405020104060201040702020408020004090201040a0201040b0200040c0201040d0200040e0201040f02000410020005030201050402010505020105060201050702000508020205090201050a0201050b0201050c0200050d0201050e0201050f0200051002000602020106030201060402030605020406060201060702020608020006090201060a0201060b0201060c0201060d0200060e0201060f0200061002000702020107030201070402030705020407060201070702000708020207090201070a0201070b0201070c0201070d0200070e0201070f0200071002000802020108030201080402030805020208060201080702020808020008090201080a0201080b0201080c0201080d0200080e0202080f0200081002000902020109030201090402030905020009060201090702000908020209090201090a0201090b0200090c0201090d0200090e0200090f0200091002000a0202010a0302010a0402030a0502000a0602010a0702020a0802000a0902010a0a02010a0b02010a0c02000a0d02010a0e02010a0f02000a1002000b0202010b0302010b0402010b0502010b0602010b0702000b0802020b0902010b0a02010b0b02010b0c02020b0d02020b0e02020b0f02000b1002000c0202010c0302010c0402030c0502040c0602010c0702020c0802000c0902010c0a02010c0b02010c0c02000c0d02000c0e02000c0f02000c1002050d0002000d0102000d0202010d0302010d0402030d0502040d0602010d0702000d0802020d0902010d0a02010d0b02010d0c02010d0d02010d0e02010d0f02000d1002000e0202010e0302010e0402030e0502020e0602010e0702020e0802000e0902010e0a02010e0b02020e0c02000e0d02020e0e02020e0f02000e1002000f0202010f0302010f0402030f0502000f0602010f0702000f0802020f0902010f0a02010f0b02000f0c02010f0d02000f0e02000f0f02000f1002001002020110030201100402031005020010060201100702021008020010090201100a0201100b0201100c0201100d0200100e0201100f0200101002001102020111030201110402011105020111060201110702001108020211090201110a0201110b0201110c0201110d0200110e0201110f0200111002001202020112030201120402011205020112060201120702011208020112090201120a0201120b0201120c0201120d0200120e0201120f0200121002001302020113030202130402021305020213060202130702021308020213090202130a0201130b0202130c0201130d0200130e0201130f0200131002001402020114030201140402011405020114060201140702011408020114090201140a0201140b0201140c0200140d0201140e0201140f0200141002001502020015030200150402001505020015060200150702001508020015090200150a0200150b0200150c0201150d0200150e0201150f02001510020016060201160702011608020116090200160a0201160b0201160c0201160d0200160e0202160f02001610020017060201170702021708020217090200170a0202170b0201170c0201170d0201170e0200170f0200180702011808020118090200180a0201180b0201180c0200180d0200180e02001908020019090200190a0200190b0200190c");
        short[40] = SSTORE2.write(hex"06ffffa8eeff8f83c0ffa28ef4ff7663c6ff9482dfffe85bcc650100000200000702000008020000090200000a02000105020001060201010702010108020201090203010a0200010b0200010c0200020402030205020202060203020702030208020302090203020a0203020b0203020c0200020d0200030402000305020003060200030702000308020303090202030a0203030b0203030c0203030d0200030e02000402020004030200040402030405020204060203040702030408020004090200040a0203040b0200040c0200040d0200040e0200050102020502020305030203050402030505020305060203050702030508020305090203050a0200050b0200050c0203050d0200050e020006000203060102030602020306030203060402030605020106060203060702020608020306090203060a0203060b0200060c0203060d0200060e020007000203070102010702020407030200070402030705020107060203070702030708020307090203070a0203070b0200070c0203070d0200070e020008000203080102030802020408030200080402030805020308060203080702030808020308090200080a0203080b0200080c0203080d0200080e020009000202090102030902020409030200090402030905020309060203090702030908020309090203090a0200090b0200090c0200090d0200090e02000a0002030a0102030a0202040a0302050a0402030a0502060a0602000a0702060a0802030a0902030a0a02010a0b02010a0c02030a0d02000a0e02000b0002030b0102030b0202040b0302050b0402030b0502060b0602000b0702060b0802030b0902030b0a02030b0b02030b0c02030b0d02000b0e02000c0002020c0102030c0202030c0302030c0402030c0502000c0602000c0702000c0802030c0902000c0a02030c0b02030c0c02030c0d02000c0e02000d0002030d0102030d0202040d0302000d0402030d0502030d0602030d0702030d0802030d0902030d0a02000d0b02000d0c02000d0d02000d0e02000e0002030e0102030e0202040e0302000e0402030e0502030e0602030e0702030e0802030e0902030e0a02010e0b02010e0c02030e0d02000e0e02000f0002020f0102030f0202040f0302000f0402030f0502030f0602030f0702030f0802030f0902030f0a02030f0b02030f0c02030f0d02000f0e020010000203100102031002020410030205100402031005020110060203100702031008020310090203100a0203100b0203100c0203100d0200100e020011000203110102031102020411030205110402031105020111060203110702021108020311090200110a0200110b0200110c0200110d0200110e020012000203120102031202020312030203120402031205020312060203120702031208020312090202120a0203120b0200120c0203120d0200120e020013000203130102021302020313030203130402031305020213060203130702031308020313090203130a0203130b0200130c0203130d0200130e020014000203140102031402020314030202140402031405020314060203140702021408020314090203140a0203140b0200140c0203140d0200140e0200150102031502020315030203150402031505020215060203150702031508020315090203150a0200150b0200150c0203150d0200150e02001602020016030200160402031605020316060203160702031608020016090200160a0203160b0200160c0200160d0200160e0200170402001705020017060200170702001708020317090203170a0203170b0203170c0203170d0200170e0200180402031805020218060203180702031808020318090202180a0203180b0203180c0203180d0200180e0200190402031905020319060201190702031908020119090203190a0203190b0203190c0200190d02001a0502031a0602021a0702031a0802031a0902031a0a02001a0b02001a0c02001b0602001b0702001b0802001b0902001b0a");
        short[41] = SSTORE2.write(hex"04ff4d381dff998078ffbca199ff5d4a2a46010000020000090200000a0200000b02000108020101090201010a0201010b0200010c0200010e0200020702010208020102090201020a0201020b0201020c0200020d0202020e0200020f020003060200030702000308020003090201030a0201030b0201030c0200030d0202030e0200030f02000405020204060203040702030408020304090200040a0201040b0201040c0200040d0202040e0200040f020005030200050402020505020205060203050702000508020305090202050a0200050b0201050c0201050d0202050e0200050f0200060102000602020206030204060402000605020206060203060702000608020306090202060a0201060b0200060c0201060d0202060e0200060f020007000201070102010702020207030204070402000705020207060203070702000708020307090202070a0201070b0201070c0200070d0202070e0200070f020008000201080102010802020208030204080402000805020208060203080702000808020308090202080a0201080b0201080c0200080d0202080e0200080f020009000201090102010902020209030204090402030905020209060203090702000908020309090202090a0200090b0201090c0200090d0200090e0200090f02000a0002010a0102010a0202020a0302040a0402030a0502020a0602030a0702000a0802030a0902020a0a02010a0b02000a0c02000a0d02020a0e02000a0f02000b0002010b0102010b0202020b0302020b0402020b0502020b0602030b0702000b0802030b0902020b0a02010b0b02010b0c02010b0d02020b0e02000b0f02000c0002010c0102010c0202020c0302040c0402000c0502020c0602030c0702000c0802030c0902020c0a02000c0b02000c0c02000c0d02000c0e02000c0f02000d0002010d0102010d0202020d0302040d0402000d0502020d0602030d0702000d0802030d0902020d0a02010d0b02010d0c02010d0d02020d0e02000d0f02000e0002010e0102010e0202020e0302040e0402000e0502020e0602030e0702000e0802030e0902020e0a02010e0b02000e0c02000e0d02020e0e02000e0f02000f0002010f0102010f0202020f0302040f0402030f0502020f0602030f0702000f0802030f0902020f0a02000f0b02010f0c02000f0d02000f0e02000f0f020010000201100102011002020210030204100402031005020210060203100702001008020310090202100a0201100b0201100c0200100d0202100e0200100f020011000201110102011102020211030202110402021105020211060203110702001108020311090202110a0201110b0201110c0200110d0202110e0200110f020012000201120102011202020112030202120402021205020212060203120702031208020312090202120a0201120b0201120c0200120d0202120e0200120f0200130102001302020113030201130402011305020213060201130702021308020213090201130a0201130b0200130c0201130d0202130e0200130f020014030200140402011405020114060201140702011408020114090201140a0200140b0201140c0200140d0202140e0200140f02001505020015060200150702001508020015090200150a0201150b0201150c0200150d0202150e0200150f020016060201160702011608020116090201160a0201160b0201160c0200160d0202160e0200160f0200170702011708020117090201170a0201170b0201170c0201170d0200170e02001808020018090201180a0201180b0201180c0200180d020019090200190a0200190b0200190c");
        short[42] = SSTORE2.write(hex"04fff98f30fff8e08affff7216fffff0ee3801000002000008020000090200000a0200010702010108020001090201010a0200010b0200010d020002060201020702010208020102090201020a0200020b0200020c0201020d0200020e02000305020003060200030702000308020103090201030a0201030b0200030c0201030d0200030e0200040402010405020204060202040702020408020004090201040a0201040b0200040c0201040d0200040e02000502020005030201050402010505020205060200050702020508020105090200050a0201050b0201050c0201050d0200050e0200060102010602020306030200060402030605020206060200060702020608020106090201060a0200060b0201060c0201060d0200060e020007000201070102010702020307030204070402030705020207060200070702020708020107090201070a0201070b0200070c0201070d0200070e020008000200080102000802020308030204080402030805020208060200080702020808020108090201080a0201080b0200080c0201080d0200080e020009000200090102010902020309030204090402030905020209060200090702020908020109090200090a0201090b0200090c0200090d0200090e02000a0002010a0102010a0202030a0302040a0402030a0502020a0602000a0702020a0802010a0902010a0a02000a0b02000a0c02010a0d02000a0e02000b0002010b0102010b0202010b0302010b0402010b0502020b0602000b0702020b0802010b0902010b0a02010b0b02010b0c02010b0d02000b0e02000c0002000c0102000c0202030c0302000c0402030c0502020c0602000c0702020c0802010c0902000c0a02000c0b02000c0c02000c0d02000c0e02000d0002000d0102010d0202030d0302040d0402030d0502020d0602000d0702020d0802010d0902010d0a02010d0b02010d0c02010d0d02000d0e02000e0002010e0102010e0202030e0302040e0402030e0502020e0602000e0702020e0802010e0902010e0a02000e0b02000e0c02010e0d02000e0e02000f0002010f0102010f0202030f0302040f0402030f0502020f0602000f0702020f0802010f0902000f0a02010f0b02000f0c02000f0d02000f0e020010000200100102001002020310030204100402031005020210060200100702021008020110090201100a0201100b0200100c0201100d0200100e020011000200110102011102020111030201110402011105020211060200110702021108020111090201110a0201110b0200110c0201110d0200110e020012000201120102011202020112030201120402011205020212060202120702021208020112090201120a0201120b0200120c0201120d0200120e0200130102011302020013030201130402011305020113060201130702011308020113090201130a0200130b0201130c0201130d0200130e02001402020014030201140402001405020114060200140702011408020014090200140a0201140b0200140c0201140d0200140e0200150402001505020015060200150702001508020015090201150a0201150b0200150c0201150d0200150e02001605020116060201160702011608020116090201160a0201160b0200160c0201160d0200160e020017060200170702011708020017090201170a0200170b0201170c0200170d0200180702011808020018090201180a0200180b0200180c02001908020019090200190a0200190b");
        short[43] = SSTORE2.write(hex"05fff0c14dffd89537ffffffd5fff4e299fff3d9a13801000002000008020000090200000a0200010702010108020201090201010a0200010b0200010d020002060201020702010208020102090201020a0201020b0200020c0201020d0200020e02000305020003060200030702000308020203090201030a0202030b0200030c0201030d0200030e0200040402010405020304060203040702040408020004090201040a0201040b0200040c0201040d0200040e02000502020005030201050402010505020305060200050702030508020405090200050a0201050b0201050c0201050d0200050e0200060102010602020206030200060402010605020306060200060702030608020406090204060a0200060b0201060c0201060d0200060e020007000201070102010702020207030200070402010705020307060200070702030708020407090204070a0204070b0200070c0201070d0200070e020008000201080102010802020308030200080402010805020308060200080702030808020408090204080a0204080b0200080c0201080d0200080e020009000201090102030902020309030205090402010905020009060200090702030908020409090200090a0204090b0200090c0200090d0200090e02000a0002010a0102030a0202030a0302050a0402010a0502000a0602000a0702030a0802040a0902010a0a02000a0b02000a0c02010a0d02000a0e02000b0002010b0102020b0202020b0302010b0402010b0502000b0602000b0702030b0802040b0902010b0a02010b0b02010b0c02010b0d02000b0e02000c0002010c0102030c0202030c0302000c0402010c0502030c0602000c0702030c0802040c0902000c0a02000c0b02000c0c02000c0d02000c0e02000d0002010d0102030d0202030d0302000d0402010d0502030d0602000d0702030d0802040d0902010d0a02010d0b02010d0c02010d0d02000d0e02000e0002010e0102010e0202030e0302000e0402010e0502030e0602000e0702030e0802040e0902010e0a02000e0b02000e0c02010e0d02000e0e02000f0002010f0102010f0202020f0302050f0402010f0502030f0602000f0702030f0802040f0902000f0a02040f0b02000f0c02000f0d02000f0e020010000201100102011002020210030205100402011005020310060200100702031008020410090204100a0204100b0200100c0201100d0200100e020011000201110102011102020111030201110402011105020311060200110702031108020411090204110a0201110b0200110c0201110d0200110e020012000201120102011202020212030201120402011205020312060203120702041208020412090201120a0201120b0200120c0201120d0200120e0200130102011302020113030201130402011305020113060201130702011308020113090201130a0200130b0201130c0201130d0200130e02001402020014030201140402011405020114060201140702011408020114090200140a0201140b0200140c0201140d0200140e0200150402001505020015060200150702001508020015090201150a0201150b0200150c0201150d0200150e02001605020116060201160702021608020116090201160a0201160b0200160c0201160d0200160e020017060201170702011708020117090202170a0201170b0201170c0200170d0200180702011808020118090201180a0201180b0200180c02001908020019090200190a0200190b");
        short[44] = SSTORE2.write(hex"01ffff0e0e0c0100000200000d020001090200010c0201010d0200010e020002060200020702000208020102090200020a0200020c0201020d0200020e02000305020103060200030702010308020003090201030a0200030b0200030c0201030d0200030e02000402020004030200040402010405020104060200040702010408020104090200040a0201040b0200040c0201040d0200040e0200050102010502020105030200050402010505020005060200050702000508020105090200050a0201050b0201050c0201050d0200050e020006000201060102010602020006030200060402010605020106060200060702010608020106090200060a0200060b0201060c0201060d0200060e020007000201070102010702020007030200070402010705020007060200070702000708020107090200070a0201070b0200070c0201070d0200070e020008000201080102010802020008030200080402010805020108060200080702010808020108090200080a0201080b0200080c0200080d0200080e020009000201090102010902020009030200090402010905020009060200090702000908020109090200090a0200090b0200090c0201090d0200090e02000a0002010a0102010a0202010a0302010a0402010a0502010a0602000a0702010a0802010a0902000a0a02010a0b02010a0c02010a0d02000a0e02000b0002010b0102010b0202010b0302000b0402010b0502000b0602000b0702000b0802010b0902000b0a02000b0b02000b0c02000b0d02000b0e02000c0002010c0102010c0202000c0302000c0402010c0502010c0602000c0702010c0802010c0902000c0a02010c0b02010c0c02010c0d02000c0e02000d0002010d0102010d0202000d0302000d0402010d0502000d0602000d0702000d0802010d0902000d0a02000d0b02000d0c02010d0d02000d0e02000e0002010e0102010e0202000e0302000e0402010e0502010e0602000e0702010e0802010e0902000e0a02010e0b02000e0c02000e0d02000e0e02000f0002010f0102010f0202000f0302000f0402010f0502000f0602000f0702000f0802010f0902000f0a02010f0b02000f0c02010f0d02000f0e020010000201100102011002020110030201100402011005020010060200100702001008020110090200100a0201100b0200100c0201100d0200100e020011000201110102011102020111030200110402001105020111060200110702011108020111090200110a0200110b0201110c0201110d0200110e0200120102011202020112030201120402011205020112060200120702001208020012090201120a0201120b0200120c0201120d0200120e02001302020013030200130402001305020013060200130702011308020113090201130a0200130b0200130c0201130d0200130e02001408020114090200140a0200140c0201140d0200140e020015090200150c0201150d0200150e0200160d");
        short[45] = SSTORE2.write(hex"03fffff0eeffe1c3c3ffa48d8c650100000200000702000008020000090200000a02000105020001060201010702010108020201090201010a0200010b0200010c0200020402010205020202060201020702010208020102090201020a0201020b0202020c0200020d0200030402000305020003060200030702000308020103090202030a0201030b0201030c0201030d0200030e02000402020004030200040402010405020204060201040702010408020004090200040a0201040b0200040c0200040d0200040e0200050102020502020105030201050402020505020205060202050702020508020205090201050a0200050b0200050c0201050d0200050e020006000201060102010602020106030201060402010605020106060203060702010608020106090201060a0201060b0200060c0202060d0200060e020007000201070102010702020307030200070402010705020107060203070702020708020107090201070a0201070b0200070c0201070d0200070e020008000201080102010802020308030200080402010805020208060203080702010808020108090200080a0201080b0200080c0201080d0200080e020009000202090102010902020309030200090402010905020109060203090702010908020109090201090a0200090b0200090c0200090d0200090e02000a0002010a0102010a0202030a0302020a0402010a0502020a0602030a0702010a0802020a0902010a0a02010a0b02010a0c02010a0d02000a0e02000b0002010b0102010b0202030b0302020b0402010b0502010b0602030b0702020b0802010b0902010b0a02010b0b02020b0c02010b0d02000b0e02000c0002020c0102010c0202010c0302010c0402010c0502010c0602030c0702010c0802010c0902000c0a02010c0b02010c0c02010c0d02000c0e02000d0002010d0102010d0202030d0302000d0402010d0502020d0602030d0702010d0802020d0902010d0a02000d0b02000d0c02000d0d02000d0e02000e0002010e0102010e0202030e0302000e0402010e0502010e0602030e0702010e0802010e0902010e0a02010e0b02010e0c02010e0d02000e0e02000f0002020f0102010f0202030f0302000f0402010f0502010f0602030f0702020f0802010f0902010f0a02020f0b02010f0c02010f0d02000f0e020010000201100102011002020310030202100402011005020210060203100702011008020110090201100a0201100b0201100c0201100d0200100e020011000201110102011102020311030202110402011105020111060203110702021108020111090200110a0200110b0200110c0200110d0200110e020012000201120102011202020112030201120402011205020112060203120702011208020112090202120a0201120b0200120c0201120d0200120e020013000201130102021302020113030201130402011305020213060202130702021308020113090201130a0201130b0200130c0202130d0200130e020014000201140102011402020114030202140402011405020114060201140702021408020114090201140a0201140b0200140c0201140d0200140e0200150102011502020115030201150402011505020215060201150702011508020115090201150a0200150b0200150c0201150d0200150e02001602020016030200160402011605020116060201160702011608020016090200160a0201160b0200160c0200160d0200160e0200170402001705020017060200170702001708020117090201170a0201170b0201170c0201170d0200170e0200180402011805020218060201180702011808020118090202180a0201180b0201180c0202180d0200180e0200190402011905020119060201190702011908020119090201190a0201190b0201190c0200190d02001a0502011a0602021a0702011a0802011a0902011a0a02001a0b02001a0c02001b0602001b0702001b0802001b0902001b0a");
        short[46] = SSTORE2.write(hex"01fff9f4f20c0100000200000d020001090200010c0201010d0200010e020002060200020702000208020102090200020a0200020c0201020d0200020e02000305020103060200030702010308020003090201030a0200030b0200030c0201030d0200030e02000402020004030200040402010405020104060200040702010408020104090200040a0201040b0200040c0201040d0200040e0200050102010502020105030200050402010505020005060200050702000508020105090200050a0201050b0201050c0201050d0200050e020006000201060102010602020006030200060402010605020106060200060702010608020106090200060a0200060b0201060c0201060d0200060e020007000201070102010702020007030200070402010705020007060200070702000708020107090200070a0201070b0200070c0201070d0200070e020008000201080102010802020008030200080402010805020108060200080702010808020108090200080a0201080b0200080c0200080d0200080e020009000201090102010902020009030200090402010905020009060200090702000908020109090200090a0200090b0200090c0201090d0200090e02000a0002010a0102010a0202010a0302010a0402010a0502010a0602000a0702010a0802010a0902000a0a02010a0b02010a0c02010a0d02000a0e02000b0002010b0102010b0202010b0302000b0402010b0502000b0602000b0702000b0802010b0902000b0a02000b0b02000b0c02000b0d02000b0e02000c0002010c0102010c0202000c0302000c0402010c0502010c0602000c0702010c0802010c0902000c0a02010c0b02010c0c02010c0d02000c0e02000d0002010d0102010d0202000d0302000d0402010d0502000d0602000d0702000d0802010d0902000d0a02000d0b02000d0c02010d0d02000d0e02000e0002010e0102010e0202000e0302000e0402010e0502010e0602000e0702010e0802010e0902000e0a02010e0b02000e0c02000e0d02000e0e02000f0002010f0102010f0202000f0302000f0402010f0502000f0602000f0702000f0802010f0902000f0a02010f0b02000f0c02010f0d02000f0e020010000201100102011002020110030201100402011005020010060200100702001008020110090200100a0201100b0200100c0201100d0200100e020011000201110102011102020111030200110402001105020111060200110702011108020111090200110a0200110b0201110c0201110d0200110e0200120102011202020112030201120402011205020112060200120702001208020012090201120a0201120b0200120c0201120d0200120e02001302020013030200130402001305020013060200130702011308020113090201130a0200130b0200130c0201130d0200130e02001408020114090200140a0200140c0201140d0200140e020015090200150c0201150d0200150e0200160d");
        short[47] = SSTORE2.write(hex"07991729f34d667af84d5963f8ff1929f4806579f9805965f9fffff0ee3801000002010008020100090201000a0201010702020108020201090202010a0201010b0201010d020102060202020702020208020202090203020a0202020b0201020c0202020d0201020e02040305020403060204030702040308020203090202030a0202030b0201030c0202030d0201030e0204040402050405020604060206040702060408020404090202040a0202040b0201040c0202040d0201040e02040502020405030205050402050505020605060204050702060508020505090204050a0202050b0202050c0202050d0201050e0204060102050602020606030207060402050605020606060204060702060608020506090205060a0204060b0202060c0202060d0201060e020407000205070102050702020607030207070402050705020607060204070702060708020607090205070a0205070b0204070c0202070d0201070e020408000206080102050802020608030207080402050805020608060204080702060808020508090205080a0206080b0204080c0202080d0201080e020409000205090102050902020609030204090402050905020609060204090702060908020509090204090a0205090b0204090c0204090d0204090e02040a0002050a0102050a0202060a0302040a0402050a0502060a0602040a0702060a0802050a0902060a0a02040a0b02040a0c02050a0d02040a0e02040b0002050b0102050b0202050b0302050b0402050b0502060b0602040b0702060b0802050b0902050b0a02050b0b02050b0c02050b0d02040b0e02040c0002050c0102050c0202060c0302070c0402050c0502060c0602040c0702060c0802050c0902040c0a02040c0b02040c0c02040c0d02040c0e02040d0002060d0102050d0202060d0302070d0402050d0502060d0602040d0702060d0802050d0902050d0a02050d0b02050d0c02050d0d02040d0e02040e0002050e0102050e0202060e0302070e0402050e0502060e0602040e0702060e0802050e0902050e0a02040e0b02040e0c02050e0d02040e0e02040f0002050f0102050f0202060f0302040f0402050f0502060f0602040f0702060f0802050f0902040f0a02050f0b02040f0c02040f0d02040f0e020410000206100102051002020610030204100402051005020610060204100702061008020510090205100a0205100b0204100c0202100d0201100e020411000205110102051102020511030205110402051105020611060204110702061108020511090205110a0206110b0204110c0202110d0201110e020412000205120102051202020612030205120402051205020612060204120702061208020512090205120a0205120b0204120c0202120d0201120e0204130102051302020513030205130402051305020613060206130702061308020513090205130a0204130b0202130c0202130d0201130e02041402020414030205140402061405020514060205140702051408020514090204140a0202140b0201140c0202140d0201140e0204150402041505020415060204150702041508020415090202150a0202150b0201150c0202150d0201150e02011605020216060202160702031608020216090202160a0202160b0201160c0202160d0201160e020117060202170702021708020217090203170a0202170b0202170c0201170d0201180702031808020218090202180a0202180b0201180c02011908020119090201190a0201190b");
        short[48] = SSTORE2.write(hex"0bffebe4d8ff29a691ffe0d7c5fffcd265ffb8d9ceffdb4f54fffff0eeff66806aff204973ff543e2efff19090650100000200000702000008020000090200000a02000105020001060201010702020108020201090202010a0200010b0200010c0200020402010205020302060202020702020208020202090204020a0204020b0204020c0200020d0200030402000305020003060200030702000308020403090204030a0204030b0201030c0201030d0200030e02000402020004030200040402050405020304060204040702040408020004090200040a0201040b0200040c0200040d0200040e0200050102050502020505030205050402050505020405060204050702040508020405090201050a0200050b0200050c0206050d0200050e020006000205060102050602020506030205060402010605020706060204060702030608020106090201060a0201060b0200060c0206060d0200060e02000700020507010205070202080703020907040201070502070706020a070702010708020107090201070a0206070b0200070c0206070d0200070e020008000205080102010802020808030209080402010805020a08060201080702010808020108090200080a0206080b0200080c0201080d0200080e0200090002030901020209020208090302090904020a0905020b0906020b0907020b0908020609090206090a0200090b0200090c0200090d0200090e02000a0002020a0102020a0202080a0302030a0402010a05020b0a0602090a07020b0a0802060a0902060a0a02010a0b02010a0c02010a0d02000a0e02000b0002020b01020a0b0202080b0302030b0402010b05020b0b0602090b07020b0b0802060b0902010b0a02010b0b02010b0c02010b0d02000b0e02000c00020a0c0102010c0202010c0302010c0402010c05020b0c0602090c07020b0c0802010c0902000c0a02010c0b02010c0c02010c0d02000c0e02000d0002010d0102010d0202080d0302090d0402060d05020b0d0602090d07020b0d0802010d0902010d0a02000d0b02000d0c02000d0d02000d0e02000e0002010e0102010e0202080e0302090e0402060e05020b0e06020b0e07020b0e0802010e0902020e0a02020e0b02020e0c02020e0d02000e0e02000f0002010f0102060f0202080f0302090f0402060f0502010f0602010f0702010f0802020f0902020f0a02020f0b02020f0c02020f0d02000f0e020010000206100102061002020810030203100402011005020710060201100702051008020210090202100a0202100b0202100c0202100d0200100e020011000206110102061102020811030203110402011105020711060201110702061108020511090200110a0200110b0200110c0200110d0200110e020012000206120102011202020112030201120402011205020112060201120702041208020612090205120a0202120b0200120c0201120d0200120e020013000201130102031302020113030201130402051305020a13060201130702011308020413090206130a0201130b0200130c0201130d0200130e02001400020114010201140202011403020514040205140502051406020a140702031408020114090204140a0201140b0200140c0201140d0200140e02001501020515020205150302051504020515050205150602051507020a1508020115090201150a0200150b0200150c0201150d0200150e02001602020016030200160402051605020516060201160702011608020016090200160a0201160b0200160c0200160d0200160e0200170402001705020017060200170702001708020117090201170a0201170b0201170c0206170d0200170e0200180402011805020318060201180702011808020118090203180a0206180b0206180c0206180d0200180e0200190402011905020119060201190702011908020619090206190a0206190b0206190c0200190d02001a0502011a0602031a0702061a0802061a0902061a0a02001a0b02001a0c02001b0602001b0702001b0802001b0902001b0a");
        short[49] = SSTORE2.write(hex"04991729f34d667af8ff1929f4806579f90c0100000201000d020101090201010c0202010d0201010e020302060203020702030208020202090201020a0201020c0202020d0201020e02030305020403060203030702040308020303090202030a0201030b0201030c0202030d0201030e02030402020304030203040402040405020404060203040702040408020404090203040a0202040b0201040c0202040d0201040e0203050102040502020405030203050402040505020305060203050702030508020405090203050a0202050b0202050c0202050d0201050e020306000204060102040602020306030203060402040605020406060203060702040608020406090203060a0203060b0202060c0202060d0201060e020307000204070102040702020307030203070402040705020307060203070702030708020407090203070a0204070b0203070c0202070d0201070e020308000204080102040802020308030203080402040805020408060203080702040808020408090203080a0204080b0203080c0203080d0203080e020309000204090102040902020309030203090402040905020309060203090702030908020409090203090a0203090b0203090c0204090d0203090e02030a0002040a0102040a0202040a0302040a0402040a0502040a0602030a0702040a0802040a0902030a0a02040a0b02040a0c02040a0d02030a0e02030b0002040b0102040b0202040b0302030b0402040b0502030b0602030b0702030b0802040b0902030b0a02030b0b02030b0c02030b0d02030b0e02030c0002040c0102040c0202030c0302030c0402040c0502040c0602030c0702040c0802040c0902030c0a02040c0b02040c0c02040c0d02030c0e02030d0002040d0102040d0202030d0302030d0402040d0502030d0602030d0702030d0802040d0902030d0a02030d0b02030d0c02040d0d02030d0e02030e0002040e0102040e0202030e0302030e0402040e0502040e0602030e0702040e0802040e0902030e0a02040e0b02030e0c02030e0d02030e0e02030f0002040f0102040f0202030f0302030f0402040f0502030f0602030f0702030f0802040f0902030f0a02040f0b02030f0c02020f0d02010f0e020310000204100102041002020410030204100402041005020310060203100702031008020410090203100a0204100b0203100c0202100d0201100e020311000204110102041102020411030203110402031105020411060203110702041108020411090203110a0203110b0202110c0202110d0201110e0203120102041202020412030204120402041205020412060203120702031208020312090202120a0202120b0201120c0202120d0201120e02031302020313030203130402031305020313060203130702021308020213090202130a0201130b0201130c0202130d0201130e02011408020214090201140a0201140c0202140d0201140e020115090201150c0202150d0201150e0201160d");
        short[50] = SSTORE2.write(hex"09991729f34d8495fe4d5963f84d667af8ff1929f4806579f9805965f9808595fffffff0ee650100000201000702010008020100090201000a02010105020101060202010702020108020301090204010a0201010b0201010c0201020402040205020302060204020702040208020402090204020a0204020b0204020c0201020d0201030402050305020503060205030702050308020403090203030a0204030b0204030c0204030d0201030e02050402020504030205040402060405020704060206040702060408020504090205040a0204040b0201040c0201040d0201040e0205050102070502020605030206050402060505020605060206050702060508020605090206050a0205050b0201050c0204050d0201050e020506000206060102060602020606030206060402060605020806060206060702070608020606090206060a0206060b0201060c0204060d0201060e020507000206070102080702020707030209070402060705020807060206070702060708020607090206070a0206070b0201070c0204070d0201070e020508000206080102060802020708030209080402060805020608060206080702060808020608090205080a0206080b0201080c0204080d0201080e020509000207090102060902020709030205090402060905020609060206090702060908020609090206090a0205090b0205090c0205090d0205090e02050a0002060a0102060a0202070a0302050a0402060a0502080a0602050a0702080a0802060a0902060a0a02080a0b02080a0c02060a0d02050a0e02050b0002060b0102060b0202070b0302050b0402060b0502080b0602050b0702080b0802060b0902060b0a02060b0b02060b0c02060b0d02050b0e02050c0002070c0102060c0202060c0302060c0402060c0502050c0602050c0702050c0802060c0902050c0a02060c0b02060c0c02060c0d02050c0e02050d0002060d0102060d0202070d0302090d0402060d0502060d0602060d0702060d0802060d0902060d0a02050d0b02050d0c02050d0d02050d0e02050e0002060e0102060e0202070e0302090e0402060e0502060e0602060e0702060e0802060e0902060e0a02080e0b02080e0c02060e0d02050e0e02050f0002070f0102060f0202070f0302050f0402060f0502060f0602060f0702060f0802060f0902060f0a02060f0b02060f0c02060f0d02050f0e020510000206100102061002020710030205100402061005020810060206100702061008020610090206100a0206100b0206100c0206100d0205100e020511000206110102061102020711030205110402061105020811060206110702071108020611090205110a0205110b0205110c0205110d0205110e020512000206120102061202020612030206120402061205020612060206120702061208020612090207120a0206120b0201120c0204120d0201120e020513000206130102071302020613030206130402061305020713060206130702061308020613090206130a0206130b0201130c0204130d0201130e020514000206140102061402020614030207140402061405020614060206140702071408020614090206140a0206140b0201140c0204140d0201140e0205150102061502020615030206150402061505020715060206150702061508020615090206150a0205150b0201150c0204150d0201150e02051602020516030205160402061605020616060206160702061608020516090205160a0204160b0201160c0201160d0201160e0205170402051705020517060205170702051708020417090204170a0204170b0204170c0204170d0201170e0201180402041805020318060204180702041808020418090203180a0204180b0204180c0204180d0201180e0201190402041905020419060202190702041908020219090204190a0204190b0204190c0201190d02011a0502041a0602031a0702041a0802041a0902041a0a02011a0b02011a0c02011b0602011b0702011b0802011b0902011b0a");
        short[52] = SSTORE2.write(hex"01ff6b72127600000002000007020001050201010602010107020001080200010a020002060201020702010208020102090200020a02000302020003030200030702010308020103090200030a020004040200040502000408020104090200040a0200050602000509020006010200060202000603020006070200070402000705020008060200080702000a0602000a0702000b0302000b0402000b0502010b0602010b0702000b0802000c0002000c0102000c0202010c0302010c0402010c0502010c0602010c0702000c0802010d0102010d0202010d0302010d0402010d0502000d0602000d0702000e0002000e0102010e0202010e0302010e0402000e0502010f0102010f0202000f0302000f040200100002001001020010020200100702001106020111070200110802001205020112060201120702011208020012090200130402011305020113060201130702001308020113090200130a020014030201140402011405020114060200140702011408020114090200140a02001502020115030201150402011505020015060201150702011508020015090201160202011603020116040200160502011606020116070201160802001609020117030200170402011705020117060201170702001708020118060201180702001808");
        short[53] = SSTORE2.write(hex"008d00000002000009020001070200010a020002030200020402000206020002070200020b0200030402000305020003060200030702000308020003090200030a0200030b02000405020004060200040702000408020004090200040a0200050002000501020005050200050602000507020005080200050902000602020006030200060502000606020006070200060802000702020007030200070502000706020007070200070802000803020008040200080502000806020008070200080802000903020009040200090502000906020009070200090802000a0302000a0402000a0502000a0602000a0702000a0802000a0a02000b0202000b0302000b0402000b0502000b0602000b0702000b0802000b0902000b0a02000c0102000c0402000c0502000c0602000c0702000c0802000d0502000d0602000d0702000d0802000e0402000e0502000e0602000e0702000e0802000f0502000f0602000f0702000f0802001004020010050200100602001007020010080200110102001102020011040200110502001106020011070200110802001203020012040200120502001206020012070200120802001303020013040200130502001306020013070200130802001309020014050200140602001407020014080200140902001505020015060200150702001508020015090200150a020016060200160702001608020016090200160a0200160b02001707020017090200170a0200170b0200170c020018070200180a0200180b0200180d0200190a02001a09");
        short[62] = SSTORE2.write(hex"01ff666d4216000000020000000200000102010100020101010200020002000201020103000201030102000400020004010201050002010501020006000200060102010700020107010200080002000801020109000201090102000a0002000a01");
        short[64] = SSTORE2.write(hex"02ff7d5799ff4d2e5c8d0000000201000602010007020100080201010502010106020101070201020402010205020102060201030302010304020103050202030602010402020104030201040402020405020104060201050102010502020105030202050402010505020105060201060102010602020106030201060402010605020206060201070102010702020107030201070402020705020107060201080002010801020108020201080302020804020108050201080602010901020109020201090302010904020109050202090602010a0002010a0102010a0202010a0302010a0402020a0502010a0602010b0102010b0202010b0302020b0402010b0502010b0602010c0002010c0102010c0202010c0302010c0402010c0502010c0602010d0102010d0202010d0302010d0402010d0502010d0602010d0702010e0102010e0202010e0302010e0402010e0502010e0602010e0702010e0802010f0002010f0202010f0302010f0402010f0502010f0602010f0702010f0802010f0902011002020110030201100402011005020110060201100702011008020110090201100a02011102020111030201110402011105020111060201110702011108020111090201110a0201110b0201110c020112020201120402011205020112060201120702011208020112090201120a0201120b0201120c0201120d0201130402011305020113060201130702011308020113090201130a0201130b0201130c0201130d0201140402011406020114080201140a0201140c0201150602011508");
        short[66] = SSTORE2.write(hex"02ffff7216ff9da0002010a0102010a0202020a0302010a0402010a0502010a0602020a0702010a0802010a0902010b0302010b0402010b0502010b0602020b0702010b0802010b0902020c0702010c0802010c0902010d0802010d09");
        short[69] = SSTORE2.write(hex"02fffa5e20ff9d49118d0000000201000602010007020100080201010502010106020101070201020402010205020102060201030302010304020103050202030602010402020104030201040402020405020104060201050102010502020105030202050402010505020105060201060102010602020106030201060402010605020206060201070102010702020107030201070402020705020107060201080002010801020108020201080302020804020108050201080602010901020109020201090302010904020109050202090602010a0002010a0102010a0202010a0302010a0402020a0502010a0602010b0102010b0202010b0302020b0402010b0502010b0602010c0002010c0102010c0202010c0302010c0402010c0502010c0602010d0102010d0202010d0302010d0402010d0502010d0602010d0702010e0102010e0202010e0302010e0402010e0502010e0602010e0702010e0802010f0002010f0202010f0302010f0402010f0502010f0602010f0702010f0802010f0902011002020110030201100402011005020110060201100702011008020110090201100a02011102020111030201110402011105020111060201110702011108020111090201110a0201110b0201110c020112020201120402011205020112060201120702011208020112090201120a0201120b0201120c0201120d0201130402011305020113060201130702011308020113090201130a0201130b0201130c0201130d0201140402011406020114080201140a0201140c0201150602011508");
        short[70] = SSTORE2.write(hex"003a0000000200000a0200010b0200010c02000110020002050200020c0200020f02000306020003070200030c0200030f020004080200040902000502020005030200060402000705020009000200090202000a0102000a0302000a0402000a0502000e0202000e0302000e0402000f01020010010200130302001304020013050200140102001402020015000200150d02001601020016070200160a0200160d020017070200170a0200170d020018060200180a0200190402001905020019090200190e0200191002001a0a02001a0d02001a1102001b0902001b0d02001c0702001c0802001c0d02001d0e");
        short[75] = SSTORE2.write(hex"002a00000002000003020000060200010302000105020002030200020602000300020003040200040102000402020004050200050302000504020005050200070302000704020007060200080202000903020009040200090502000a0102000b0202000b0302000b0402000d0302000d0402000d0502000e0202000f0302000f0402000f0502000f06020011040200110502001203020012060200130102001302020013050200130702001404");
        short[78] = SSTORE2.write(hex"01ff43c58c5fa0302010a0402010a0502000a0602000a0702000b0402010b0502010b0602000b0702000c0502000c0602000c0702000e0502000e0602000e0702000f0902001005020010060200100702001109020012050200120602001207020013080200130a020014080200140a020015070200150a02001609");
        short[81] = SSTORE2.write(hex"01ff12c1fb5fa0302010a0402010a0502000a0602000a0702000b0402010b0502010b0602000b0702000c0502000c0602000c0702000e0502000e0602000e0702000f0902001005020010060200100702001109020012050200120602001207020013080200130a020014080200140a020015070200150a02001609");
        short[89] = SSTORE2.write(hex"01fffbf0df8d00000002010009020101070201010a020102030201020402010206020102070201020b0201030402010305020103060201030702010308020103090201030a0201030b02010405020104060201040702010408020104090201040a0201050002010501020105050201050602010507020105080201050902010602020106030201060502010606020106070201060802010702020107030201070502010706020107070201070802010803020108040201080502010806020108070201080802010903020109040201090502010906020109070201090802010a0302010a0402010a0502010a0602010a0702010a0802010a0a02010b0202010b0302010b0402010b0502010b0602010b0702010b0802010b0902010b0a02010c0102010c0402010c0502010c0602010c0702010c0802010d0502010d0602010d0702010d0802010e0402010e0502010e0602010e0702010e0802010f0502010f0602010f0702010f0802011004020110050201100602011007020110080201110102011102020111040201110502011106020111070201110802011203020112040201120502011206020112070201120802011303020113040201130502011306020113070201130802011309020114050201140602011407020114080201140902011505020115060201150702011508020115090201150a020116060201160702011608020116090201160a0201160b02011707020117090201170a0201170b0201170c020118070201180a0201180b0201180d0201190a02011a09");
        short[92] = SSTORE2.write(hex"01ffff0e0e24000000020000020200010202000200020002010200020202000300020003010200030202000400020004010200040202000500020005010200050202000600020006010200060202000700020007010200070202000800020008010200080202000900020009010200090202000a0002000a0102000a0202000b0002000b0102000b0202010c0102000c0202010d0002000d02");
        short[94] = SSTORE2.write(hex"02ff08030dff2f3635a40000000201000d0201010d0201020d0201030c0201030d02010407020104090201040b0201040c0201040d020105060201050702020508020105090201050a0201050b0201050c0201050d020106030201060402020605020106060201060702020608020106090201060a0201060b0201060c0201060d0201070102010702020107030201070402020705020107060201070702020708020107090201070a0201070b0201070c0201070d020108000201080102020802020108030201080402010805020108060201080702010808020108090201080a0201080b0201080c0201080d020109000202090102010902020109030201090402010905020109060201090702010908020109090201090a0201090b0201090c0201090d02010a0002010a0102010a0202010a0302010a0402010a0502010a0602010a0702010a0802010a0902010a0a02010a0b02010a0c02010a0d02010b0002010b0102010b0202010b0302010b0402010b0502010b0602010b0702010b0802010b0902010b0a02010b0b02010b0c02010b0d02010c0102010c0202010c0302010c0402010c0502010c0602010c0702010c0802010c0902010c0a02010c0b02010c0c02010c0d02010d0102010d0202010d0302010d0402010d0502010d0602010d0702010d0802010d0902010d0a02010d0b02010d0c02010d0d02010e0102010e0202010e0302010e0402010e0502010e0602010e0702010e0802010e0902020e0a02010e0b02010e0c02010e0d02010f0202010f0302010f0402010f0502010f0602010f0702010f0802010f0902020f0a02010f0b02010f0c02010f0d020110020201100302011004020110050201100602011007020110090201100b0201100d0201110302011104020111050201110d0201120d0201130d");
        short[96] = SSTORE2.write(hex"01ffff72165fa0302010a0402010a0502000a0602000a0702000b0402010b0502010b0602000b0702000c0502000c0602000c0702000e0502000e0602000e0702000f0902001005020010060200100702001109020012050200120602001207020013080200130a020014080200140a020015070200150a02001609");
        short[97] = SSTORE2.write(hex"01fffa5e208d00000002010009020101070201010a020102030201020402010206020102070201020b0201030402010305020103060201030702010308020103090201030a0201030b02010405020104060201040702010408020104090201040a0201050002010501020105050201050602010507020105080201050902010602020106030201060502010606020106070201060802010702020107030201070502010706020107070201070802010803020108040201080502010806020108070201080802010903020109040201090502010906020109070201090802010a0302010a0402010a0502010a0602010a0702010a0802010a0a02010b0202010b0302010b0402010b0502010b0602010b0702010b0802010b0902010b0a02010c0102010c0402010c0502010c0602010c0702010c0802010d0502010d0602010d0702010d0802010e0402010e0502010e0602010e0702010e0802010f0502010f0602010f0702010f0802011004020110050201100602011007020110080201110102011102020111040201110502011106020111070201110802011203020112040201120502011206020112070201120802011303020113040201130502011306020113070201130802011309020114050201140602011407020114080201140902011505020115060201150702011508020115090201150a020116060201160702011608020116090201160a0201160b02011707020117090201170a0201170b0201170c020118070201180a0201180b0201180d0201190a02011a09");
        short[98] = SSTORE2.write(hex"01fff4e2997600000002000007020001050201010602010107020001080200010a020002060201020702010208020102090200020a02000302020003030200030702010308020103090200030a020004040200040502000408020104090200040a0200050602000509020006010200060202000603020006070200070402000705020008060200080702000a0602000a0702000b0302000b0402000b0502010b0602010b0702000b0802000c0002000c0102000c0202010c0302010c0402010c0502010c0602010c0702000c0802010d0102010d0202010d0302010d0402010d0502000d0602000d0702000e0002000e0102010e0202010e0302010e0402000e0502010f0102010f0202000f0302000f040200100002001001020010020200100702001106020111070200110802001205020112060201120702011208020012090200130402011305020113060201130702001308020113090200130a020014030201140402011405020114060200140702011408020114090200140a02001502020115030201150402011505020015060201150702011508020015090201160202011603020116040200160502011606020116070201160802001609020117030200170402011705020117060201170702001708020118060201180702001808");
        short[99] = SSTORE2.write(hex"01ffffe33016000000020000000200000102010100020101010200020002000201020103000201030102000400020004010201050002010501020006000200060102010700020107010200080002000801020109000201090102000a0002000a01");
        short[101] = SSTORE2.write(hex"02ff2b162aff1da0002010a0102010a0202020a0302010a0402010a0502010a0602020a0702010a0802010a0902010b0302010b0402010b0502010b0602020b0702010b0802010b0902020c0702010c0802010c0902010d0802010d09");
        short[102] = SSTORE2.write(hex"02ff5d9c9dff496e808d0000000201000602010007020100080201010502010106020101070201020402010205020102060201030302010304020103050202030602010402020104030201040402020405020104060201050102010502020105030202050402010505020105060201060102010602020106030201060402010605020206060201070102010702020107030201070402020705020107060201080002010801020108020201080302020804020108050201080602010901020109020201090302010904020109050202090602010a0002010a0102010a0202010a0302010a0402020a0502010a0602010b0102010b0202010b0302020b0402010b0502010b0602010c0002010c0102010c0202010c0302010c0402010c0502010c0602010d0102010d0202010d0302010d0402010d0502010d0602010d0702010e0102010e0202010e0302010e0402010e0502010e0602010e0702010e0802010f0002010f0202010f0302010f0402010f0502010f0602010f0702010f0802010f0902011002020110030201100402011005020110060201100702011008020110090201100a02011102020111030201110402011105020111060201110702011108020111090201110a0201110b0201110c020112020201120402011205020112060201120702011208020112090201120a0201120b0201120c0201120d0201130402011305020113060201130702011308020113090201130a0201130b0201130c0201130d0201140402011406020114080201140a0201140c0201150602011508");
        short[107] = SSTORE2.write(hex"03ff9d4911ffe5e5deffff0e0e3f00000002010000020000010201010002000101020101020200020102010202020102030201020902010300020003010201030202010303020103040201030502010306020103070201030802010309020004010201040202010403020104090201050002000501020105020201050302010600020006010201060202010603020106040201060b020107000200070102010702020107030201070a0201070b0200080102010802020108030202080a0202080b02000901020109020203090a0203090b02010a0002000a0102010a0202030a0a02030a0b02010b0002000b0102010b0202030b0a02030b0b02010c0002000c0102010c0202030c0a02030c0b");
        short[111] = SSTORE2.write(hex"02ffb7b7b7fff9f4f21600000002000001020001000201010102000102020002000202020102000202020003000202030102000302020004000202040102000402020005000202050102000502020006000202060102000602020007010200080102000901");
        short[121] = SSTORE2.write(hex"01ffc54e386100000002000001020000020200000302000100020001010200010202000103020001040200020102000202020002030200020402000205020003010201030202000303020003040200030502000401020104020200040302000404020004050200050102010502020005030200050402000505020006010201060202000603020006040200060502000701020107020200070302000704020007050200080102010802020008030200080402000805020009010201090202000903020009040200090502000a0102010a0202000a0302000a0402000a0502000b0102010b0202000b0302000b0402000b0502000c0102010c0202000c0302000c0402000c0502000d0102010d0202000d0302000d0402000d0502000e0102010e0202000e0302000e0402000e0502000f0102010f0202000f0302000f0402000f0502001001020010020200100302001004020010050200110002001101020011020200110302001104020011050200120102001202020012030200120402001205020013020200130302001304");
        short[123] = SSTORE2.write(hex"01ffd168215c00000002000003020000040200000502000101020001020200010302000104020001050201020102010202020002030200020402000205020103010200030202010303020003040200030502010401020004020201040302000404020004050201050102000502020105030200050402000505020106010200060202010603020006040200060502010701020007020201070302000704020007050201080102000802020108030200080402000805020109010200090202010903020009040200090502010a0102000a0202010a0302000a0402000a0502010b0102000b0202010b0302000b0402000b0502010c0102000c0202010c0302000c0402000c0502010d0102000d0202010d0302000d0402000d0502010e0102000e0202010e0302000e0402000e0502010f0002010f0102000f0202010f0302000f0402000f0502011000020010010201100202001003020010040200100502011100020111010201110202001103020011040200120202001203");
        short[137] = SSTORE2.write(hex"03ffe4a499fff9f4f2ffff82ad350000000201000102010002020100030201010102000102020101030201020102000202020102030201030002010301020003020201030302010400020204010200040202010403020105000202050102030502020105030201060002000601020306020201060302010700020007010203070202010703020108000202080102030802020108030201090002020901020009020201090302010a0002010a0102000a0202010a0302010b0102000b0202010b0302010c0102000c0202010c0302010d0102000d0202010d0302010e0102010e0202010e03");
        short[237] = SSTORE2.write(hex"01ffffffff1200000002010002020100040200010302000104020002030200020402010800020009010200090202010a0002000a0102000a02020110030200110402001105020012040200120502011303");
        short[239] = SSTORE2.write(hex"02ff61a84bff8ac1631f0000000201000e0202010d0201010e0201020e020103030202050302010504020205070201050b0201060302010604020207070201080102020900020109010202090c02010a0102010a0402010c0202010c1002020d0102010d0202020d0f02010d1002010e0202010e0702020e0b02010e1002021005020211070202110a");
        short[240] = SSTORE2.write(hex"01ffffffff0c000000020100000200010102000102020102000200020102000202020107030200080402000805020009040200090502010a03");
        short[244] = SSTORE2.write(hex"01ffffffff18000000020100090200000a0200000b0200010a0200010b020102090201090002000a0102000a0202000b0102000b0202010c0002011604020017050200170602011804020018050200180602011e0e02011f0d02001f0e02001f0f0200200e0200200f");
        short[245] = SSTORE2.write(hex"07ff7d7d7dff959595ff464646ff707070ffc2c2c2ffa1a1a180000000190200000201000e0201000f0201001002020013020200140201010c0201010d0201010e0201010f0201011002010111020201120202011302020114020201150201020c0201020d0201020e0201020f020102100202021102020212020202130202021402020215020003090200030a0200030b0200030c0200030d0200030e0200030f02000310020303110202031202020313020203140202031502000408020304090203040a0203040b0203040c0203040d0203040e0203040f020304100204041102030412020304130202041402020415020504160200050702030508020305090203050a0203050b0200050c0200050d0203050e0203050f02030510020405110204051202040513020305140205051502050516020006060203060702030608020306090203060a0200060b0200060c0200060d0200060e0203060f02030610020306110204061202030613020506140206061502050616020007060203070702000708020307090200070a0200070b0200070c0200070d0200070e0200070f020307100203071102030712020307130205071402060715020507160205071702000805020308060203080702030808020308090200080a0200080b0200080c0207080d0200080f020008100203081102030812020308130205081402060815020508160205081702000905020309060203090702030908020309090200090a0200090b0207090c0207090d020009100200091102030912020009130205091402060915020509160205091702000a0402030a0502030a0602030a0702030a0802030a0902000a0a02070a0c02070a0d02000a1002030a1102000a1202000a1302050a1402050a1502050a1602050a1702000b0402030b0502030b0602030b0702030b0802030b0902000b0a02070b0c02070b0d02000b1002030b1102030b1202000b1302050b1402060b1502050b1602050b1702000c0402030c0502030c0602030c0702030c0802030c0902000c0a02070c0c02070c0d02000c1002030c1102030c1202000c1302050c1402050c1502050c1602050c1702000d0402030d0502030d0602030d0702030d0802030d0902000d0a02070d0c02070d0d02000d1002000d1102030d1202000d1302000d1402050d1502050d1602050d1702000e0402030e0502030e0602030e0702030e0802030e0902000e0a02070e0c02070e0d02000e1002030e1102000e1202000e1302060e1502050e1602050e1702000f0402030f0502030f0602030f0702030f0802030f0902000f0a02070f0b02070f0c02070f0d02000f1002030f1102030f1202000f1302060f1502050f16020010030203100402031005020310060203100702031008020310090200100a0207100c0207100d02001010020010110200101202001013020010140206101502051016020011030203110402031105020311060203110702031108020311090200110a0207110c0207110d020011100203111102031112020011130206111502051116020012030203120402031205020312060203120702031208020312090200120a0207120c0207120d02001210020312110200121202001213020612150205121602051217020013030203130402031305020313060203130702031308020313090200130a0207130c0207130d0200131002001311020313120200131302001314020513150205131602051317020014030203140402031405020314060203140702031408020314090200140a0207140c0207140d02001410020314110203141202001413020514140206141502051416020514170200150102001502020315030203150402031505020315060203150702031508020315090200150a0200150b0207150c0207150d0200151002031511020315120200151302051514020615150205151602051517020016000203160102031602020316030203160402031605020316060203160702031608020316090203160a0200160b0200160c0207160d0200160f0203161002031611020316120200161302051614020516150205161602051617020017000203170102031702020317030200170402031705020317060203170702031708020017090203170a0203170b0200170c0207170d0200170e0200170f020317100203171102001712020017130205171402061715020517160200180102001802020018030200180402031805020318060203180702001808020318090203180a0203180b0200180c0200180d0200180e0200180f020318100200181102031812020018130205181402061815020518160205181702001905020319060203190702031908020319090200190a0203190b0203190c0200190d0200190e0200190f020019100203191102031912020319130205191402051915020519160205191702001a0602031a0702031a0802031a0902031a0a02031a0b02031a0c02001a0d02001a0e02001a0f02031a1002031a1102041a1202031a1302051a1402061a1502051a1602051a1702001b0702031b0802031b0902031b0a02031b0b02031b0c02031b0d02001b0e02031b0f02031b1002041b1102041b1202031b1302031b1402051b1502051b1602051b1702001c0802031c0902031c0a02031c0b02031c0c02031c0d02031c0e02031c0f02041c1002041c1102041c1202041c1302031c1402021c1502051c1602001d0902001d0a02031d0b02031d0c02031d0d02001d0e02041d0f02041d1002041d1102031d1202031d1302021d1402021d1502051d1602011e0a02001e0b02001e0c02001e0d02001e0e02031e0f02031e1002031e1102021e1202021e1302021e1402021e1502011f0a02011f0b02011f0c02011f0d02011f0e02021f0f02021f1002021f1102021f1202021f1302021f1402021f150201200b0201200c0201200d0202200f0202201002022011020220120202201302022014020220150202211002022111020221120202211302022114");
        short[246] = SSTORE2.write(hex"01ff555555290100000200000702000008020000090200000a0200000b0200000c0200000d0200000e0200000f020001060201010702010108020101090201010a0201010b0201010c0201010d0201010e0201010f020001100200011102000205020102060200020702010208020102090201020a0201020b0201020c0201020d0201020e0201020f0201021002010211020002120200030402010305020003060201030702010308020003090200030a0200030b0200030c0200030d0201030e0201030f02010310020003110200040402010405020004060200040702000408020004090200040a0200040b0200040c0200040d0200040e0201040f0201041002000411020005030201050402010505020005060200050702000508020005090200050e0201050f020105100200051102000603020106040200060502000606020006070200060e0200060f020106100200061102000702020107030201070402000705020007060200070e0201070f0200071002000711020008020201080302010804020008050200080e0201080f0201081002000811020009020201090302010904020009050200090e0201090f020109100200091102000a0202010a0302010a0402000a0502000a0e02000a0f02010a1002000a1102000b0202010b0302010b0402000b0502000b0e02010b0f02000b1002000b1102000c0202010c0302010c0402000c0502000c0e02010c0f02010c1002000c1102000d0102010d0202010d0302010d0402000d0502000d0e02000d0f02000d1002000d1102000e0102010e0202010e0302010e0402000e0502000e0e02010e0f02010e1002000e1102000f0102010f0202010f0302010f0402000f0502000f0e02010f0f02000f1002000f1102001001020110020201100302011004020010050200100e0200100f020110100200101102001101020111020201110302011104020011050200110e0201110f02011110020011110200120002011201020112020201120302011204020012050200120e0201120f02011210020012110200130002011301020113020201130302011304020013050200130d0201130e0201130f0201131002001311020014000201140102011402020114030201140402011405020014060200140d0201140e0201140f020014100200141102001501020015020201150302011504020115050200150602001507020015080200150c0201150d0201150e0200150f0201151002001511020016030201160402011605020116060201160702001608020016090200160a0200160b0200160c0200160d0200160e0201160f02011610020016110200170402011705020117060201170702011708020017090200170a0200170b0200170c0200170d0201170e0200170f020117100200171102001805020118060201180702011808020118090200180a0200180b0200180c0201180d0200180e0201180f0201181002001811020019060201190702011908020119090201190a0201190b0201190c0200190d0201190e0201190f02011910020119110200191202001a0702001a0802011a0902011a0a02011a0b02001a0c02011a0d02011a0e02011a0f02001a1002001a1102001b0902001b0a02001b0b02001b0c02001b0d02001b0e02001b0f");
        short[247] = SSTORE2.write(hex"02ff8ac163ffeceb80290100000200000702000008020000090200000a0200000b0200000c0200000d0200000e0200000f020001060201010702010108020101090201010a0201010b0201010c0201010d0201010e0201010f020001100200011102000205020102060200020702010208020102090201020a0201020b0201020c0201020d0201020e0201020f0201021002010211020002120200030402010305020003060201030702010308020003090200030a0200030b0200030c0200030d0201030e0201030f02010310020003110200040402010405020004060200040702000408020004090200040a0200040b0200040c0200040d0200040e0201040f0201041002000411020005030201050402010505020005060200050702000508020005090200050e0201050f020105100200051102000603020106040200060502000606020006070200060e0200060f020106100200061102000702020107030201070402000705020007060200070e0201070f0200071002000711020008020201080302010804020008050200080e0201080f0201081002000811020009020201090302010904020009050200090e0201090f020109100200091102000a0202010a0302010a0402000a0502000a0e02000a0f02010a1002000a1102000b0202010b0302010b0402000b0502000b0e02010b0f02000b1002000b1102000c0202010c0302010c0402000c0502000c0e02010c0f02010c1002000c1102000d0102010d0202010d0302010d0402000d0502000d0e02000d0f02000d1002000d1102000e0102010e0202020e0302010e0402000e0502000e0e02010e0f02010e1002000e1102000f0102010f0202020f0302010f0402000f0502000f0e02010f0f02000f1002000f1102001001020110020202100302011004020010050200100e0200100f020110100200101102001101020111020202110302011104020011050200110e0201110f02011110020011110200120002011201020112020201120302011204020012050200120e0201120f02011210020012110200130002011301020213020201130302011304020013050200130d0201130e0201130f0201131002001311020014000201140102011402020114030201140402011405020014060200140d0201140e0201140f020014100200141102001501020015020201150302011504020115050200150602001507020015080200150c0201150d0201150e0200150f0201151002001511020016030201160402011605020116060201160702001608020016090200160a0200160b0200160c0200160d0200160e0201160f02011610020016110200170402011705020117060201170702011708020017090200170a0200170b0200170c0200170d0201170e0200170f020117100200171102001805020118060201180702011808020118090200180a0200180b0200180c0201180d0200180e0201180f0201181002001811020019060201190702011908020119090201190a0201190b0201190c0200190d0201190e0201190f02011910020119110200191202001a0702001a0802011a0902011a0a02011a0b02001a0c02011a0d02011a0e02011a0f02001a1002001a1102001b0902001b0a02001b0b02001b0c02001b0d02001b0e02001b0f");
        short[248] = SSTORE2.write(hex"02ff8e4f49ffe6d3b1290100000200000702000008020000090200000a0200000b0200000c0200000d0200000e0200000f020001060201010702010108020101090201010a0201010b0201010c0201010d0201010e0201010f020001100200011102000205020102060200020702010208020102090201020a0201020b0201020c0201020d0201020e0201020f0201021002010211020002120200030402010305020003060201030702010308020003090200030a0200030b0200030c0200030d0201030e0201030f02010310020003110200040402010405020004060200040702000408020004090200040a0200040b0200040c0200040d0200040e0201040f0201041002000411020005030201050402010505020005060200050702000508020005090200050e0201050f020105100200051102000603020106040200060502000606020006070200060e0200060f020106100200061102000702020107030201070402000705020007060200070e0202070f0200071002000711020008020201080302010804020008050200080e0202080f0202081002000811020009020201090302010904020009050200090e0202090f020209100200091102000a0202010a0302010a0402000a0502000a0e02000a0f02020a1002000a1102000b0202010b0302010b0402000b0502000b0e02010b0f02000b1002000b1102000c0202010c0302010c0402000c0502000c0e02010c0f02010c1002000c1102000d0102010d0202010d0302010d0402000d0502000d0e02000d0f02000d1002000d1102000e0102010e0202010e0302010e0402000e0502000e0e02010e0f02010e1002000e1102000f0102010f0202010f0302010f0402000f0502000f0e02010f0f02000f1002000f1102001001020110020201100302011004020010050200100e0200100f020210100200101102001101020111020201110302011104020011050200110e0202110f02021110020011110200120002011201020112020201120302011204020012050200120e0202120f02021210020012110200130002011301020113020201130302011304020013050200130d0202130e0202130f0202131002001311020014000201140102011402020114030201140402011405020014060200140d0202140e0202140f020014100200141102001501020015020201150302011504020115050200150602001507020015080200150c0202150d0202150e0200150f0201151002001511020016030201160402011605020116060201160702001608020016090200160a0200160b0200160c0200160d0200160e0201160f02011610020016110200170402011705020117060201170702011708020017090200170a0200170b0200170c0200170d0201170e0200170f020117100200171102001805020118060201180702011808020118090200180a0200180b0200180c0201180d0200180e0201180f0201181002001811020019060201190702011908020119090201190a0201190b0201190c0200190d0201190e0201190f02011910020119110200191202001a0702001a0802011a0902011a0a02011a0b02001a0c02011a0d02011a0e02011a0f02001a1002001a1102001b0902001b0a02001b0b02001b0c02001b0d02001b0e02001b0f");
        short[249] = SSTORE2.write(hex"00080000000200000102000100020001010200030302000403020008010200090002000901");

        rects[17] = Rectangle(5, 14);
        rects[18] = Rectangle(5, 14);
        rects[19] = Rectangle(5, 14);
        rects[20] = Rectangle(5, 14);
        rects[21] = Rectangle(5, 14);
        rects[22] = Rectangle(5, 13);
        rects[23] = Rectangle(4, 14);
        rects[24] = Rectangle(5, 14);
        rects[25] = Rectangle(5, 14);
        rects[26] = Rectangle(5, 14);
        rects[27] = Rectangle(5, 14);
        rects[28] = Rectangle(5, 14);
        rects[29] = Rectangle(5, 14);
        rects[30] = Rectangle(5, 14);
        rects[31] = Rectangle(5, 12);
        rects[32] = Rectangle(7, 11);
        rects[33] = Rectangle(5, 14);
        rects[34] = Rectangle(5, 14);
        rects[35] = Rectangle(5, 14);
        rects[36] = Rectangle(5, 13);
        rects[37] = Rectangle(5, 14);
        rects[38] = Rectangle(5, 14);
        rects[39] = Rectangle(5, 12);
        rects[40] = Rectangle(4, 14);
        rects[41] = Rectangle(5, 13);
        rects[42] = Rectangle(5, 14);
        rects[43] = Rectangle(5, 14);
        rects[44] = Rectangle(6, 14);
        rects[45] = Rectangle(4, 14);
        rects[46] = Rectangle(6, 14);
        rects[47] = Rectangle(5, 14);
        rects[48] = Rectangle(4, 14);
        rects[49] = Rectangle(6, 14);
        rects[50] = Rectangle(4, 14);
        rects[51] = Rectangle(10, 9);
        rects[52] = Rectangle(6, 6);
        rects[53] = Rectangle(5, 7);
        rects[54] = Rectangle(15, 8);
        rects[55] = Rectangle(9, 20);
        rects[56] = Rectangle(10, 9);
        rects[57] = Rectangle(10, 8);
        rects[58] = Rectangle(14, 9);
        rects[59] = Rectangle(12, 9);
        rects[60] = Rectangle(11, 8);
        rects[61] = Rectangle(18, 9);
        rects[62] = Rectangle(13, 12);
        rects[63] = Rectangle(11, 8);
        rects[64] = Rectangle(10, 7);
        rects[65] = Rectangle(11, 5);
        rects[66] = Rectangle(11, 5);
        rects[67] = Rectangle(14, 9);
        rects[68] = Rectangle(8, 10);
        rects[69] = Rectangle(10, 7);
        rects[70] = Rectangle(3, 10);
        rects[71] = Rectangle(11, 5);
        rects[72] = Rectangle(10, 8);
        rects[73] = Rectangle(8, 9);
        rects[74] = Rectangle(8, 10);
        rects[75] = Rectangle(7, 9);
        rects[76] = Rectangle(14, 9);
        rects[77] = Rectangle(14, 9);
        rects[78] = Rectangle(5, 7);
        rects[79] = Rectangle(8, 9);
        rects[80] = Rectangle(7, 10);
        rects[81] = Rectangle(5, 7);
        rects[82] = Rectangle(10, 9);
        rects[83] = Rectangle(12, 9);
        rects[84] = Rectangle(10, 8);
        rects[85] = Rectangle(11, 12);
        rects[86] = Rectangle(7, 8);
        rects[87] = Rectangle(14, 9);
        rects[88] = Rectangle(11, 5);
        rects[89] = Rectangle(5, 7);
        rects[90] = Rectangle(18, 9);
        rects[91] = Rectangle(7, 7);
        rects[92] = Rectangle(11, 11);
        rects[93] = Rectangle(8, 10);
        rects[94] = Rectangle(8, 2);
        rects[95] = Rectangle(10, 9);
        rects[96] = Rectangle(5, 7);
        rects[97] = Rectangle(5, 7);
        rects[98] = Rectangle(6, 6);
        rects[99] = Rectangle(13, 12);
        rects[100] = Rectangle(8, 6);
        rects[101] = Rectangle(11, 5);
        rects[102] = Rectangle(10, 7);
        rects[103] = Rectangle(8, 6);
        rects[104] = Rectangle(4, 13);
        rects[105] = Rectangle(5, 12);
        rects[106] = Rectangle(10, 19);
        rects[107] = Rectangle(10, 20);
        rects[108] = Rectangle(25, 18);
        rects[109] = Rectangle(14, 26);
        rects[110] = Rectangle(18, 26);
        rects[111] = Rectangle(4, 20);
        rects[121] = Rectangle(7, 19);
        rects[122] = Rectangle(9, 20);
        rects[123] = Rectangle(7, 19);
        rects[124] = Rectangle(9, 20);
        rects[125] = Rectangle(8, 19);
        rects[126] = Rectangle(8, 19);
        rects[127] = Rectangle(9, 20);
        rects[128] = Rectangle(7, 20);
        rects[129] = Rectangle(8, 19);
        rects[130] = Rectangle(8, 18);
        rects[131] = Rectangle(8, 19);
        rects[132] = Rectangle(7, 20);
        rects[133] = Rectangle(8, 19);
        rects[134] = Rectangle(7, 20);
        rects[135] = Rectangle(9, 20);
        rects[136] = Rectangle(9, 20);
        rects[137] = Rectangle(9, 19);
        rects[138] = Rectangle(11, 17);
        rects[139] = Rectangle(11, 17);
        rects[140] = Rectangle(9, 15);
        rects[141] = Rectangle(10, 16);
        rects[142] = Rectangle(10, 15);
        rects[143] = Rectangle(10, 17);
        rects[144] = Rectangle(10, 15);
        rects[145] = Rectangle(11, 17);
        rects[146] = Rectangle(9, 16);
        rects[147] = Rectangle(9, 15);
        rects[148] = Rectangle(11, 16);
        rects[149] = Rectangle(9, 17);
        rects[150] = Rectangle(10, 16);
        rects[151] = Rectangle(11, 15);
        rects[152] = Rectangle(10, 16);
        rects[153] = Rectangle(11, 15);
        rects[154] = Rectangle(10, 16);
        rects[155] = Rectangle(10, 16);
        rects[156] = Rectangle(11, 17);
        rects[157] = Rectangle(9, 16);
        rects[158] = Rectangle(9, 17);
        rects[159] = Rectangle(9, 15);
        rects[160] = Rectangle(11, 17);
        rects[161] = Rectangle(9, 15);
        rects[162] = Rectangle(7, 16);
        rects[163] = Rectangle(10, 17);
        rects[164] = Rectangle(11, 17);
        rects[165] = Rectangle(11, 17);
        rects[166] = Rectangle(10, 16);
        rects[167] = Rectangle(9, 16);
        rects[237] = Rectangle(9, 2);
        rects[238] = Rectangle(4, 4);
        rects[239] = Rectangle(7, 12);
        rects[240] = Rectangle(12, 2);
        rects[241] = Rectangle(6, 12);
        rects[242] = Rectangle(7, 19);
        rects[243] = Rectangle(3, 11);
        rects[244] = Rectangle(2, 3);
        rects[245] = Rectangle(1, 7);
        rects[246] = Rectangle(4, 9);
        rects[247] = Rectangle(4, 9);
        rects[248] = Rectangle(4, 9);
        rects[249] = Rectangle(13, 12);
        rects[250] = Rectangle(11, 17);
        rects[252] = Rectangle(11, 17);
        rects[253] = Rectangle(10, 15);
    }
}

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

import "../lib/SSTORE2.sol";
import "../Rectangle.sol";

import "../ICrypToadzFeatureBuilder.sol";

contract CrypToadzBuilderTall is ICrypToadzFeatureBuilder {
    mapping(uint8 => address) tall;
    mapping(uint8 => Rectangle) rects;

    function get(uint8 key) external view returns (address) {
        return tall[key];
    }

    function getRect(uint8 key) external view returns (Rectangle memory) {
        return rects[key];
    }
    
    constructor() {
        tall[17] = SSTORE2.write(hex"04fffffffffffff0eefff7e3d8ffff0e0e970100000200000d0200000e0200000f0200010c0201010d0202010e0201010f02000110020001120200020b0202020c0201020d0201020e0201020f0201021002000211020102120200021302000305020003060200030702000308020003090200030a0200030b0200030c0200030d0201030e0201030f020203100200031102010312020003130200040402010405020304060203040702030408020104090201040a0201040b0201040c0201040d0200040e0201040f0201041002000411020104120200041302000502020005030201050402010505020305060200050702030508020105090201050a0201050b0202050c0201050d0201050e0200050f020105100201051102010512020005130200060102010602020206030204060402010605020306060200060702030608020106090201060a0202060b0201060c0201060d0201060e0201060f02000610020106110201061202000613020007000201070102010702020207030204070402010705020307060200070702030708020107090201070a0201070b0201070c0202070d0201070e0201070f02010710020007110201071202000713020008000201080102010802020208030204080402010805020308060200080702030808020108090201080a0201080b0201080c0201080d0201080e0201080f02010810020008110201081202000813020009000201090102010902020209030203090402010905020309060200090702030908020109090201090a0201090b0200090c0201090d0201090e0201090f0201091002000911020009120200091302000a0002010a0102010a0202020a0302030a0402010a0502030a0602000a0702030a0802010a0902010a0a02010a0b02000a0c02000a0d02000a0e02000a0f02000a1002000a1102010a1202000a1302000b0002010b0102010b0202010b0302010b0402010b0502030b0602000b0702030b0802010b0902010b0a02010b0b02010b0c02010b0d02010b0e02010b0f02010b1002010b1102010b1202000b1302000c0002010c0102010c0202020c0302040c0402010c0502030c0602000c0702030c0802010c0902010c0a02010c0b02000c0c02000c0d02000c0e02000c0f02000c1002000c1102000c1202000c1302000d0002020d0102010d0202020d0302040d0402010d0502030d0602000d0702030d0802010d0902010d0a02010d0b02010d0c02010d0d02010d0e02010d0f02010d1002010d1102010d1202000d1302000e0002010e0102010e0202020e0302040e0402010e0502030e0602000e0702030e0802010e0902010e0a02010e0b02000e0c02000e0d02000e0e02000e0f02000e1002000e1102010e1202000e1302000f0002010f0102010f0202020f0302030f0402010f0502030f0602000f0702030f0802010f0902010f0a02010f0b02000f0c02010f0d02010f0e02010f0f02010f1002000f1102000f1202000f13020010000201100102011002020210030203100402011005020310060200100702031008020110090201100a0201100b0201100c0201100d0201100e0201100f02011010020010110201101202001013020011000201110102021102020111030201110402011105020311060200110702031108020111090201110a0201110b0201110c0202110d0201110e0201110f02021110020011110201111202001113020012000201120102011202020212030201120402011205020312060203120702031208020112090202120a0201120b0201120c0201120d0201120e0201120f020112100200121102011212020012130200130102011302020113030201130402011305020113060201130702011308020113090201130a0201130b0202130c0201130d0201130e0201130f0200131002011311020113120200131302001402020014030201140402011405020214060201140702011408020114090202140a0201140b0201140c0201140d0201140e0200140f020114100200141102011412020014130200150402001505020015060200150702001508020015090200150a0200150b0200150c0200150d0200150e0201150f020115100200151102011512020015130200160a0201160b0201160c0202160d0201160e0201160f020116100200161102011612020016130200170b0201170c0201170d0201170e0202170f0201171002011711020017120200180c0202180d0201180e0201180f02011810020018110200190d0200190e0200190f02001910");
        tall[18] = SSTORE2.write(hex"03fffff0eeffe1c3c3ffbca199970100000200000d0200000e0200000f0200010c0201010d0202010e0201010f02000110020001120200020b0202020c0201020d0201020e0201020f0201021002000211020102120200021302000305020003060200030702000308020003090200030a0200030b0200030c0201030d0202030e0201030f020203100200031102010312020003130200040402010405020204060202040702020408020104090201040a0201040b0201040c0200040d0200040e0201040f0201041002000411020104120200041302000502020005030201050402010505020205060203050702020508020105090201050a0201050b0201050c0201050d0201050e0200050f020105100201051102010512020005130200060102010602020306030200060402010605020206060203060702020608020106090201060a0201060b0201060c0202060d0201060e0201060f02000610020106110201061202000613020007000201070102020702020307030200070402010705020207060203070702020708020107090201070a0201070b0201070c0201070d0201070e0201070f02010710020007110201071202000713020008000201080102010802020308030200080402010805020208060203080702020808020108090201080a0201080b0201080c0201080d0201080e0201080f02010810020008110201081202000813020009000202090102010902020309030202090402010905020209060203090702020908020109090201090a0201090b0200090c0201090d0201090e0201090f0201091002000911020009120200091302000a0002010a0102010a0202030a0302020a0402010a0502020a0602030a0702020a0802010a0902010a0a02010a0b02010a0c02000a0d02000a0e02000a0f02000a1002000a1102010a1202000a1302000b0002010b0102010b0202010b0302010b0402010b0502020b0602030b0702020b0802010b0902010b0a02010b0b02010b0c02010b0d02010b0e02010b0f02010b1002010b1102010b1202000b1302000c0002020c0102010c0202030c0302000c0402010c0502020c0602030c0702020c0802010c0902010c0a02010c0b02000c0c02000c0d02000c0e02000c0f02000c1002000c1102000c1202000c1302000d0002010d0102010d0202030d0302000d0402010d0502020d0602030d0702020d0802010d0902010d0a02010d0b02010d0c02010d0d02010d0e02010d0f02010d1002010d1102010d1202000d1302000e0002010e0102020e0202030e0302000e0402010e0502020e0602030e0702020e0802010e0902010e0a02010e0b02010e0c02000e0d02000e0e02000e0f02000e1002000e1102010e1202000e1302000f0002010f0102010f0202030f0302020f0402010f0502020f0602030f0702020f0802010f0902010f0a02010f0b02000f0c02010f0d02010f0e02010f0f02010f1002000f1102000f1202000f13020010000202100102011002020310030202100402011005020210060203100702021008020110090201100a0201100b0201100c0201100d0201100e0201100f02011010020010110201101202001013020011000201110102011102020111030201110402011105020211060203110702021108020111090201110a0201110b0201110c0201110d0201110e0202110f02011110020011110201111202001113020012000201120102011202020112030201120402011205020212060202120702021208020112090201120a0202120b0201120c0201120d0201120e0201120f020112100200121102011212020012130200130102011302020113030202130402011305020113060201130702011308020113090201130a0201130b0201130c0202130d0201130e0201130f0200131002011311020113120200131302001402020014030201140402011405020214060201140702011408020114090201140a0201140b0201140c0201140d0201140e0200140f020114100200141102011412020014130200150402001505020015060200150702001508020015090200150a0200150b0200150c0200150d0200150e0201150f020115100200151102011512020015130200160a0201160b0201160c0202160d0201160e0201160f020116100200161102011612020016130200170b0201170c0201170d0201170e0202170f0201171002011711020017120200180c0201180d0201180e0201180f02011810020018110200190d0200190e0200190f02001910");
        tall[20] = SSTORE2.write(hex"03fffff0eeffb8a6baffecddf5970100000200000d0200000e0200000f0200010c0201010d0202010e0201010f02000110020001120200020b0202020c0201020d0202020e0203020f0202021002000211020202120200021302000305020003060200030702000308020003090200030a0200030b0200030c0200030d0202030e0201030f020203100200031102020312020003130200040402030405020204060203040702020408020104090202040a0201040b0202040c0201040d0200040e0201040f0202041002000411020204120200041302000502020005030202050402030505020205060200050702020508020105090202050a0203050b0202050c0201050d0202050e0200050f020205100201051102020512020005130200060102020602020306030201060402030605020206060200060702020608020106090202060a0201060b0202060c0203060d0202060e0201060f02000610020106110202061202000613020007000201070102020702020307030201070402030705020207060200070702020708020307090202070a0201070b0202070c0201070d0202070e0201070f02020710020007110202071202000713020008000203080102020802020308030201080402030805020208060200080702020808020108090202080a0201080b0202080c0203080d0202080e0201080f02020810020008110202081202000813020009000201090102020902020309030200090402030905020209060200090702020908020109090202090a0201090b0202090c0201090d0202090e0200090f0202091002000911020009120200091302000a0002010a0102020a0202030a0302010a0402030a0502020a0602000a0702020a0802010a0902020a0a02030a0b02020a0c02010a0d02020a0e02030a0f02000a1002000a1102020a1202000a1302000b0002010b0102020b0202010b0302020b0402030b0502020b0602000b0702020b0802010b0902020b0a02010b0b02020b0c02010b0d02020b0e02010b0f02020b1002010b1102020b1202000b1302000c0002010c0102020c0202030c0302000c0402030c0502020c0602000c0702020c0802010c0902020c0a02010c0b02020c0c02010c0d02020c0e02000c0f02000c1002000c1102000c1202000c1302000d0002030d0102020d0202030d0302010d0402030d0502020d0602000d0702020d0802030d0902020d0a02010d0b02020d0c02010d0d02020d0e02010d0f02020d1002010d1102020d1202000d1302000e0002010e0102020e0202030e0302010e0402030e0502020e0602000e0702020e0802010e0902020e0a02010e0b02020e0c02010e0d02020e0e02010e0f02000e1002000e1102020e1202000e1302000f0002010f0102020f0202030f0302010f0402030f0502020f0602000f0702020f0802010f0902020f0a02010f0b02020f0c02010f0d02020f0e02000f0f02020f1002000f1102000f1202000f13020010000203100102021002020310030201100402031005020210060200100702021008020110090202100a0201100b0202100c0203100d0202100e0201100f02021010020010110202101202001013020011000201110102021102020111030202110402031105020211060200110702021108020111090202110a0201110b0202110c0201110d0202110e0201110f02021110020011110202111202001113020012000201120102021202020312030202120402031205020212060200120702021208020112090202120a0203120b0202120c0201120d0202120e0203120f020212100200121102021212020012130200130102021302020113030202130402031305020213060203130702021308020313090202130a0201130b0202130c0203130d0202130e0201130f0200131002011311020213120200131302001402020014030202140402031405020214060201140702021408020114090202140a0201140b0202140c0201140d0202140e0200140f020214100200141102021412020014130200150402001505020015060200150702001508020015090200150a0200150b0200150c0200150d0200150e0201150f020215100200151102021512020015130200160a0201160b0202160c0203160d0202160e0201160f020216100200161102021612020016130200170b0202170c0201170d0202170e0203170f0202171002011711020017120200180c0203180d0202180e0201180f02021810020018110200190d0200190e0200190f02001910");
        tall[21] = SSTORE2.write(hex"08ff51410eff996a0eff674d54ffd8c792ff170e0fffd15907ffffe330ff9a920a970100000200000d0200000e0200000f0200010c0201010d0201010e0202010f02000110020001120200020b0201020c0201020d0202020e0202020f0202021002000211020202120200021302000305020003060200030702000308020003090200030a0200030b0200030c0201030d0201030e0202030f020103100200031102020312020003130200040402020405020304060203040702030408020404090204040a0204040b0204040c0200040d0200040e0202040f0202041002000411020204120200041302000502020005030202050402020505020305060200050702030508020405090204050a0204050b0204050c0204050d0204050e0200050f020205100202051102020512020005130200060102020602020106030205060402010605020306060200060702030608020406090204060a0204060b0204060c0204060d0204060e0204060f02000610020206110202061202000613020007000202070102020702020107030205070402010705020307060200070702030708020407090204070a0204070b0204070c0204070d0204070e0204070f02040710020007110202071202000713020008000202080102020802020108030206080402010805020308060200080702030808020408090204080a0204080b0204080c0204080d0204080e0204080f02040810020008110202081202000813020009000201090102020902020109030207090402010905020309060200090702030908020409090204090a0204090b0200090c0204090d0204090e0204090f0204091002000911020009120200091302000a0002010a0102010a0202010a0302080a0402010a0502030a0602000a0702030a0802040a0902040a0a02040a0b02040a0c02000a0d02000a0e02000a0f02000a1002000a1102020a1202000a1302000b0002010b0102010b0202020b0302020b0402020b0502030b0602000b0702030b0802040b0902040b0a02040b0b02020b0c02020b0d02020b0e02020b0f02020b1002020b1102020b1202000b1302000c0002010c0102020c0202010c0302050c0402010c0502030c0602000c0702030c0802040c0902040c0a02040c0b02000c0c02000c0d02000c0e02000c0f02000c1002000c1102000c1202000c1302000d0002010d0102020d0202010d0302050d0402010d0502030d0602000d0702030d0802040d0902040d0a02040d0b02020d0c02020d0d02020d0e02020d0f02020d1002020d1102020d1202000d1302000e0002010e0102020e0202010e0302060e0402010e0502030e0602000e0702030e0802040e0902040e0a02040e0b02040e0c02000e0d02000e0e02000e0f02000e1002000e1102020e1202000e1302000f0002020f0102020f0202010f0302070f0402010f0502030f0602000f0702030f0802040f0902040f0a02040f0b02000f0c02040f0d02040f0e02040f0f02040f1002000f1102000f1202000f13020010000202100102021002020110030208100402011005020310060200100702031008020410090204100a0204100b0204100c0204100d0204100e0204100f02041010020010110202101202001013020011000201110102021102020211030202110402021105020311060200110702031108020411090204110a0204110b0204110c0204110d0204110e0204110f02041110020011110202111202001113020012000202120102021202020212030201120402021205020312060203120702031208020412090204120a0204120b0204120c0204120d0204120e0204120f020412100200121102021212020012130200130102011302020213030202130402021305020213060202130702021308020113090202130a0202130b0204130c0204130d0204130e0204130f0200131002021311020213120200131302001402020014030202140402021405020114060202140702021408020214090202140a0201140b0202140c0202140d0202140e0200140f020214100200141102021412020014130200150402001505020015060200150702001508020015090200150a0200150b0200150c0200150d0200150e0202150f020215100200151102021512020015130200160a0201160b0201160c0201160d0202160e0202160f020216100200161102021612020016130200170b0201170c0202170d0202170e0201170f0202171002021711020017120200180c0201180d0202180e0202180f02021810020018110200190d0200190e0200190f02001910");
        tall[22] = SSTORE2.write(hex"07ff7d5799ff714b8dfff38b7cffd26451ffe8705bfff9f4f2fffff0eea80100000200000e0200000f020000100200010d0201010e0201010f0201011002000111020001130200020c0201020d0201020e0201020f0202021002010211020002120203021302000214020003060200030702000308020003090200030a0200030b0200030c0200030d0200030e0201030f020103100201031102000312020303130200031402000405020304060204040702040408020404090203040a0203040b0203040c0203040d0203040e0200040f020104100202041102000412020304130200041402000502020005030200050402030505020305060204050702000508020405090203050a0203050b0203050c0203050d0203050e0203050f02000510020105110201051202030513020005140200060102010602020306030204060402000605020506060204060702000608020406090203060a0203060b0203060c0203060d0203060e0203060f0203061002000611020106120203061302000614020007000201070102010702020307030204070402000705020507060204070702000708020407090203070a0203070b0203070c0203070d0203070e0203070f0203071002030711020007120203071302000714020008000201080102010802020308030204080402000805020508060204080702060808020408090203080a0203080b0203080c0200080d0203080e0203080f0203081002030811020008120203081302000814020009000201090102010902020109030204090402070905020509060204090702060908020409090203090a0203090b0203090c0201090d0200090e0200090f020009100200091102000912020009130200091402000a0002010a0102020a0202010a0302040a0402070a0502050a0602040a0702000a0802040a0902030a0a02030a0b02030a0c02010a0d02010a0e02010a0f02010a1002010a1102030a1202030a1302000a1402000b0002010b0102010b0202020b0302030b0402030b0502030b0602040b0702000b0802040b0902030b0a02030b0b02030b0c02010b0d02010b0e02010b0f02010b1002010b1102030b1202030b1302000b1402000c0002010c0102010c0202020c0302030c0402030c0502030c0602040c0702000c0802040c0902030c0a02030c0b02030c0c02000c0d02000c0e02000c0f02000c1002000c1102000c1202000c1302000c1402000d0002010d0102020d0202010d0302040d0402000d0502050d0602040d0702000d0802040d0902030d0a02030d0b02030d0c02010d0d02010d0e02010d0f02010d1002010d1102030d1202030d1302000d1402000e0002010e0102010e0202030e0302040e0402000e0502050e0602040e0702060e0802040e0902030e0a02030e0b02030e0c02010e0d02010e0e02010e0f02010e1002010e1102030e1202030e1302000e1402000f0002010f0102010f0202030f0302040f0402000f0502050f0602040f0702060f0802040f0902030f0a02030f0b02030f0c02010f0d02000f0e02000f0f02000f1002000f1102000f1202000f1302000f14020010000201100102011002020310030204100402071005020510060204100702001008020410090203100a0203100b0203100c0200100d0203100e0203100f0203101002031011020010120203101302001014020011000201110102011102020311030204110402071105020511060204110702001108020411090203110a0203110b0203110c0203110d0203110e0203110f0203111002031111020011120203111302001114020012000202120102011202020112030203120402031205020312060204120702041208020412090203120a0203120b0203120c0203120d0203120e0203120f02031210020112110200121202031213020012140200130102011302020113030201130402011305020213060203130702031308020313090203130a0203130b0203130c0203130d0203130e0203130f020113100200131102011312020313130200131402001402020014030201140402011405020114060201140702011408020114090201140a0201140b0201140c0201140d0201140e0201140f02001410020114110200141202031413020014140200150402001505020015060200150702001508020015090200150a0200150b0200150c0200150d0200150e0200150f02011510020215110200151202031513020015140200160b0201160c0201160d0201160e0202160f02011610020116110200161202031613020016140200170c0202170d0201170e0201170f020117100201171102011712020017130200180d0201180e0201180f0202181002011811020018120200190e0200190f0200191002001911");
        tall[23] = SSTORE2.write(hex"07fff5f48bffdddb3bffc4da53ff909b0efff78a18ffff0e0efff9f4f2ce0100000200000c0200000d0200000e0200000f0200010a0200010b0201010c0201010d0202010e0203010f0200011002000111020002090203020a0202020b0203020c0204020d0203020e0203020f0204021002030211020002120200030402000305020003060200030702000308020003090200030a0200030b0200030c0200030d0200030e0202030f0203031002030311020303120200031302000402020004030200040402030405020204060203040702030408020204090203040a0203040b0202040c0203040d0203040e0200040f020304100200041102000412020004130200050102020502020305030203050402010505020105060203050702030508020305090204050a0203050b0203050c0203050d0203050e0203050f02000510020005110203051202000513020006000203060102010602020306030203060402010605020106060203060702020608020306090203060a0202060b0203060c0203060d0204060e0203060f02030610020006110203061202000613020007000203070102030702020407030205070402010705020607060206070702060708020307090203070a0203070b0203070c0203070d0203070e0203070f02030710020007110203071202000713020008000203080102030802020408030200080402030805020608060200080702060808020308090203080a0203080b0203080c0203080d0200080e0203080f02030810020008110203081202000813020009000202090102030902020409030200090402030905020609060207090702060908020309090203090a0203090b0203090c0203090d0203090e0200090f0200091002000911020009120200091302000a0002030a0102030a0202040a0302000a0402030a0502060a0602000a0702060a0802030a0902030a0a02030a0b02030a0c02030a0d02030a0e02010a0f02010a1002010a1102030a1202000a1302000b0002030b0102030b0202040b0302050b0402030b0502060b0602070b0702060b0802030b0902030b0a02030b0b02030b0c02030b0d02030b0e02030b0f02030b1002030b1102030b1202000b1302000c0002020c0102030c0202030c0302030c0402030c0502060c0602000c0702060c0802030c0902030c0a02030c0b02030c0c02000c0d02030c0e02030c0f02030c1002030c1102030c1202000c1302000d0002030d0102030d0202040d0302050d0402030d0502060d0602070d0702060d0802030d0902030d0a02030d0b02030d0c02030d0d02000d0e02000d0f02000d1002000d1102000d1202000d1302000e0002030e0102030e0202040e0302000e0402030e0502060e0602000e0702060e0802030e0902030e0a02030e0b02030e0c02030e0d02030e0e02010e0f02010e1002010e1102030e1202000e1302000f0002020f0102030f0202040f0302000f0402030f0502060f0602070f0702060f0802030f0902030f0a02030f0b02030f0c02030f0d02030f0e02030f0f02030f1002030f1102030f1202000f13020010000203100102031002020410030200100402011005020610060200100702061008020310090203100a0203100b0203100c0203100d0203100e0203100f02031010020310110203101202001013020011000203110102031102020411030205110402011105020611060206110702061108020311090203110a0203110b0203110c0203110d0200110e0200110f02001110020011110200111202001113020012000203120102031202020312030203120402011205020112060203120702031208020312090202120a0203120b0204120c0203120d0203120e0202120f02031210020012110203121202001213020013000203130102021302020313030203130402031305020213060203130702031308020313090203130a0203130b0203130c0203130d0203130e0203130f02031310020013110203131202001313020014000203140102031402020414030202140402031405020314060203140702021408020314090204140a0203140b0202140c0203140d0203140e0204140f020314100200141102031412020014130200150102031502020315030203150402031505020215060201150702011508020115090201150a0201150b0203150c0201150d0203150e0203150f0200151002001511020315120200151302001602020016030200160402031605020316060203160702031608020216090203160a0203160b0203160c0203160d0203160e0200160f020316100200161102001612020016130200170402001705020017060200170702001708020017090200170a0200170b0200170c0200170d0200170e0203170f02031710020317110203171202001713020018090203180a0202180b0203180c0203180d0203180e0202180f02031810020418110203181202001813020019090203190a0203190b0203190c0204190d0203190e0203190f02031910020319110200191202001a0a02031a0b02021a0c02031a0d02031a0e02031a0f02001a1002001a1102001b0b02001b0c02001b0d02001b0e02001b0f");
        tall[24] = SSTORE2.write(hex"04ffc4da53ff909b0eff80a72dffffe330970100000200000d0200000e0200000f0200010c0201010d0202010e0201010f02000110020001120200020b0201020c0201020d0201020e0201020f0201021002000211020102120200021302000305020003060200030702000308020003090200030a0200030b0200030c0200030d0202030e0201030f020203100200031102010312020003130200040402010405020304060203040702030408020104090201040a0201040b0201040c0201040d0200040e0201040f0201041002000411020104120200041302000502020005030201050402010505020305060200050702030508020105090201050a0202050b0201050c0201050d0201050e0200050f020105100201051102010512020005130200060102010602020306030200060402010605020306060200060702030608020106090201060a0201060b0202060c0201060d0201060e0201060f02000610020106110201061202000613020007000201070102010702020307030200070402010705020307060200070702030708020107090201070a0201070b0201070c0201070d0201070e0201070f02010710020007110201071202000713020008000202080102010802020308030200080402010805020308060200080702030808020108090201080a0201080b0201080c0201080d0201080e0201080f02010810020008110201081202000813020009000202090102010902020309030204090402010905020309060200090702030908020109090201090a0201090b0200090c0201090d0201090e0201090f0201091002000911020009120200091302000a0002020a0102010a0202030a0302040a0402010a0502030a0602000a0702030a0802010a0902010a0a02010a0b02010a0c02000a0d02000a0e02000a0f02000a1002000a1102010a1202000a1302000b0002020b0102010b0202010b0302010b0402010b0502030b0602000b0702030b0802010b0902010b0a02010b0b02010b0c02010b0d02010b0e02010b0f02010b1002010b1102010b1202000b1302000c0002020c0102010c0202030c0302000c0402010c0502030c0602000c0702030c0802010c0902010c0a02010c0b02000c0c02000c0d02000c0e02000c0f02000c1002000c1102000c1202000c1302000d0002020d0102010d0202030d0302000d0402010d0502030d0602000d0702030d0802010d0902010d0a02010d0b02010d0c02010d0d02010d0e02010d0f02010d1002010d1102010d1202000d1302000e0002020e0102010e0202030e0302000e0402010e0502030e0602000e0702030e0802010e0902010e0a02010e0b02010e0c02000e0d02000e0e02000e0f02000e1002000e1102010e1202000e1302000f0002020f0102010f0202030f0302040f0402010f0502030f0602000f0702030f0802010f0902010f0a02010f0b02000f0c02010f0d02010f0e02010f0f02010f1002000f1102000f1202000f13020010000202100102011002020310030204100402011005020310060200100702031008020110090201100a0201100b0201100c0201100d0201100e0201100f02011010020010110201101202001013020011000201110102011102020111030201110402011105020311060200110702031108020111090201110a0201110b0201110c0201110d0201110e0201110f02011110020011110201111202001113020012000202120102021202020212030201120402011205020312060203120702031208020112090202120a0201120b0201120c0201120d0201120e0201120f020112100200121102011212020012130200130102021302020113030201130402011305020113060201130702011308020113090201130a0201130b0202130c0201130d0201130e0201130f0200131002011311020113120200131302001402020014030202140402011405020214060201140702021408020114090202140a0201140b0201140c0201140d0201140e0200140f020114100200141102011412020014130200150402001505020015060200150702001508020015090200150a0200150b0200150c0200150d0200150e0201150f020115100200151102011512020015130200160a0201160b0201160c0202160d0201160e0201160f020116100200161102011612020016130200170b0201170c0201170d0201170e0202170f0201171002011711020017120200180c0201180d0201180e0201180f02011810020018110200190d0200190e0200190f02001910");
        tall[25] = SSTORE2.write(hex"04ffeebbaaffddaaaafffff0eefff38b7c970100000200000d0200000e0200000f0200010c0201010d0202010e0201010f02000110020001120200020b0201020c0201020d0201020e0201020f0201021002000211020302120200021302000305020003060200030702000308020003090200030a0200030b0200030c0200030d0202030e0201030f020203100200031102030312020003130200040402010405020404060204040702040408020204090201040a0201040b0201040c0202040d0200040e0201040f0201041002000411020304120200041302000502020005030201050402010505020405060200050702040508020105090201050a0201050b0201050c0201050d0201050e0200050f020105100202051102030512020005130200060102010602020406030200060402010605020406060200060702040608020106090201060a0202060b0201060c0201060d0201060e0201060f02000610020206110203061202000613020007000201070102020702020407030200070402010705020407060200070702040708020107090202070a0201070b0201070c0202070d0201070e0201070f02010710020007110203071202000713020008000201080102010802020408030200080402010805020408060200080702040808020108090201080a0201080b0201080c0201080d0201080e0202080f02010810020008110203081202000813020009000201090102010902020409030202090402010905020409060200090702040908020109090201090a0200090b0201090c0201090d0201090e0201090f0201091002000911020009120200091302000a0002010a0102010a0202040a0302020a0402010a0502040a0602000a0702040a0802010a0902010a0a02010a0b02000a0c02000a0d02000a0e02000a0f02000a1002000a1102030a1202000a1302000b0002010b0102010b0202010b0302010b0402010b0502040b0602000b0702040b0802010b0902010b0a02010b0b02010b0c02010b0d02010b0e02010b0f02020b1002030b1102030b1202000b1302000c0002010c0102010c0202040c0302000c0402010c0502040c0602000c0702040c0802010c0902010c0a02000c0b02000c0c02000c0d02000c0e02000c0f02000c1002000c1102000c1202000c1302000d0002020d0102010d0202040d0302000d0402010d0502040d0602000d0702040d0802010d0902010d0a02010d0b02010d0c02010d0d02010d0e02010d0f02020d1002030d1102030d1202000d1302000e0002010e0102010e0202040e0302000e0402010e0502040e0602000e0702040e0802010e0902010e0a02010e0b02000e0c02000e0d02000e0e02000e0f02000e1002000e1102030e1202000e1302000f0002010f0102010f0202040f0302020f0402010f0502040f0602000f0702040f0802010f0902010f0a02000f0b02010f0c02010f0d02010f0e02020f0f02010f1002000f1102000f1202000f13020010000201100102011002020410030202100402011005020410060200100702041008020110090201100a0201100b0201100c0201100d0201100e0201100f02011010020010110203101202001013020011000201110102021102020111030201110402011105020411060200110702041108020111090201110a0201110b0201110c0202110d0201110e0201110f02011110020011110203111202001113020012000201120102011202020112030201120402011205020412060204120702041208020112090201120a0201120b0202120c0201120d0201120e0202120f020112100200121102031212020012130200130102011302020113030202130402011305020113060201130702011308020113090201130a0201130b0201130c0201130d0201130e0201130f0200131002021311020313120200131302001402020014030201140402011405020214060201140702011408020214090201140a0201140b0201140c0201140d0201140e0200140f020114100200141102031412020014130200150402001505020015060200150702001508020015090200150a0200150b0200150c0200150d0200150e0201150f020215100200151102031512020015130200160a0202160b0201160c0201160d0202160e0201160f020116100200161102031612020016130200170b0201170c0201170d0201170e0202170f0201171002011711020017120200180c0202180d0201180e0201180f02011810020018110200190d0200190e0200190f02001910");
        tall[26] = SSTORE2.write(hex"02ff72b802ffb0e111980100000201000d0201000e0201000f0201010c0202010d0202010e0202010f02010110020101120201020b0202020c0202020d0202020e0202020f0202021002010211020202120201021302010305020103060201030702010308020103090201030a0201030b0201030c0202030d0202030e0202030f02020310020103110202031202010313020104030201040402020405020204060202040702020408020204090202040a0202040b0202040c0201040d0201040e0202040f0202041002010411020204120201041302010502020205030202050402020505020205060202050702020508020205090202050a0202050b0202050c0202050d0202050e0201050f020205100202051102020512020105130201060102020602020206030202060402020605020206060201060702020608020206090202060a0202060b0202060c0202060d0202060e0202060f02010610020206110202061202010613020107000202070102020702020207030202070402020705020207060201070702020708020207090202070a0202070b0202070c0202070d0202070e0202070f02020710020107110202071202010713020108000202080102020802020108030201080402020805020208060201080702020808020208090202080a0202080b0202080c0202080d0202080e0202080f02020810020108110202081202010813020109000202090102020902020209030202090402020905020209060201090702020908020209090202090a0202090b0201090c0202090d0202090e0202090f0202091002010911020109120201091302010a0002020a0102020a0202020a0302020a0402020a0502020a0602010a0702020a0802020a0902020a0a02020a0b02020a0c02010a0d02010a0e02010a0f02010a1002010a1102020a1202010a1302010b0002020b0102020b0202020b0302020b0402020b0502020b0602010b0702020b0802020b0902020b0a02020b0b02020b0c02020b0d02020b0e02020b0f02020b1002020b1102020b1202010b1302010c0002020c0102020c0202020c0302020c0402020c0502020c0602010c0702020c0802020c0902020c0a02020c0b02010c0c02010c0d02010c0e02010c0f02010c1002010c1102010c1202010c1302010d0002020d0102020d0202010d0302010d0402020d0502020d0602010d0702020d0802020d0902020d0a02020d0b02020d0c02020d0d02020d0e02020d0f02020d1002020d1102020d1202010d1302010e0002020e0102020e0202010e0302010e0402020e0502020e0602020e0702020e0802020e0902020e0a02020e0b02020e0c02010e0d02010e0e02010e0f02010e1002010e1102020e1202010e1302010f0002020f0102020f0202020f0302020f0402020f0502020f0602020f0702020f0802020f0902020f0a02020f0b02010f0c02020f0d02020f0e02020f0f02020f1002010f1102010f1202010f13020110000202100102021002020210030202100402021005020210060202100702021008020210090202100a0202100b0202100c0202100d0202100e0202100f02021010020110110202101202011013020111000202110102021102020211030202110402021105020211060202110702021108020211090202110a0202110b0202110c0202110d0202110e0202110f02021110020111110202111202011113020112000202120102021202020212030202120402021205020212060202120702021208020212090202120a0202120b0202120c0202120d0202120e0202120f020212100201121102021212020112130201130102021302020213030202130402021305020213060202130702021308020213090202130a0202130b0202130c0202130d0202130e0202130f0201131002021311020213120201131302011402020114030202140402021405020214060202140702021408020214090202140a0202140b0202140c0202140d0202140e0201140f020214100201141102021412020114130201150402011505020115060201150702011508020115090201150a0201150b0201150c0201150d0201150e0202150f020215100201151102021512020115130201160a0202160b0202160c0202160d0202160e0202160f020216100201161102021612020116130201170b0202170c0202170d0202170e0202170f0202171002021711020117120201180c0202180d0202180e0202180f02021810020118110201190d0201190e0201190f02011910");
        tall[27] = SSTORE2.write(hex"02ff4458dbff7e8ffe980100000201000d0201000e0201000f0201010c0202010d0202010e0202010f02010110020101120201020b0202020c0202020d0202020e0202020f0202021002010211020202120201021302010305020103060201030702010308020103090201030a0201030b0201030c0202030d0202030e0202030f02020310020103110202031202010313020104030201040402020405020204060202040702020408020204090202040a0202040b0202040c0201040d0201040e0202040f0202041002010411020204120201041302010502020205030202050402020505020205060202050702020508020205090202050a0202050b0202050c0202050d0202050e0201050f020205100202051102020512020105130201060102020602020206030202060402020605020206060202060702020608020206090202060a0202060b0202060c0202060d0202060e0202060f02010610020206110202061202010613020107000202070102020702020107030201070402020705020207060202070702020708020207090202070a0202070b0202070c0202070d0202070e0202070f02020710020107110202071202010713020108000202080102020802020108030201080402020805020208060201080702020808020208090202080a0202080b0202080c0202080d0202080e0202080f02020810020108110202081202010813020109000202090102020902020209030202090402020905020209060201090702020908020209090202090a0202090b0201090c0202090d0202090e0202090f0202091002010911020109120201091302010a0002020a0102020a0202020a0302020a0402020a0502020a0602010a0702020a0802020a0902020a0a02020a0b02020a0c02010a0d02010a0e02010a0f02010a1002010a1102020a1202010a1302010b0002020b0102020b0202020b0302020b0402020b0502020b0602010b0702020b0802020b0902020b0a02020b0b02020b0c02020b0d02020b0e02020b0f02020b1002020b1102020b1202010b1302010c0002020c0102020c0202020c0302020c0402020c0502020c0602010c0702020c0802020c0902020c0a02020c0b02010c0c02010c0d02010c0e02010c0f02010c1002010c1102010c1202010c1302010d0002020d0102020d0202010d0302020d0402020d0502020d0602010d0702020d0802020d0902020d0a02020d0b02020d0c02020d0d02020d0e02020d0f02020d1002020d1102020d1202010d1302010e0002020e0102020e0202010e0302020e0402020e0502020e0602010e0702020e0802020e0902020e0a02020e0b02020e0c02010e0d02010e0e02010e0f02010e1002010e1102020e1202010e1302010f0002020f0102020f0202020f0302020f0402020f0502020f0602020f0702020f0802020f0902020f0a02020f0b02010f0c02020f0d02020f0e02020f0f02020f1002010f1102010f1202010f13020110000202100102021002020210030202100402021005020210060202100702021008020210090202100a0202100b0202100c0202100d0202100e0202100f02021010020110110202101202011013020111000202110102021102020211030202110402021105020211060202110702021108020211090202110a0202110b0202110c0202110d0202110e0202110f02021110020111110202111202011113020112000202120102021202020212030202120402021205020212060202120702021208020212090202120a0202120b0202120c0202120d0202120e0202120f020212100201121102021212020112130201130102021302020213030202130402021305020213060202130702021308020213090202130a0202130b0202130c0202130d0202130e0202130f0201131002021311020213120201131302011402020114030202140402021405020214060202140702021408020214090202140a0202140b0202140c0202140d0202140e0201140f020214100201141102021412020114130201150402011505020115060201150702011508020115090201150a0201150b0201150c0201150d0201150e0202150f020215100201151102021512020115130201160a0202160b0202160c0202160d0202160e0202160f020216100201161102021612020116130201170b0202170c0202170d0202170e0202170f0202171002021711020117120201180c0202180d0202180e0202180f02021810020118110201190d0201190e0201190f02011910");
        tall[28] = SSTORE2.write(hex"04ff7ad675ffffe330ff4b80c2ffff0e0e970100000200000d0200000e0200000f0200010c0201010d0202010e0201010f02000110020001120200020b0202020c0201020d0201020e0201020f0201021002000211020302120200021302000305020003060200030702000308020003090200030a0200030b0200030c0200030d0201030e0201030f020203100200031102030312020003130200040402010405020304060203040702030408020104090202040a0201040b0201040c0201040d0200040e0201040f0201041002000411020304120200041302000502020005030201050402010505020305060204050702030508020105090201050a0201050b0201050c0202050d0201050e0200050f020105100202051102030512020005130200060102010602020406030204060402010605020306060204060702030608020106090201060a0201060b0201060c0201060d0201060e0201060f02000610020206110203061202000613020007000201070102010702020407030204070402010705020307060204070702030708020107090201070a0202070b0201070c0201070d0201070e0202070f02010710020007110203071202000713020008000201080102010802020408030204080402010805020308060204080702030808020108090201080a0201080b0201080c0201080d0201080e0201080f02010810020008110203081202000813020009000201090102010902020209030202090402010905020309060202090702030908020109090201090a0201090b0201090c0201090d0201090e0201090f0201091002000911020009120200091302000a0002010a0102010a0202020a0302020a0402010a0502030a0602020a0702030a0802010a0902010a0a02010a0b02000a0c02000a0d02000a0e02000a0f02000a1002000a1102010a1202000a1302000b0002020b0102010b0202010b0302010b0402010b0502030b0602040b0702030b0802010b0902010b0a02010b0b02010b0c02010b0d02010b0e02010b0f02010b1002010b1102010b1202000b1302000c0002010c0102010c0202040c0302040c0402010c0502030c0602040c0702030c0802010c0902010c0a02010c0b02000c0c02000c0d02000c0e02000c0f02000c1002000c1102000c1202000c1302000d0002010d0102010d0202040d0302040d0402010d0502030d0602040d0702030d0802010d0902010d0a02010d0b02010d0c02010d0d02010d0e02010d0f02010d1002010d1102010d1202000d1302000e0002010e0102010e0202040e0302040e0402010e0502030e0602020e0702030e0802010e0902010e0a02010e0b02000e0c02000e0d02000e0e02000e0f02000e1002000e1102010e1202000e1302000f0002020f0102010f0202020f0302020f0402010f0502030f0602020f0702030f0802010f0902010f0a02010f0b02010f0c02010f0d02010f0e02010f0f02010f1002000f1102000f1202000f13020010000201100102011002020210030202100402011005020310060204100702031008020110090201100a0201100b0201100c0201100d0201100e0202100f02011010020010110203101202001013020011000201110102011102020111030201110402011105020311060204110702031108020111090202110a0201110b0201110c0201110d0201110e0201110f02011110020011110203111202001113020012000201120102011202020112030202120402011205020312060203120702031208020112090201120a0201120b0201120c0201120d0201120e0201120f020112100200121102031212020012130200130102011302020213030201130402011305020113060201130702011308020113090201130a0201130b0202130c0201130d0202130e0201130f0200131002021311020313120200131302001402020014030201140402011405020214060201140702021408020114090201140a0201140b0201140c0201140d0201140e0200140f020114100200141102031412020014130200150402001505020015060200150702001508020015090200150a0200150b0200150c0200150d0200150e0201150f020115100200151102031512020015130200160a0202160b0201160c0202160d0201160e0201160f020116100200161102031612020016130200170b0201170c0201170d0201170e0201170f0202171002011711020017120200180c0201180d0202180e0201180f02011810020018110200190d0200190e0200190f02001910");
        tall[29] = SSTORE2.write(hex"02ff822a5bffb04e85980100000201000d0201000e0201000f0201010c0202010d0202010e0202010f02010110020101120201020b0202020c0202020d0202020e0202020f0202021002010211020202120201021302010305020103060201030702010308020103090201030a0201030b0201030c0202030d0202030e0202030f02020310020103110202031202010313020104030201040402020405020204060202040702020408020204090202040a0202040b0202040c0201040d0201040e0202040f0202041002010411020204120201041302010502020205030202050402020505020205060202050702020508020205090202050a0202050b0202050c0202050d0202050e0201050f020205100202051102020512020105130201060102020602020206030202060402020605020206060202060702020608020206090202060a0202060b0202060c0202060d0202060e0202060f02010610020206110202061202010613020107000202070102020702020107030201070402020705020207060202070702020708020207090202070a0202070b0202070c0202070d0202070e0202070f02020710020107110202071202010713020108000202080102020802020108030201080402020805020208060201080702020808020208090202080a0202080b0202080c0202080d0202080e0202080f02020810020108110202081202010813020109000202090102020902020209030202090402020905020209060201090702020908020209090202090a0202090b0201090c0202090d0202090e0202090f0202091002010911020109120201091302010a0002020a0102020a0202020a0302020a0402020a0502020a0602010a0702020a0802020a0902020a0a02020a0b02020a0c02010a0d02010a0e02010a0f02010a1002010a1102020a1202010a1302010b0002020b0102020b0202020b0302020b0402020b0502020b0602010b0702020b0802020b0902020b0a02020b0b02020b0c02020b0d02020b0e02020b0f02020b1002020b1102020b1202010b1302010c0002020c0102020c0202020c0302020c0402020c0502020c0602010c0702020c0802020c0902020c0a02020c0b02010c0c02010c0d02010c0e02010c0f02010c1002010c1102010c1202010c1302010d0002020d0102020d0202010d0302010d0402020d0502020d0602010d0702020d0802020d0902020d0a02020d0b02020d0c02020d0d02020d0e02020d0f02020d1002020d1102020d1202010d1302010e0002020e0102020e0202010e0302010e0402020e0502020e0602010e0702020e0802020e0902020e0a02020e0b02020e0c02010e0d02010e0e02010e0f02010e1002010e1102020e1202010e1302010f0002020f0102020f0202020f0302020f0402020f0502020f0602010f0702020f0802020f0902020f0a02020f0b02010f0c02020f0d02020f0e02020f0f02020f1002010f1102010f1202010f13020110000202100102021002020210030202100402021005020210060201100702021008020210090202100a0202100b0202100c0202100d0202100e0202100f02021010020110110202101202011013020111000202110102021102020211030202110402021105020211060202110702021108020211090202110a0202110b0202110c0202110d0202110e0202110f02021110020111110202111202011113020112000202120102021202020212030202120402021205020212060202120702021208020212090202120a0202120b0202120c0202120d0202120e0202120f020212100201121102021212020112130201130102021302020213030202130402021305020213060202130702021308020213090202130a0202130b0202130c0202130d0202130e0202130f0201131002021311020213120201131302011402020114030202140402021405020214060202140702021408020214090202140a0202140b0202140c0202140d0202140e0201140f020214100201141102021412020114130201150402011505020115060201150702011508020115090201150a0201150b0201150c0201150d0201150e0202150f020215100201151102021512020115130201160a0202160b0202160c0202160d0202160e0202160f020216100201161102021612020116130201170b0202170c0202170d0202170e0202170f0202171002021711020117120201180c0202180d0202180e0202180f02021810020118110201190d0201190e0201190f02011910");
        tall[30] = SSTORE2.write(hex"04ffff0e0effff7216ffbf0202fffff0ee970100000200000d0200000e0200000f0200010c0201010d0200010e0201010f02000110020001120200020b0201020c0201020d0201020e0201020f0201021002000211020102120200021302000305020003060200030702000308020003090200030a0200030b0200030c0200030d0201030e0200030f020103100200031102010312020003130200040402010405020204060202040702020408020204090202040a0202040b0202040c0202040d0200040e0201040f0201041002000411020104120200041302000502020005030201050402010505020205060200050702020508020205090202050a0202050b0202050c0202050d0202050e0200050f020105100201051102010512020005130200060102010602020306030200060402010605020206060200060702000608020206090202060a0202060b0202060c0202060d0202060e0202060f02000610020106110201061202000613020007000201070102000702020307030200070402010705020207060200070702020708020207090202070a0202070b0202070c0202070d0202070e0202070f02020710020007110201071202000713020008000200080102010802020308030204080402010805020208060200080702020808020208090202080a0202080b0202080c0202080d0202080e0202080f02020810020008110201081202000813020009000200090102000902020309030204090402010905020209060200090702020908020209090202090a0202090b0200090c0202090d0202090e0202090f0202091002000911020009120200091302000a0002000a0102000a0202030a0302040a0402010a0502020a0602000a0702020a0802020a0902020a0a02020a0b02000a0c02000a0d02000a0e02000a0f02000a1002000a1102010a1202000a1302000b0002000b0102000b0202000b0302010b0402010b0502020b0602000b0702020b0802020b0902020b0a02020b0b02010b0c02010b0d02010b0e02010b0f02010b1002010b1102010b1202000b1302000c0002000c0102000c0202030c0302000c0402010c0502020c0602000c0702020c0802020c0902020c0a02020c0b02000c0c02000c0d02000c0e02000c0f02000c1002000c1102000c1202000c1302000d0002000d0102000d0202030d0302000d0402010d0502020d0602000d0702020d0802020d0902020d0a02020d0b02010d0c02010d0d02010d0e02010d0f02010d1002010d1102010d1202000d1302000e0002000e0102010e0202030e0302040e0402010e0502020e0602000e0702020e0802020e0902020e0a02020e0b02000e0c02000e0d02000e0e02000e0f02000e1002000e1102010e1202000e1302000f0002010f0102010f0202030f0302040f0402010f0502020f0602000f0702020f0802020f0902020f0a02020f0b02000f0c02020f0d02020f0e02020f0f02020f1002000f1102000f1202000f13020010000200100102011002020310030204100402011005020210060200100702021008020210090202100a0202100b0202100c0202100d0202100e0202100f02021010020010110201101202001013020011000201110102001102020111030201110402011105020211060200110702021108020211090202110a0202110b0202110c0202110d0202110e0202110f02021110020011110201111202001113020012000201120102011202020112030201120402011205020212060202120702001208020212090202120a0202120b0202120c0202120d0202120e0202120f020212100200121102011212020012130200130102011302020013030200130402011305020113060202130702021308020213090202130a0202130b0202130c0202130d0202130e0202130f0200131002011311020113120200131302001402020014030201140402011405020014060201140702011408020114090201140a0201140b0201140c0201140d0201140e0200140f020114100200141102011412020014130200150402001505020015060200150702001508020015090200150a0200150b0200150c0200150d0200150e0201150f020115100200151102011512020015130200160a0201160b0201160c0200160d0201160e0200160f020116100200161102011612020016130200170b0201170c0201170d0201170e0201170f0201171002011711020017120200180c0201180d0200180e0201180f02011810020018110200190d0200190e0200190f02001910");
        tall[31] = SSTORE2.write(hex"05ff58554effe4c8a1ffccb08bffe8caa8fffff0eea90100000200000f02000010020000110200010e0201010f020101100201011102000112020001140200020d0201020e0201020f0201021002010211020102120200021302020214020002150200030702000308020003090200030a0200030b0200030c0200030d0200030e0200030f020103100201031102010312020003130202031402000315020004060201040702010408020304090203040a0203040b0203040c0203040d0203040e0203040f0200041002010411020104120200041302020414020004150200050402000505020305060203050702030508020005090200050a0203050b0203050c0203050d0203050e0203050f0203051002000511020105120201051302020514020005150200060002000602020006030204060402030605020006060203060702000608020306090200060a0203060b0203060c0203060d0203060e0203060f0203061002030611020006120201061302020614020006150200070102010702020407030204070402030705020007060203070702030708020307090200070a0203070b0203070c0203070d0203070e0203070f0203071002030711020307120200071302020714020007150200080102010802020408030204080402030805020008060203080702030808020008090200080a0203080b0203080c0203080d0203080e0203080f020308100203081102030812020008130202081402000815020009000200090102010902020409030204090402030905020509060203090702000908020309090200090a0203090b0203090c0200090d0203090e0203090f02030910020309110203091202000913020009140200091502000a0102010a0202040a0302040a0402030a0502050a0602030a0702030a0802030a0902000a0a02030a0b02030a0c02010a0d02000a0e02000a0f02000a1002000a1102000a1202000a1302020a1402000a1502000b0102010b0202010b0302010b0402040b0502040b0602030b0702030b0802000b0902000b0a02030b0b02030b0c02010b0d02010b0e02010b0f02010b1002010b1102010b1202010b1302020b1402000b1502000c0002000c0102010c0202040c0302040c0402030c0502000c0602030c0702000c0802030c0902000c0a02030c0b02030c0c02000c0d02000c0e02000c0f02000c1002000c1102000c1202000c1302000c1402000c1502000d0102010d0202040d0302040d0402030d0502000d0602030d0702030d0802030d0902000d0a02030d0b02030d0c02010d0d02010d0e02010d0f02010d1002010d1102010d1202010d1302020d1402000d1502000e0102010e0202040e0302040e0402030e0502000e0602030e0702030e0802000e0902000e0a02030e0b02030e0c02010e0d02000e0e02000e0f02000e1002000e1102000e1202000e1302020e1402000e1502000f0102010f0202040f0302040f0402030f0502050f0602030f0702000f0802030f0902000f0a02030f0b02030f0c02000f0d02030f0e02030f0f02030f1002030f1102030f1202000f1302000f1402000f150200100102011002020110030204100402031005020510060203100702031008020310090200100a0203100b0203100c0203100d0203100e0203100f0203101002031011020310120200101302021014020010150200110102011102020111030201110402011105020311060203110702031108020311090200110a0203110b0203110c0203110d0203110e0203110f0203111002031111020311120200111302021114020011150200120102011202020112030201120402011205020112060201120702011208020312090203120a0203120b0203120c0203120d0203120e0203120f02031210020312110201121202001213020212140200121502001302020113030201130402011305020113060201130702011308020113090201130a0201130b0201130c0201130d0201130e0201130f020113100201131102001312020113130202131402001315020014030200140402001405020114060201140702011408020114090201140a0201140b0201140c0201140d0201140e0201140f020114100200141102011412020014130202141402001415020015060200150702001508020015090200150a0200150b0200150c0200150d0200150e0200150f0200151002011511020115120200151302021514020015150200160c0201160d0201160e0201160f0201161002011611020116120200161302021614020016150200170d0201170e0201170f02011710020117110201171202011713020017140200180e0201180f020118100201181102011812020018130200190f020019100200191102001912");
        tall[32] = SSTORE2.write(hex"02ff52665cffa6ebb5700100000201001102010012020101100202011102020112020101130201020402010205020102060201020702010208020102090201020a0201020b0201020c0201020f020202100202021102020212020102130201021502010300020103030202030402020305020203060202030702020308020203090202030a0202030b0202030c0201030d0201030e0201030f0201031002020311020203120202031302010314020203150201031602010401020104030202040402020405020104060201040702020408020204090202040a0202040b0202040c0202040d0202040e0202040f0202041002010411020104120202041302010414020204150201041602010502020205030202050402020505020105060201050702020508020205090202050a0202050b0202050c0202050d0202050e0202050f0202051002020511020205120201051302020514020205150201051602010602020206030202060402020605020106060201060702020608020206090202060a0202060b0202060c0202060d0202060e0202060f0202061002020611020206120202061302010614020206150201061602010702020207030202070402020705020107060201070702020708020207090201070a0202070b0202070c0202070d0202070e0202070f0202071002020711020207120202071302010714020207150201071602010802020208030202080402020805020108060201080702020808020208090201080a0202080b0202080c0201080d0201080e0201080f0201081002010811020108120201081302010814020108150201081602010902020209030202090402020905020209060202090702020908020209090201090a0202090b0202090c0202090d0202090e0202090f0202091002020911020209120202091302020914020209150201091602010a0202020a0302020a0402020a0502010a0602010a0702020a0802020a0902010a0a02020a0b02020a0c02010a0d02010a0e02010a0f02010a1002010a1102010a1202010a1302010a1402010a1502010a1602010b0202020b0302020b0402020b0502010b0602010b0702020b0802020b0902010b0a02020b0b02020b0c02020b0d02020b0e02020b0f02020b1002020b1102020b1202020b1302020b1402020b1502010b1602010c0202020c0302020c0402020c0502010c0602010c0702020c0802020c0902020c0a02020c0b02020c0c02010c0d02010c0e02010c0f02010c1002010c1102010c1202010c1302010c1402010c1502010c1602010d0202020d0302020d0402020d0502010d0602010d0702020d0802020d0902020d0a02020d0b02020d0c02020d0d02020d0e02020d0f02020d1002020d1102020d1202020d1302010d1402010d1502010d1602010e0202020e0302020e0402020e0502010e0602010e0702020e0802020e0902020e0a02020e0b02020e0c02020e0d02020e0e02020e0f02020e1002020e1102020e1202020e1302010e1402020e1502010e1602010f0202020f0302020f0402020f0502020f0602020f0702020f0802020f0902020f0a02020f0b02020f0c02020f0d02020f0e02020f0f02020f1002020f1102020f1202010f1302010f1402020f1502010f1602011002020210030202100402021005020210060202100702021008020210090202100a0202100b0202100c0202100d0202100e0202100f0202101002021011020210120201101302021014020210150201101602011101020111030202110402021105020211060202110702021108020211090202110a0202110b0202110c0202110d0202110e0202110f02021110020111110201111202021113020111140202111502011116020112000201120402011205020112060201120702011208020112090201120a0201120b0201120c0201120d0201120e0201120f020112100202121102021212020212130201121402021215020112160201130f0202131002021311020213120201131302011315020114100202141102021412020114130201151102011512");
        tall[33] = SSTORE2.write(hex"02ffe66724ffefac6d980100000201000d0201000e0201000f0201010c0202010d0202010e0202010f02010110020101120201020b0202020c0202020d0202020e0202020f0202021002010211020202120201021302010305020103060201030702010308020103090201030a0201030b0201030c0202030d0202030e0202030f02020310020103110202031202010313020104030201040402020405020204060202040702020408020204090202040a0202040b0202040c0201040d0201040e0202040f0202041002010411020204120201041302010502020205030202050402020505020205060202050702020508020205090202050a0202050b0202050c0202050d0202050e0201050f020205100202051102020512020105130201060102020602020206030202060402020605020206060201060702020608020206090202060a0202060b0202060c0202060d0202060e0202060f02010610020206110202061202010613020107000202070102020702020207030202070402020705020207060201070702020708020207090202070a0202070b0202070c0202070d0202070e0202070f02020710020107110202071202010713020108000202080102020802020108030201080402020805020208060201080702020808020208090202080a0202080b0202080c0202080d0202080e0202080f02020810020108110202081202010813020109000202090102020902020209030202090402020905020209060201090702020908020209090202090a0202090b0201090c0202090d0202090e0202090f0202091002010911020109120201091302010a0002020a0102020a0202020a0302020a0402020a0502020a0602010a0702020a0802020a0902020a0a02020a0b02020a0c02010a0d02010a0e02010a0f02010a1002010a1102020a1202010a1302010b0002020b0102020b0202020b0302020b0402020b0502020b0602010b0702020b0802020b0902020b0a02020b0b02020b0c02020b0d02020b0e02020b0f02020b1002020b1102020b1202010b1302010c0002020c0102020c0202020c0302020c0402020c0502020c0602010c0702020c0802020c0902020c0a02020c0b02010c0c02010c0d02010c0e02010c0f02010c1002010c1102010c1202010c1302010d0002020d0102020d0202020d0302020d0402020d0502020d0602010d0702020d0802020d0902020d0a02020d0b02020d0c02020d0d02020d0e02020d0f02020d1002020d1102020d1202010d1302010e0002020e0102020e0202010e0302010e0402020e0502020e0602010e0702020e0802020e0902020e0a02020e0b02020e0c02010e0d02010e0e02010e0f02010e1002010e1102020e1202010e1302010f0002020f0102020f0202020f0302020f0402020f0502020f0602010f0702020f0802020f0902020f0a02020f0b02010f0c02020f0d02020f0e02020f0f02020f1002010f1102010f1202010f13020110000202100102021002020210030202100402021005020210060201100702021008020210090202100a0202100b0202100c0202100d0202100e0202100f02021010020110110202101202011013020111000202110102021102020211030202110402021105020211060202110702021108020211090202110a0202110b0202110c0202110d0202110e0202110f02021110020111110202111202011113020112000202120102021202020212030202120402021205020212060202120702021208020212090202120a0202120b0202120c0202120d0202120e0202120f020212100201121102021212020112130201130102021302020213030202130402021305020213060202130702021308020213090202130a0202130b0202130c0202130d0202130e0202130f0201131002021311020213120201131302011402020114030202140402021405020214060202140702021408020214090202140a0202140b0202140c0202140d0202140e0201140f020214100201141102021412020114130201150402011505020115060201150702011508020115090201150a0201150b0201150c0201150d0201150e0202150f020215100201151102021512020115130201160a0202160b0202160c0202160d0202160e0202160f020216100201161102021612020116130201170b0202170c0202170d0202170e0202170f0202171002021711020117120201180c0202180d0202180e0202180f02021810020118110201190d0201190e0201190f02011910");
        tall[34] = SSTORE2.write(hex"03ff90cff1ff75b7dafffff0ee980100000200000d0200000e0200000f0200010c0201010d0201010e0202010f02000110020001120200020b0201020c0202020d0201020e0201020f0201021002000211020102120200021302000305020003060200030702000308020003090200030a0200030b0200030c0200030d0201030e0201030f02020310020003110201031202000313020004030200040402010405020204060202040702020408020104090201040a0201040b0201040c0201040d0200040e0201040f0201041002000411020104120200041302000502020205030201050402010505020205060200050702020508020105090201050a0202050b0201050c0201050d0201050e0200050f020105100201051102010512020005130200060102010602020106030201060402010605020206060200060702020608020106090202060a0201060b0201060c0202060d0201060e0201060f02000610020106110201061202000613020007000201070102020702020107030200070402010705020207060200070702020708020107090201070a0201070b0201070c0201070d0201070e0201070f02010710020007110201071202000713020008000201080102010802020008030203080402010805020208060200080702020808020108090201080a0201080b0201080c0201080d0201080e0201080f02010810020008110201081202000813020009000201090102010902020109030200090402010905020209060200090702020908020109090201090a0201090b0202090c0201090d0201090e0201090f0201091002000911020009120200091302000a0002020a0102010a0202010a0302010a0402010a0502020a0602000a0702020a0802010a0902010a0a02010a0b02010a0c02010a0d02010a0e02000a0f02000a1002000a1102010a1202000a1302000b0002010b0102010b0202010b0302010b0402010b0502020b0602000b0702020b0802010b0902010b0a02010b0b02010b0c02010b0d02010b0e02010b0f02010b1002010b1102010b1202000b1302000c0002010c0102010c0202010c0302010c0402010c0502020c0602000c0702020c0802010c0902010c0a02010c0b02010c0c02010c0d02000c0e02000c0f02000c1002000c1102000c1202000c1302000d0002020d0102010d0202010d0302000d0402010d0502020d0602000d0702020d0802010d0902020d0a02010d0b02010d0c02010d0d02010d0e02010d0f02010d1002010d1102010d1202000d1302000e0002010e0102020e0202000e0302030e0402010e0502020e0602000e0702020e0802010e0902010e0a02010e0b02010e0c02010e0d02010e0e02000e0f02000e1002000e1102010e1202000e1302000f0002010f0102010f0202010f0302000f0402010f0502020f0602000f0702020f0802010f0902010f0a02010f0b02010f0c02010f0d02010f0e02010f0f02010f1002000f1102000f1202000f13020010000201100102011002020110030201100402011005020210060200100702021008020110090201100a0201100b0201100c0201100d0201100e0201100f02011010020010110201101202001013020011000202110102011102020111030201110402011105020211060200110702021108020111090201110a0201110b0202110c0201110d0201110e0202110f02011110020011110201111202001113020012000201120102021202020112030202120402011205020212060202120702021208020112090201120a0201120b0201120c0201120d0201120e0201120f020112100200121102011212020012130200130102011302020113030201130402011305020113060201130702011308020113090202130a0201130b0201130c0201130d0202130e0201130f0200131002011311020113120200131302001402020014030201140402011405020114060201140702011408020114090201140a0201140b0202140c0201140d0201140e0200140f020114100200141102011412020014130200150402001505020015060200150702001508020015090200150a0200150b0200150c0200150d0200150e0201150f020115100200151102011512020015130200160a0202160b0201160c0201160d0201160e0201160f020216100200161102011612020016130200170b0201170c0202170d0201170e0201170f0201171002011711020017120200180c0201180d0201180e0202180f02011810020018110200190d0200190e0200190f02001910");
        tall[35] = SSTORE2.write(hex"02ff279393ff3cb7a4980100000201000d0201000e0201000f0201010c0202010d0202010e0202010f02010110020101120201020b0202020c0202020d0202020e0202020f0202021002010211020202120201021302010305020103060201030702010308020103090201030a0201030b0201030c0202030d0202030e0202030f02020310020103110202031202010313020104030201040402020405020204060202040702020408020204090202040a0202040b0202040c0201040d0201040e0202040f0202041002010411020204120201041302010502020205030202050402020505020205060202050702020508020205090202050a0202050b0202050c0202050d0202050e0201050f020205100202051102020512020105130201060102020602020206030202060402020605020206060202060702020608020206090202060a0202060b0202060c0202060d0202060e0202060f02010610020206110202061202010613020107000202070102020702020207030201070402020705020207060202070702020708020207090202070a0202070b0202070c0202070d0202070e0202070f02020710020107110202071202010713020108000202080102020802020208030201080402020805020208060202080702020808020208090202080a0202080b0202080c0202080d0202080e0202080f02020810020108110202081202010813020109000202090102020902020209030202090402020905020209060202090702020908020209090202090a0202090b0201090c0202090d0202090e0202090f0202091002010911020109120201091302010a0002020a0102020a0202020a0302020a0402020a0502020a0602020a0702020a0802020a0902020a0a02020a0b02020a0c02010a0d02010a0e02010a0f02010a1002010a1102020a1202010a1302010b0002020b0102020b0202020b0302020b0402020b0502020b0602010b0702020b0802020b0902020b0a02020b0b02020b0c02020b0d02020b0e02020b0f02020b1002020b1102020b1202010b1302010c0002020c0102020c0202010c0302010c0402020c0502020c0602010c0702020c0802020c0902020c0a02020c0b02010c0c02010c0d02010c0e02010c0f02010c1002010c1102010c1202010c1302010d0002020d0102020d0202010d0302010d0402020d0502020d0602010d0702020d0802020d0902020d0a02020d0b02020d0c02020d0d02020d0e02020d0f02020d1002020d1102020d1202010d1302010e0002020e0102020e0202020e0302020e0402020e0502020e0602010e0702020e0802020e0902020e0a02020e0b02020e0c02010e0d02010e0e02010e0f02010e1002010e1102020e1202010e1302010f0002020f0102020f0202020f0302020f0402020f0502020f0602020f0702020f0802020f0902020f0a02020f0b02010f0c02020f0d02020f0e02020f0f02020f1002010f1102010f1202010f13020110000202100102021002020210030202100402021005020210060202100702021008020210090202100a0202100b0202100c0202100d0202100e0202100f02021010020110110202101202011013020111000202110102021102020211030202110402021105020211060202110702021108020211090202110a0202110b0202110c0202110d0202110e0202110f02021110020111110202111202011113020112000202120102021202020212030202120402021205020212060202120702021208020212090202120a0202120b0202120c0202120d0202120e0202120f020212100201121102021212020112130201130102021302020213030202130402021305020213060202130702021308020213090202130a0202130b0202130c0202130d0202130e0202130f0201131002021311020213120201131302011402020114030202140402021405020214060202140702021408020214090202140a0202140b0202140c0202140d0202140e0201140f020214100201141102021412020114130201150402011505020115060201150702011508020115090201150a0201150b0201150c0201150d0201150e0202150f020215100201151102021512020115130201160a0202160b0202160c0202160d0202160e0202160f020216100201161102021612020116130201170b0202170c0202170d0202170e0202170f0202171002021711020117120201180c0202180d0202180e0202180f02021810020118110201190d0201190e0201190f02011910");
        tall[37] = SSTORE2.write(hex"04ff3f723dff5d906effa1b58fffff0e0e980100000200000d0200000e0200000f0200010c0201010d0201010e0202010f02000110020001120200020b0202020c0202020d0202020e0202020f0202021002000211020202120200021302000305020003060200030702000308020003090200030a0200030b0201030c0202030d0202030e0201030f02010310020003110202031202000313020004030200040402020405020304060203040702030408020204090202040a0202040b0200040c0200040d0202040e0202040f0202041002000411020204120200041302000502020205030202050402020505020305060200050702010508020105090202050a0202050b0202050c0202050d0200050e0200050f020205100202051102020512020005130200060102020602020106030204060402020605020306060200060702030608020206090202060a0201060b0202060c0202060d0202060e0202060f02000610020206110202061202000613020007000202070102020702020107030204070402010705020307060200070702030708020207090202070a0202070b0202070c0202070d0202070e0202070f02020710020007110202071202000713020008000202080102020802020108030204080402020805020308060200080702030808020208090202080a0202080b0202080c0202080d0202080e0201080f02010810020008110202081202000813020009000202090102020902020109030200090402020905020309060200090702030908020209090202090a0200090b0202090c0202090d0202090e0202090f0202091002000911020009120200091302000a0002020a0102020a0202010a0302000a0402020a0502030a0602000a0702030a0802020a0902020a0a02020a0b02000a0c02000a0d02000a0e02000a0f02000a1002000a1102020a1202000a1302000b0002020b0102020b0202020b0302020b0402020b0502030b0602000b0702030b0802010b0902020b0a02020b0b02020b0c02020b0d02020b0e02020b0f02020b1002020b1102020b1202000b1302000c0002020c0102020c0202010c0302040c0402020c0502030c0602000c0702030c0802020c0902020c0a02020c0b02000c0c02000c0d02000c0e02000c0f02000c1002000c1102000c1202000c1302000d0002020d0102020d0202010d0302040d0402020d0502030d0602000d0702030d0802020d0902020d0a02020d0b02020d0c02020d0d02020d0e02020d0f02020d1002020d1102020d1202000d1302000e0002020e0102020e0202010e0302040e0402020e0502030e0602000e0702030e0802020e0902020e0a02020e0b02000e0c02000e0d02000e0e02000e0f02000e1002000e1102020e1202000e1302000f0002020f0102020f0202010f0302000f0402010f0502010f0602000f0702010f0802020f0902020f0a02000f0b02020f0c02020f0d02020f0e02020f0f02020f1002000f1102000f1202000f13020010000202100102021002020110030200100402021005020310060200100702031008020210090202100a0202100b0202100c0202100d0202100e0202100f02021010020010110202101202001013020011000202110102021102020211030202110402021105020311060200110702011108020111090201110a0202110b0201110c0202110d0202110e0201110f02021110020011110202111202001113020012000201120102021202020112030202120402021205020312060203120702031208020212090202120a0202120b0202120c0202120d0202120e0202120f020212100200121102021212020012130200130102021302020213030201130402021305020213060202130702021308020213090202130a0202130b0202130c0202130d0202130e0202130f0200131002021311020213120200131302001402020014030202140402021405020114060202140702021408020114090202140a0202140b0202140c0202140d0202140e0200140f020214100200141102021412020014130200150402001505020015060200150702001508020015090200150a0200150b0200150c0200150d0200150e0202150f020215100200151102021512020015130200160a0201160b0202160c0201160d0202160e0202160f020216100200161102021612020016130200170b0202170c0202170d0202170e0201170f0201171002021711020017120200180c0201180d0202180e0202180f02021810020018110200190d0200190e0200190f02001910");
        tall[38] = SSTORE2.write(hex"04ff00b4adff4b80c2ffff0e0effffe330970100000200000d0200000e0200000f0200010c0201010d0202010e0201010f02000110020001120200020b0202020c0201020d0201020e0201020f0201021002000211020302120200021302000305020003060200030702000308020003090200030a0200030b0200030c0200030d0201030e0201030f020203100200031102030312020003130200040402010405020204060202040702020408020104090202040a0201040b0201040c0201040d0200040e0201040f0201041002000411020304120200041302000502020005030201050402010505020205060203050702020508020105090201050a0201050b0201050c0201050d0201050e0200050f020105100204051102030512020005130200060102010602020306030203060402010605020206060203060702020608020106090201060a0201060b0201060c0202060d0201060e0201060f02000610020406110203061202000613020007000201070102010702020307030203070402010705020207060203070702020708020107090201070a0202070b0201070c0201070d0201070e0201070f02010710020007110203071202000713020008000202080102010802020308030203080402010805020208060203080702020808020108090201080a0201080b0201080c0201080d0201080e0201080f02010810020008110203081202000813020009000201090102010902020409030204090402010905020209060204090702020908020109090201090a0201090b0201090c0201090d0201090e0201090f0201091002000911020009120200091302000a0002010a0102010a0202040a0302040a0402010a0502020a0602040a0702020a0802010a0902010a0a02010a0b02000a0c02000a0d02000a0e02000a0f02000a1002000a1102010a1202000a1302000b0002010b0102010b0202010b0302010b0402010b0502020b0602030b0702020b0802010b0902010b0a02010b0b02010b0c02010b0d02010b0e02010b0f02010b1002010b1102010b1202000b1302000c0002020c0102010c0202030c0302030c0402010c0502020c0602030c0702020c0802010c0902010c0a02010c0b02000c0c02000c0d02000c0e02000c0f02000c1002000c1102000c1202000c1302000d0002010d0102010d0202030d0302030d0402010d0502020d0602030d0702020d0802010d0902010d0a02010d0b02010d0c02010d0d02010d0e02010d0f02010d1002010d1102010d1202000d1302000e0002010e0102010e0202030e0302030e0402010e0502020e0602040e0702020e0802010e0902010e0a02010e0b02000e0c02000e0d02000e0e02000e0f02000e1002000e1102010e1202000e1302000f0002010f0102010f0202040f0302040f0402010f0502020f0602040f0702020f0802010f0902010f0a02010f0b02010f0c02010f0d02010f0e02010f0f02010f1002000f1102000f1202000f13020010000202100102011002020410030204100402011005020210060203100702021008020110090201100a0201100b0201100c0201100d0201100e0201100f02011010020010110203101202001013020011000201110102011102020111030201110402011105020211060203110702021108020111090201110a0202110b0201110c0201110d0201110e0201110f02011110020011110203111202001113020012000201120102011202020212030201120402011205020212060202120702021208020112090201120a0201120b0201120c0202120d0201120e0201120f020112100200121102031212020012130200130102011302020113030201130402011305020113060201130702011308020113090202130a0201130b0201130c0201130d0201130e0201130f0200131002041311020313120200131302001402020014030201140402021405020114060201140702011408020114090201140a0201140b0201140c0201140d0200140e0200140f020114100200141102031412020014130200150402001505020015060200150702001508020015090200150a0200150b0200150c0200150d0201150e0201150f020215100200151102031512020015130200160a0202160b0201160c0202160d0201160e0201160f020116100200161102031612020016130200170b0201170c0201170d0201170e0202170f0201171002011711020017120200180c0202180d0201180e0201180f02011810020018110200190d0200190e0200190f02001910");
        tall[39] = SSTORE2.write(hex"05ff7d7d7dffa1a1a1ff464646fffff0eeffff0e0eb10100000200000d0200000e0200000f02000010020000110200010c0201010d0201010e0200010f020101100201011102000112020001130200020b0201020c0201020d0201020e0200020f020102100201021102010212020102130200021402000215020003060200030702000308020003090200030a0200030b0200030c0200030d0200030e0200030f0200031002020311020103120200031302010314020003150200040402000405020104060201040702020408020004090201040a0201040b0201040c0201040d0201040e0201040f020104100200041102010412020004130201041402000415020005030201050402010505020105060201050702000508020205090201050a0201050b0201050c0201050d0201050e0201050f02010510020105110200051202010513020105140200051502000602020106030201060402030605020406060201060702020608020006090201060a0201060b0201060c0201060d0201060e0201060f02010610020106110201061202000613020106140200061502000702020107030201070402030705020407060201070702000708020207090201070a0201070b0201070c0201070d0201070e0201070f02010710020107110201071202000713020107140200071502000802020108030201080402030805020208060201080702020808020008090201080a0201080b0201080c0201080d0201080e0201080f02010810020108110201081202000813020208140200081502000902020109030201090402030905020009060201090702000908020209090201090a0201090b0201090c0200090d0200090e0200090f02000910020009110200091202000913020009140200091502000a0202010a0302010a0402030a0502000a0602010a0702020a0802000a0902010a0a02010a0b02010a0c02010a0d02010a0e02000a0f02010a1002000a1102010a1202000a1302010a1402000a1502000b0202010b0302010b0402010b0502010b0602010b0702000b0802020b0902010b0a02010b0b02010b0c02010b0d02020b0e02000b0f02020b1002000b1102020b1202000b1302020b1402000b1502050c0002000c0102000c0202010c0302010c0402030c0502040c0602010c0702020c0802000c0902010c0a02010c0b02010c0c02000c0d02000c0e02000c0f02000c1002000c1102000c1202000c1302000c1402000c1502000d0202010d0302010d0402030d0502040d0602010d0702000d0802020d0902010d0a02010d0b02010d0c02010d0d02010d0e02000d0f02010d1002000d1102010d1202000d1302010d1402000d1502000e0202010e0302010e0402030e0502020e0602010e0702020e0802000e0902010e0a02010e0b02010e0c02010e0d02020e0e02000e0f02020e1002000e1102020e1202000e1302020e1402000e1502000f0202010f0302010f0402030f0502000f0602010f0702000f0802020f0902010f0a02010f0b02010f0c02000f0d02000f0e02000f0f02000f1002000f1102000f1202000f1302000f1402000f1502001002020110030201100402031005020010060201100702021008020010090201100a0201100b0201100c0201100d0201100e0201100f02011010020110110201101202001013020110140200101502001102020111030201110402011105020111060201110702001108020211090201110a0201110b0201110c0201110d0201110e0201110f02011110020111110201111202001113020111140200111502001202020112030201120402011205020112060201120702011208020112090201120a0201120b0201120c0201120d0201120e0201120f02011210020112110201121202001213020112140200121502001302020113030202130402021305020213060202130702021308020213090202130a0202130b0202130c0201130d0202130e0202130f02011310020113110201131202001313020113140200131502001402020114030201140402011405020114060201140702011408020114090201140a0201140b0201140c0201140d0201140e0201140f02011410020114110200141202011413020114140200141502001502020015030200150402001505020015060200150702001508020015090200150a0200150b0200150c0200150d0200150e0200150f0200151002001511020115120200151302011514020015150200160b0201160c0201160d0201160e0200160f0201161002011611020116120200161302021614020016150200170b0201170c0202170d0202170e0200170f02021710020117110201171202011713020017140200180c0201180d0201180e0200180f020118100201181102001812020018130200190d0200190e0200190f0200191002001911");
        tall[40] = SSTORE2.write(hex"06ffffa8eeff8f83c0ffa28ef4ff7663c6ff9482dfffe85bccce0100000200000c0200000d0200000e0200000f0200010a0200010b0201010c0201010d0202010e0203010f0200011002000111020002090203020a0202020b0203020c0203020d0203020e0203020f0203021002030211020002120200030402000305020003060200030702000308020003090200030a0200030b0200030c0200030d0200030e0202030f0203031002030311020303120200031302000402020004030200040402030405020204060203040702030408020304090202040a0203040b0203040c0203040d0203040e0200040f020304100200041102000412020004130200050102020502020305030203050402030505020305060203050702030508020305090203050a0203050b0203050c0202050d0203050e0203050f02000510020005110203051202000513020006000203060102030602020306030203060402030605020106060203060702020608020306090203060a0202060b0203060c0203060d0203060e0203060f02030610020006110203061202000613020007000203070102010702020407030200070402030705020107060203070702030708020307090203070a0203070b0203070c0203070d0203070e0203070f02030710020007110203071202000713020008000203080102030802020408030200080402030805020308060203080702030808020308090203080a0203080b0203080c0202080d0200080e0203080f02030810020008110203081202000813020009000202090102030902020409030200090402030905020309060203090702030908020309090203090a0203090b0203090c0203090d0203090e0200090f0200091002000911020009120200091302000a0002030a0102030a0202040a0302050a0402030a0502060a0602000a0702060a0802030a0902030a0a02030a0b02030a0c02030a0d02030a0e02010a0f02010a1002010a1102030a1202000a1302000b0002030b0102030b0202040b0302050b0402030b0502060b0602000b0702060b0802030b0902030b0a02030b0b02030b0c02030b0d02030b0e02030b0f02030b1002030b1102030b1202000b1302000c0002020c0102030c0202030c0302030c0402030c0502000c0602000c0702000c0802030c0902030c0a02030c0b02030c0c02000c0d02030c0e02030c0f02030c1002030c1102030c1202000c1302000d0002030d0102030d0202040d0302000d0402030d0502030d0602030d0702030d0802030d0902030d0a02030d0b02030d0c02030d0d02000d0e02000d0f02000d1002000d1102000d1202000d1302000e0002030e0102030e0202040e0302000e0402030e0502030e0602030e0702030e0802030e0902030e0a02030e0b02030e0c02030e0d02030e0e02010e0f02010e1002010e1102030e1202000e1302000f0002020f0102030f0202040f0302000f0402030f0502030f0602030f0702030f0802030f0902030f0a02030f0b02030f0c02030f0d02030f0e02030f0f02030f1002030f1102030f1202000f13020010000203100102031002020410030205100402031005020110060203100702031008020310090203100a0203100b0203100c0202100d0203100e0203100f02031010020310110203101202001013020011000203110102031102020411030205110402031105020111060203110702021108020311090203110a0203110b0203110c0203110d0200110e0200110f02001110020011110200111202001113020012000203120102031202020312030203120402031205020312060203120702031208020312090202120a0203120b0203120c0203120d0203120e0202120f02031210020012110203121202001213020013000203130102021302020313030203130402031305020213060203130702031308020313090203130a0203130b0203130c0202130d0203130e0203130f02031310020013110203131202001313020014000203140102031402020314030202140402031405020314060203140702021408020314090203140a0203140b0202140c0203140d0203140e0202140f020314100200141102031412020014130200150102031502020315030203150402031505020215060201150702011508020115090201150a0203150b0201150c0203150d0203150e0203150f0200151002001511020315120200151302001602020016030200160402031605020316060203160702021608020316090203160a0203160b0203160c0202160d0203160e0200160f020316100200161102001612020016130200170402001705020017060200170702001708020017090200170a0200170b0200170c0200170d0200170e0203170f02031710020317110203171202001713020018090203180a0202180b0203180c0203180d0203180e0202180f02031810020318110203181202001813020019090203190a0203190b0201190c0203190d0201190e0203190f02031910020319110200191202001a0a02031a0b02021a0c02031a0d02031a0e02031a0f02001a1002001a1102001b0b02001b0c02001b0d02001b0e02001b0f");
        tall[41] = SSTORE2.write(hex"04ff4d381dff998078ffbca199ff5d4a2aa60100000200000e0200000f020000100200010d0201010e0201010f0201011002000111020001130200020c0201020d0201020e0201020f0201021002010211020002120202021302000214020003060200030702000308020003090200030a0200030b0200030c0200030d0200030e0201030f02010310020103110200031202020313020003140200040402000405020204060203040702030408020304090202040a0202040b0202040c0202040d0202040e0200040f0201041002010411020004120202041302000414020005030202050402020505020205060203050702000508020305090202050a0202050b0202050c0202050d0202050e0202050f02000510020105110201051202020513020005140200060102000602020206030204060402000605020206060203060702000608020306090202060a0202060b0202060c0202060d0202060e0202060f0202061002000611020106120202061302000614020007000201070102010702020207030204070402000705020207060203070702000708020307090202070a0202070b0202070c0202070d0202070e0202070f0202071002020711020007120202071302000714020008000201080102010802020208030204080402000805020208060203080702000808020308090202080a0202080b0202080c0202080d0202080e0202080f0202081002020811020008120202081302000814020009000201090102010902020209030204090402030905020209060203090702000908020309090202090a0202090b0200090c0202090d0202090e0202090f020209100202091102000912020009130200091402000a0002010a0102010a0202020a0302040a0402030a0502020a0602030a0702000a0802030a0902020a0a02020a0b02010a0c02000a0d02000a0e02000a0f02000a1002000a1102000a1202020a1302000a1402000b0002010b0102010b0202020b0302020b0402020b0502020b0602030b0702000b0802030b0902020b0a02020b0b02010b0c02010b0d02010b0e02010b0f02010b1002010b1102010b1202020b1302000b1402000c0002010c0102010c0202020c0302040c0402000c0502020c0602030c0702000c0802030c0902020c0a02020c0b02000c0c02000c0d02000c0e02000c0f02000c1002000c1102000c1202000c1302000c1402000d0002010d0102010d0202020d0302040d0402000d0502020d0602030d0702000d0802030d0902020d0a02020d0b02010d0c02010d0d02010d0e02010d0f02010d1002010d1102010d1202020d1302000d1402000e0002010e0102010e0202020e0302040e0402000e0502020e0602030e0702000e0802030e0902020e0a02020e0b02010e0c02000e0d02000e0e02000e0f02000e1002000e1102000e1202020e1302000e1402000f0002010f0102010f0202020f0302040f0402030f0502020f0602030f0702000f0802030f0902020f0a02020f0b02000f0c02020f0d02020f0e02020f0f02020f1002020f1102000f1202000f1302000f14020010000201100102011002020210030204100402031005020210060203100702001008020310090202100a0202100b0202100c0202100d0202100e0202100f0202101002021011020010120202101302001014020011000201110102011102020211030202110402021105020211060203110702001108020311090202110a0202110b0202110c0202110d0202110e0202110f0202111002021111020011120202111302001114020012000201120102011202020112030202120402021205020212060203120702031208020312090202120a0202120b0202120c0202120d0202120e0202120f02021210020212110200121202021213020012140200130102001302020113030201130402011305020213060201130702021308020113090202130a0201130b0202130c0201130d0202130e0201130f0202131002001311020113120202131302001314020014030200140402011405020114060201140702011408020114090201140a0201140b0201140c0201140d0201140e0201140f020014100201141102001412020214130200141402001505020015060200150702001508020015090200150a0200150b0200150c0200150d0200150e0200150f02011510020115110200151202021513020015140200160b0201160c0201160d0201160e0201160f02011610020116110200161202021613020016140200170c0201170d0201170e0201170f020117100201171102011712020017130200180d0200180e0201180f0201181002011811020018120200190e0200190f0200191002001911");
        tall[42] = SSTORE2.write(hex"04fff98f30fff8e08affff7216fffff0ee970100000200000d0200000e0200000f0200010c0201010d0200010e0201010f02000110020001120200020b0201020c0201020d0200020e0201020f0200021002000211020102120200021302000305020003060200030702000308020003090200030a0201030b0201030c0201030d0201030e0201030f020103100200031102010312020003130200040402010405020204060202040702020408020104090201040a0200040b0200040c0200040d0201040e0201040f0201041002000411020104120200041302000502020005030201050402010505020205060200050702020508020105090201050a0201050b0201050c0201050d0200050e0200050f020105100201051102010512020005130200060102010602020306030200060402030605020206060200060702020608020106090201060a0201060b0201060c0201060d0201060e0201060f02000610020106110201061202000613020007000201070102010702020307030204070402030705020207060200070702020708020107090201070a0201070b0201070c0201070d0201070e0201070f02010710020007110201071202000713020008000200080102000802020308030204080402030805020208060200080702020808020108090201080a0201080b0201080c0201080d0201080e0201080f02010810020008110201081202000813020009000200090102010902020309030204090402030905020209060200090702020908020109090201090a0200090b0201090c0201090d0201090e0201090f0201091002000911020009120200091302000a0002010a0102010a0202030a0302040a0402030a0502020a0602000a0702020a0802010a0902010a0a02010a0b02000a0c02000a0d02000a0e02000a0f02000a1002000a1102010a1202000a1302000b0002010b0102010b0202010b0302010b0402010b0502020b0602000b0702020b0802010b0902010b0a02010b0b02010b0c02010b0d02010b0e02010b0f02010b1002010b1102010b1202000b1302000c0002000c0102000c0202030c0302000c0402030c0502020c0602000c0702020c0802010c0902010c0a02010c0b02000c0c02000c0d02000c0e02000c0f02000c1002000c1102000c1202000c1302000d0002000d0102010d0202030d0302040d0402030d0502020d0602000d0702020d0802010d0902010d0a02010d0b02010d0c02010d0d02010d0e02010d0f02010d1002010d1102010d1202000d1302000e0002010e0102010e0202030e0302040e0402030e0502020e0602000e0702020e0802010e0902010e0a02010e0b02000e0c02000e0d02000e0e02000e0f02000e1002000e1102010e1202000e1302000f0002010f0102010f0202030f0302040f0402030f0502020f0602000f0702020f0802010f0902010f0a02000f0b02010f0c02010f0d02010f0e02010f0f02010f1002000f1102000f1202000f13020010000200100102001002020310030204100402031005020210060200100702021008020110090201100a0201100b0201100c0201100d0201100e0201100f02011010020010110201101202001013020011000200110102011102020111030201110402011105020211060200110702021108020111090201110a0201110b0201110c0201110d0201110e0201110f02011110020011110201111202001113020012000201120102011202020112030201120402011205020212060202120702021208020112090201120a0201120b0201120c0201120d0201120e0201120f020112100200121102011212020012130200130102011302020013030201130402011305020113060201130702011308020113090201130a0201130b0201130c0201130d0201130e0201130f0200131002011311020113120200131302001402020014030201140402001405020114060200140702011408020014090201140a0201140b0201140c0201140d0200140e0200140f020114100200141102011412020014130200150402001505020015060200150702001508020015090200150a0200150b0200150c0200150d0201150e0201150f020115100200151102011512020015130200160a0201160b0201160c0201160d0201160e0201160f020116100200161102011612020016130200170b0200170c0201170d0200170e0201170f0200171002011711020017120200180c0201180d0200180e0201180f02001810020018110200190d0200190e0200190f02001910");
        tall[43] = SSTORE2.write(hex"05fff0c14dffd89537ffffffd5fff4e299fff3d9a1970100000200000d0200000e0200000f0200010c0201010d0202010e0201010f02000110020001120200020b0201020c0201020d0201020e0201020f0201021002000211020102120200021302000305020003060200030702000308020003090200030a0200030b0200030c0200030d0202030e0201030f020203100200031102010312020003130200040402010405020304060203040702030408020404090204040a0204040b0204040c0204040d0200040e0201040f0201041002000411020104120200041302000502020005030201050402010505020305060200050702030508020305090204050a0204050b0204050c0204050d0204050e0200050f020105100201051102010512020005130200060102010602020206030200060402010605020306060200060702030608020306090203060a0204060b0204060c0204060d0204060e0204060f02000610020106110201061202000613020007000201070102010702020207030200070402010705020307060200070702030708020307090203070a0203070b0204070c0204070d0204070e0204070f02040710020007110201071202000713020008000201080102010802020308030200080402010805020308060200080702030808020308090203080a0203080b0204080c0204080d0204080e0204080f02040810020008110201081202000813020009000201090102030902020309030205090402010905020009060200090702030908020309090203090a0203090b0204090c0204090d0204090e0200090f0204091002000911020009120200091302000a0002010a0102030a0202030a0302050a0402010a0502000a0602000a0702030a0802030a0902030a0a02030a0b02040a0c02040a0d02040a0e02010a0f02000a1002000a1102010a1202000a1302000b0002010b0102020b0202020b0302010b0402010b0502000b0602000b0702030b0802030b0902030b0a02030b0b02040b0c02040b0d02040b0e02010b0f02010b1002010b1102010b1202000b1302000c0002010c0102030c0202030c0302000c0402010c0502030c0602000c0702030c0802030c0902030c0a02030c0b02040c0c02040c0d02040c0e02000c0f02000c1002000c1102000c1202000c1302000d0002010d0102030d0202030d0302000d0402010d0502030d0602000d0702030d0802030d0902030d0a02030d0b02040d0c02040d0d02040d0e02010d0f02010d1002010d1102010d1202000d1302000e0002010e0102010e0202030e0302000e0402010e0502030e0602000e0702030e0802030e0902030e0a02030e0b02040e0c02040e0d02040e0e02010e0f02000e1002000e1102010e1202000e1302000f0002010f0102010f0202020f0302050f0402010f0502030f0602000f0702030f0802030f0902030f0a02030f0b02040f0c02040f0d02040f0e02000f0f02040f1002000f1102000f1202000f13020010000201100102011002020210030205100402011005020310060200100702031008020310090203100a0204100b0204100c0204100d0204100e0204100f02041010020010110201101202001013020011000201110102011102020111030201110402011105020311060200110702031108020311090204110a0204110b0204110c0204110d0204110e0204110f02011110020011110201111202001113020012000201120102011202020212030201120402011205020312060203120702031208020412090204120a0204120b0204120c0204120d0204120e0201120f020112100200121102011212020012130200130102011302020113030201130402011305020113060201130702011308020113090201130a0201130b0201130c0201130d0201130e0201130f0200131002011311020113120200131302001402020014030201140402011405020114060201140702011408020114090201140a0201140b0201140c0201140d0201140e0200140f020114100200141102011412020014130200150402001505020015060200150702001508020015090200150a0200150b0200150c0200150d0200150e0201150f020115100200151102011512020015130200160a0201160b0201160c0202160d0201160e0201160f020116100200161102011612020016130200170b0201170c0201170d0201170e0202170f0201171002011711020017120200180c0201180d0201180e0201180f02011810020018110200190d0200190e0200190f02001910");
        tall[46] = SSTORE2.write(hex"01fff9f4f259010000020000120200010e0200011102010112020001130200020602000207020002080200020d0201020e0200020f02000211020102120200021302000305020103060200030702010308020003090200030c0201030d0201030e0201030f0200031002000311020103120200031302000402020004030200040402010405020104060200040702010408020104090200040a0200040c0201040d0201040e0201040f020104100200041102010412020004130200050102010502020105030200050402010505020005060200050702000508020105090200050a0200050b0200050c0200050d0200050e0200050f02010510020105110201051202000513020006000201060102010602020006030200060402010605020106060200060702010608020106090200060a0201060b0200060c0201060d0200060e0201060f02000610020106110201061202000613020007000201070102010702020007030200070402010705020007060200070702000708020107090200070a0201070b0200070c0201070d0200070e0201070f02000710020107110201071202000713020008000201080102010802020008030200080402010805020108060200080702010808020108090200080a0201080b0200080c0201080d0200080e0201080f02000810020008110200081202000813020009000201090102010902020009030200090402010905020009060200090702000908020109090200090a0200090b0200090c0200090d0200090e0200090f0200091002000911020109120200091302000a0002010a0102010a0202010a0302010a0402010a0502010a0602000a0702010a0802010a0902000a0a02010a0b02010a0c02010a0d02010a0e02010a0f02010a1002010a1102010a1202000a1302000b0002010b0102010b0202010b0302000b0402010b0502000b0602000b0702000b0802010b0902000b0a02000b0b02000b0c02000b0d02000b0e02000b0f02000b1002000b1102000b1202000b1302000c0002010c0102010c0202000c0302000c0402010c0502010c0602000c0702010c0802010c0902000c0a02010c0b02010c0c02010c0d02010c0e02010c0f02010c1002010c1102010c1202000c1302000d0002010d0102010d0202000d0302000d0402010d0502000d0602000d0702000d0802010d0902000d0a02000d0b02000d0c02000d0d02000d0e02000d0f02000d1002000d1102010d1202000d1302000e0002010e0102010e0202000e0302000e0402010e0502010e0602000e0702010e0802010e0902000e0a02010e0b02000e0c02010e0d02000e0e02010e0f02000e1002000e1102000e1202000e1302000f0002010f0102010f0202000f0302000f0402010f0502000f0602000f0702000f0802010f0902000f0a02010f0b02000f0c02010f0d02000f0e02010f0f02000f1002010f1102010f1202000f13020010000201100102011002020110030201100402011005020010060200100702001008020110090200100a0201100b0200100c0201100d0200100e0201100f02001010020110110201101202001013020011000201110102011102020111030200110402001105020111060200110702011108020111090200110a0200110b0200110c0200110d0200110e0200110f020011100201111102011112020011130200120102011202020112030201120402011205020112060200120702001208020012090200120c0201120d0201120e0201120f020112100200121102011212020012130200130202001303020013040200130502001306020013070200130c0201130d0201130e0201130f020013100200131102011312020013130200140d0201140e0200140f0200141102011412020014130200150e02001511020115120200151302001612");
        tall[48] = SSTORE2.write(hex"0cff1f325aff28a691ffe0d7c5ffdb4f54ffb8d9cefffcd265ffb8d8cdffd22930ff543e2effe57e33fff9f8f4fffff0eece0100000200000c0200000d0200000e0200000f0200010a0200010b0201010c0202010d0202010e0202010f0200011002000111020002090201020a0203020b0202020c0202020d0202020e0204020f0204021002040211020002120200030402000305020003060200030702000308020003090200030a0200030b0200030c0200030d0200030e0204030f0204031002010311020103120200031302000402020004030205040402050405020304060206040702060408020604090201040a0201040b0201040c0204040d0204040e0200040f020104100200041102000412020004130200050102050502020505030205050402050505020605060206050702060508020105090201050a0201050b0204050c0204050d0204050e0201050f02000510020005110207051202000513020006000205060102050602020506030205060402010605020606060206060702030608020106090201060a0204060b0204060c0204060d0201060e0201060f02070610020006110207061202000613020007000205070102050702020207030208070402010705020607060209070702010708020107090204070a0204070b0204070c0201070d0201070e0207070f02070710020007110207071202000713020008000205080102010802020208030208080402010805020908060201080702010808020108090204080a0200080b0201080c0201080d0207080e0200080f02070810020008110201081202000813020009000201090102020902020209030208090402090905020a0906020a0907020a0908020109090201090a0201090b0200090c0200090d0200090e0200090f0200091002000911020009120200091302000a0002020a0102020a0202020a0302030a0402010a05020a0a06020b0a07020a0a0802010a0902010a0a02010a0b02070a0c02070a0d02070a0e02070a0f02010a1002010a1102010a1202000a1302000b0002020b0102090b0202020b0302030b0402010b05020a0b06020b0b07020a0b0802010b0902010b0a02070b0b02070b0c02070b0d02070b0e02010b0f02010b1002010b1102090b1202000b1302000c0002090c0102010c0202010c0302010c0402010c05020a0c06020b0c07020a0c0802010c0902070c0a02070c0b02070c0c02070c0d02010c0e02000c0f02010c1002090c1102090c1202000c1302000d0002010d0102010d0202020d0302080d0402010d05020a0d06020b0d07020a0d0802070d0902070d0a02070d0b02000d0c02000d0d02000d0e02000d0f02000d1002000d1102000d1202000d1302000e0002010e0102010e0202020e0302080e0402010e05020a0e06020a0e07020a0e0802070e0902070e0a02010e0b02010e0c02010e0d02010e0e02020e0f02020e1002020e1102020e1202000e1302000f0002010f0102090f0202020f0302080f0402070f0502070f0602070f0702070f0802070f0902010f0a02010f0b02010f0c02010f0d02020f0e02020f0f02020f1002020f1102020f1202000f13020010000209100102011002020210030203100402071005020c10060207100702011008020110090201100a0201100b0201100c0205100d0202100e0202100f02021010020210110202101202001013020011000201110102071102020211030203110402071105020c11060201110702011108020111090201110a0200110b0200110c0200110d0200110e0200110f02001110020011110200111202001113020012000207120102071202020712030207120402011205020112060201120702011208020112090201120a0201120b0201120c0206120d0204120e0205120f02021210020012110201121202001213020013000207130102071302020713030201130402041305020913060201130702011308020113090201130a0203130b0201130c0201130d0206130e0204130f02011310020013110201131202001313020014000207140102071402020114030204140402041405020414060209140702011408020114090203140a0203140b0203140c0201140d0201140e0206140f020114100200141102011412020014130200150102011502020415030204150402041505020415060201150702011508020315090203150a0203150b0203150c0203150d0201150e0201150f0200151002001511020415120200151302001602020016030204160402041605020116060201160702031608020316090203160a0203160b0203160c0201160d0201160e0200160f020116100200161102001612020016130200170402001705020017060200170702001708020017090200170a0200170b0200170c0200170d0200170e0201170f02011710020417110204171202001713020018090203180a0203180b0201180c0201180d0201180e0203180f02041810020418110204181202001813020019090203190a0201190b0201190c0201190d0204190e0204190f02041910020419110200191202001a0a02011a0b02031a0c02041a0d02041a0e02041a0f02001a1002001a1102001b0b02001b0c02001b0d02001b0e02001b0f");
        tall[49] = SSTORE2.write(hex"05991729f31afefefeff1929f466ffffff33ffffff59010000020100120201010e0201011102020112020101130203020602030207020302080201020d0202020e0201020f02010211020202120201021302030305020403060203030702040308020303090201030c0202030d0202030e0202030f0201031002010311020203120201031302030402020304030203040402040405020404060203040702040408020404090203040a0201040c0202040d0202040e0202040f020204100201041102020412020104130203050102040502020405030203050402040505020305060203050702030508020405090203050a0203050b0203050c0203050d0203050e0203050f02020510020205110202051202010513020306000204060102040602020306030203060402040605020406060203060702040608020406090203060a0205060b0203060c0205060d0203060e0205060f02030610020206110202061202010613020307000204070102040702020307030203070402040705020307060203070702030708020407090203070a0205070b0203070c0205070d0203070e0205070f02030710020307110202071202010713020308000204080102040802020308030203080402040805020408060203080702040808020408090203080a0205080b0203080c0205080d0203080e0205080f02030810020308110203081202030813020309000204090102040902020309030203090402040905020309060203090702030908020409090203090a0203090b0203090c0203090d0203090e0203090f0203091002030911020509120203091302030a0002040a0102040a0202040a0302040a0402040a0502040a0602030a0702040a0802040a0902030a0a02050a0b02050a0c02050a0d02050a0e02050a0f02050a1002050a1102050a1202030a1302030b0002040b0102040b0202040b0302030b0402040b0502030b0602030b0702030b0802040b0902030b0a02030b0b02030b0c02030b0d02030b0e02030b0f02030b1002030b1102030b1202030b1302030c0002040c0102040c0202030c0302030c0402040c0502040c0602030c0702040c0802040c0902030c0a02050c0b02050c0c02050c0d02050c0e02050c0f02050c1002050c1102050c1202030c1302030d0002040d0102040d0202030d0302030d0402040d0502030d0602030d0702030d0802040d0902030d0a02030d0b02030d0c02030d0d02030d0e02030d0f02030d1002030d1102050d1202030d1302030e0002040e0102040e0202030e0302030e0402040e0502040e0602030e0702040e0802040e0902030e0a02050e0b02030e0c02050e0d02030e0e02050e0f02030e1002030e1102030e1202030e1302030f0002040f0102040f0202030f0302030f0402040f0502030f0602030f0702030f0802040f0902030f0a02050f0b02030f0c02050f0d02030f0e02050f0f02030f1002030f1102020f1202010f13020310000204100102041002020410030204100402041005020310060203100702031008020410090203100a0205100b0203100c0205100d0203100e0205100f02031010020210110202101202011013020311000204110102041102020411030203110402031105020411060203110702041108020411090203110a0203110b0203110c0203110d0203110e0203110f020211100202111102021112020111130203120102041202020412030204120402041205020412060203120702031208020312090201120c0202120d0202120e0202120f020212100201121102021212020112130203130202031303020313040203130502031306020313070201130c0202130d0202130e0202130f020113100201131102021312020113130201140d0202140e0201140f0201141102021412020114130201150e02011511020215120201151302011612");
        tall[52] = SSTORE2.write(hex"01ff6b72126c000000020000060200010402010105020101060200010702000109020002050201020602010207020102080200020902000301020003020200030602010307020103080200030902000403020004040200040702010408020004090200050502000508020006000200060102000602020006060200070302000704020008050200080602000a0502000a0602000b0002000b0102000b0202000b0302000b0402010b0502010b0602000b0702010c0102010c0202010c0302010c0402010c0502010c0602000c0702000d0002000d0102000d0202010d0302010d0402000d0502000d0602010e0102010e0202010e0302000e0402000f0002000f0102000f0202000f030200100602001105020111060200110702001204020112050201120602011207020012080200130302011304020113050201130602001307020113080200130902001402020114030201140402011405020014060201140702011408020014090201150202011503020115040200150502011506020115070201150802001509020116030200160402011605020116060201160702001608020117050201170602011707020017080201180702001808");
        tall[53] = SSTORE2.write(hex"008d00000002000009020001070200010a020002030200020402000206020002070200020b0200030402000305020003060200030702000308020003090200030a0200030b02000405020004060200040702000408020004090200040a0200050102000505020005060200050702000508020005090200060002000602020006030200060502000606020006070200060802000702020007030200070502000706020007070200070802000803020008040200080502000806020008070200080802000903020009040200090502000906020009070200090802000a0302000a0402000a0502000a0602000a0702000a0802000a0a02000b0202000b0302000b0402000b0502000b0602000b0702000b0802000b0902000b0a02000c0102000c0402000c0502000c0602000c0702000c0802000d0502000d0602000d0702000d0802000e0402000e0502000e0602000e0702000e0802000f0502000f0602000f0702000f0802001004020010050200100602001007020010080200110102001102020011040200110502001106020011070200110802001203020012040200120502001206020012070200120802001303020013040200130502001306020013070200130802001309020014050200140602001407020014080200140902001505020015060200150702001508020015090200150a020016060200160702001608020016090200160a0200160b02001707020017090200170a0200170b0200170c020018070200180a0200180b0200180d0200190a02001a09");
        tall[62] = SSTORE2.write(hex"01ff666d4237000000020000000200000102000002020000030200000402010100020101010201010202010103020101040200020002000201020002020200020302000204020103000201030102010302020103030201030402000400020004010200040202000403020004040201050002010501020105020201050302010504020006000200060102000602020006030200060402010700020107010201070202010703020107040200080002000801020008020200080302000804020109000201090102010902020109030201090402000a0002000a0102000a0202000a0302000a04");
        tall[64] = SSTORE2.write(hex"02ff7d5799ff4d2e5c8f0000000201000602010007020100080201010502010106020101070201020402010205020102060201030302010304020103050202030602010402020104030201040402020405020104060201050102010502020105030202050402010505020105060201060102010602020106030201060402010605020206060201070102010702020107030201070402020705020107060201080002010801020108020201080302020804020108050201080602010901020109020201090302010904020109050202090602010a0002010a0102010a0202010a0302010a0402020a0502010a0602010b0102010b0202010b0302020b0402010b0502010b0602010c0002010c0102010c0202010c0302010c0402010c0502010c0602010d0102010d0202010d0302010d0402010d0502010d0602010d0702010e0102010e0202010e0302010e0402010e0502010e0602010e0702010e0802010f0002010f0202010f0302010f0402010f0502010f0602010f0702010f0802010f0902011002020110030201100402011005020110060201100702011008020110090201100a02011102020111030201110402011105020111060201110702011108020111090201110a0201110b0201110c0201110d0201110e020112020201120402011205020112060201120702011208020112090201120a0201120b0201120c0201120d0201130402011305020113060201130702011308020113090201130a0201130b0201130c0201130d0201140402011406020114080201140a0201140c0201150602011508");
        tall[66] = SSTORE2.write(hex"02ffff7216ff9d49114a0000000201000502010006020201040201010502010106020102030202020402010205020102060202030002010301020103020201030302020304020103050201030602010400020104010201040202010403020204040201040502010406020205000201050102010502020105030202050402010505020105060201060002010601020106020201060302020604020106050201060602020700020107010201070202010703020207040201070502010706020108000201080102010802020108030202080402010805020108060202090002010901020109020201090302020904020109050201090602010a0002010a0102010a0202010a0302020a0402010a0502010a0602010b0302020b0402010b0502010b0602020c0402010c0502010c0602010d0502010d06");
        tall[69] = SSTORE2.write(hex"02fffa5e20ff9d49118f0000000201000602010007020100080201010502010106020101070201020402010205020102060201030302010304020103050202030602010402020104030201040402020405020104060201050102010502020105030202050402010505020105060201060102010602020106030201060402010605020206060201070102010702020107030201070402020705020107060201080002010801020108020201080302020804020108050201080602010901020109020201090302010904020109050202090602010a0002010a0102010a0202010a0302010a0402020a0502010a0602010b0102010b0202010b0302020b0402010b0502010b0602010c0002010c0102010c0202010c0302010c0402010c0502010c0602010d0102010d0202010d0302010d0402010d0502010d0602010d0702010e0102010e0202010e0302010e0402010e0502010e0602010e0702010e0802010f0002010f0202010f0302010f0402010f0502010f0602010f0702010f0802010f0902011002020110030201100402011005020110060201100702011008020110090201100a02011102020111030201110402011105020111060201110702011108020111090201110a0201110b0201110c0201110d0201110e020112020201120402011205020112060201120702011208020112090201120a0201120b0201120c0201120d0201130402011305020113060201130702011308020113090201130a0201130b0201130c0201130d0201140402011406020114080201140a0201140c0201150602011508");
        tall[70] = SSTORE2.write(hex"003b0000000200000a0200010b0200010c02000110020002050200020c0200020f02000306020003070200030c0200030f020004080200040902000502020005030200060402000705020009000200090202000a0102000a0302000a0402000a0502000e0202000e0302000e0402000f0102001001020011000200130302001304020013050200140102001402020015000200150d02001601020016070200160a0200160d020017070200170a0200170d020018060200180a0200190402001905020019090200190e0200191002001a0a02001a0d02001a1102001b0902001b0d02001c0702001c0802001c0d02001d0e");
        tall[75] = SSTORE2.write(hex"00330000000200000302000006020001030200010502000203020002060200030002000304020004010200040202000405020005030200050402000505020007030200070402000706020008020200090002000903020009040200090502000a0102000b0202000b0302000b0402000d0302000d0402000d0502000e0202000f0102000f0302000f0402000f0502000f06020010000200110402001105020012030200120602001301020013020200130502001307020014040200140a0200140d020015090200150c0200160802001709");
        tall[78] = SSTORE2.write(hex"01ff43c58c56000000020100070200010402010105020101060201010702010203020002040201020502010206020102070200030202010303020103040200030502010306020103070201040102000402020104030201040402000405020104060201040702000500020105010201050202000503020105040201050502000506020105070200060002010601020106020200060302010604020106050200060602000607020007010201070202010703020007040201070502000706020008010201080202010803020008040201080502000806020009020201090302000904020109050200090602000a0202010a0302010a0402000a0502000a0602000b0302010b0402010b0502000b0602000c0402000c0502000c0602000e0402000e0502000e0602000f080200100402001005020010060200110802001204020012050200120602001307020013090200140702001409020015060200150902001608");
        tall[81] = SSTORE2.write(hex"01ff12c1fb56000000020100070200010402010105020101060201010702010203020002040201020502010206020102070200030202010303020103040200030502010306020103070201040102000402020104030201040402000405020104060201040702000500020105010201050202000503020105040201050502000506020105070200060002010601020106020200060302010604020106050200060602000607020007010201070202010703020007040201070502000706020008010201080202010803020008040201080502000806020009020201090302000904020109050200090602000a0202010a0302010a0402000a0502000a0602000b0302010b0402010b0502000b0602000c0402000c0502000c0602000e0402000e0502000e0602000f080200100402001005020010060200110802001204020012050200120602001307020013090200140702001409020015060200150902001608");
        tall[89] = SSTORE2.write(hex"01fffbf0df8d00000002010009020101070201010a020102030201020402010206020102070201020b0201030402010305020103060201030702010308020103090201030a0201030b02010405020104060201040702010408020104090201040a0201050102010505020105060201050702010508020105090201060002010602020106030201060502010606020106070201060802010702020107030201070502010706020107070201070802010803020108040201080502010806020108070201080802010903020109040201090502010906020109070201090802010a0302010a0402010a0502010a0602010a0702010a0802010a0a02010b0202010b0302010b0402010b0502010b0602010b0702010b0802010b0902010b0a02010c0102010c0402010c0502010c0602010c0702010c0802010d0502010d0602010d0702010d0802010e0402010e0502010e0602010e0702010e0802010f0502010f0602010f0702010f0802011004020110050201100602011007020110080201110102011102020111040201110502011106020111070201110802011203020112040201120502011206020112070201120802011303020113040201130502011306020113070201130802011309020114050201140602011407020114080201140902011505020115060201150702011508020115090201150a020116060201160702011608020116090201160a0201160b02011707020117090201170a0201170b0201170c020118070201180a0201180b0201180d0201190a02011a09");
        tall[92] = SSTORE2.write(hex"01ffff0e0e2f0000000200000302000103020002000200020102000202020002030200030002000301020003020200030302000400020004010200040202000403020005000200050102000502020005030200060002000601020006020200060302000700020007010200070202000703020008000200080102000802020008030200090002000901020009020200090302000a0002000a0102000a0202000a0302000b0002000b0102000b0202000b0302010c0202000c0302010d0102000d0302010e00");
        tall[94] = SSTORE2.write(hex"02ff08030dff2f36357500000002010009020101090201020902010308020103090201040502010407020104080201040902010503020105050201050602010507020105080201050902010601020106020201060302010604020206050201060602010607020106080201060902010700020107010202070202010703020107040202070502010706020107070201070802010709020108000202080102010802020108030201080402010805020108060201080702010808020108090201090002010901020109020201090302010904020109050201090602010907020109080201090902010a0002010a0102010a0202010a0302010a0402010a0502010a0602010a0702010a0802010a0902010b0102010b0202010b0302010b0402010b0502010b0602010b0702010b0802010b0902010c0102010c0202010c0302010c0402010c0502010c0602010c0702010c0802010c0902010d0102010d0202010d0302010d0402010d0502010d0602010d0702010d0802010d0902010e0202010e0302010e0402010e0502020e0602010e0702010e0802010e0902010f0202010f0302010f0402010f0502020f0602010f0702010f0802010f0902011003020110040201100502011007020110090201110402011105020111090201120902011309");
        tall[96] = SSTORE2.write(hex"01ffff721656000000020100070200010402010105020101060201010702010203020002040201020502010206020102070200030202010303020103040200030502010306020103070201040102000402020104030201040402000405020104060201040702000500020105010201050202000503020105040201050502000506020105070200060002010601020106020200060302010604020106050200060602000607020007010201070202010703020007040201070502000706020008010201080202010803020008040201080502000806020009020201090302000904020109050200090602000a0202010a0302010a0402000a0502000a0602000b0302010b0402010b0502000b0602000c0402000c0502000c0602000e0402000e0502000e0602000f080200100402001005020010060200110802001204020012050200120602001307020013090200140702001409020015060200150902001608");
        tall[97] = SSTORE2.write(hex"01fffa5e208d00000002010009020101070201010a020102030201020402010206020102070201020b0201030402010305020103060201030702010308020103090201030a0201030b02010405020104060201040702010408020104090201040a0201050102010505020105060201050702010508020105090201060002010602020106030201060502010606020106070201060802010702020107030201070502010706020107070201070802010803020108040201080502010806020108070201080802010903020109040201090502010906020109070201090802010a0302010a0402010a0502010a0602010a0702010a0802010a0a02010b0202010b0302010b0402010b0502010b0602010b0702010b0802010b0902010b0a02010c0102010c0402010c0502010c0602010c0702010c0802010d0502010d0602010d0702010d0802010e0402010e0502010e0602010e0702010e0802010f0502010f0602010f0702010f0802011004020110050201100602011007020110080201110102011102020111040201110502011106020111070201110802011203020112040201120502011206020112070201120802011303020113040201130502011306020113070201130802011309020114050201140602011407020114080201140902011505020115060201150702011508020115090201150a020116060201160702011608020116090201160a0201160b02011707020117090201170a0201170b0201170c020118070201180a0201180b0201180d0201190a02011a09");
        tall[98] = SSTORE2.write(hex"01fff4e2996c000000020000060200010402010105020101060200010702000109020002050201020602010207020102080200020902000301020003020200030602010307020103080200030902000403020004040200040702010408020004090200050502000508020006000200060102000602020006060200070302000704020008050200080602000a0502000a0602000b0002000b0102000b0202000b0302000b0402010b0502010b0602000b0702010c0102010c0202010c0302010c0402010c0502010c0602000c0702000d0002000d0102000d0202010d0302010d0402000d0502000d0602010e0102010e0202010e0302000e0402000f0002000f0102000f0202000f030200100602001105020111060200110702001204020112050201120602011207020012080200130302011304020113050201130602001307020113080200130902001402020114030201140402011405020014060201140702011408020014090201150202011503020115040200150502011506020115070201150802001509020116030200160402011605020116060201160702001608020117050201170602011707020017080201180702001808");
        tall[99] = SSTORE2.write(hex"01ffffe33037000000020000000200000102000002020000030200000402010100020101010201010202010103020101040200020002000201020002020200020302000204020103000201030102010302020103030201030402000400020004010200040202000403020004040201050002010501020105020201050302010504020006000200060102000602020006030200060402010700020107010201070202010703020107040200080002000801020008020200080302000804020109000201090102010902020109030201090402000a0002000a0102000a0202000a0302000a04");
        tall[101] = SSTORE2.write(hex"02ff2b162aff1d29524a0000000201000502010006020201040201010502010106020102030202020402010205020102060202030002020301020103020201030302020304020103050201030602010400020104010201040202010403020204040201040502010406020205000202050102010502020105030202050402010505020105060201060002010601020106020201060302020604020106050201060602020700020207010201070202010703020207040201070502010706020108000201080102010802020108030202080402010805020108060202090002020901020109020201090302020904020109050201090602010a0002010a0102010a0202010a0302020a0402010a0502010a0602010b0302020b0402010b0502010b0602020c0402010c0502010c0602010d0502010d06");
        tall[102] = SSTORE2.write(hex"02ff5d9c9dff496e808f0000000201000602010007020100080201010502010106020101070201020402010205020102060201030302010304020103050202030602010402020104030201040402020405020104060201050102010502020105030202050402010505020105060201060102010602020106030201060402010605020206060201070102010702020107030201070402020705020107060201080002010801020108020201080302020804020108050201080602010901020109020201090302010904020109050202090602010a0002010a0102010a0202010a0302010a0402020a0502010a0602010b0102010b0202010b0302020b0402010b0502010b0602010c0002010c0102010c0202010c0302010c0402010c0502010c0602010d0102010d0202010d0302010d0402010d0502010d0602010d0702010e0102010e0202010e0302010e0402010e0502010e0602010e0702010e0802010f0002010f0202010f0302010f0402010f0502010f0602010f0702010f0802010f0902011002020110030201100402011005020110060201100702011008020110090201100a02011102020111030201110402011105020111060201110702011108020111090201110a0201110b0201110c0201110d0201110e020112020201120402011205020112060201120702011208020112090201120a0201120b0201120c0201120d0201130402011305020113060201130702011308020113090201130a0201130b0201130c0201130d0201140402011406020114080201140a0201140c0201150602011508");
        tall[107] = SSTORE2.write(hex"03ff9d4911ffe5e5deffff0e0e4b00000002010000020000010201010002000101020101020200020102010202020102030201020e020103000200030102010302020103030201030402010305020103060201030702010308020103090201030a0201030b0201030c0201030d0201030e0200040102010402020104030201040e0201050002000501020105020201050302010600020006010201060202010603020106040201060502010610020107000200070102010702020107030201070f020107100200080102010802020108030202080f0202081002000901020109020203090f0203091002010a0002000a0102010a0202030a0f02030a1002010b0002000b0102010b0202010b0302030b0f02030b1002010c0002000c0102010c0202010c0302010c0402010c0502010c0602010c0802030c0f02030c10");
        tall[111] = SSTORE2.write(hex"02ff9d4911ffbb5d451600000002000001020001000201010102000102020002000202020102000202020003000202030102000302020004000202040102000402020005000202050102000502020006000202060102000602020007010200080102000901");
        tall[121] = SSTORE2.write(hex"01ffc54e387100000002000001020000020200000302000004020001000200010102000102020001030200010402000105020002010200020202000203020002040200020502000301020103020200030302000304020003050200030602000401020104020200040302000404020004050200040602000501020105020200050302000504020005050200050602000601020106020200060302000604020006050200060602000701020107020200070302000704020007050200070602000801020108020200080302000804020008050200080602000901020109020200090302000904020009050200090602000a0102010a0202000a0302000a0402000a0502000a0602000b0102010b0202000b0302000b0402000b0502000b0602000c0102010c0202000c0302000c0402000c0502000c0602000d0102010d0202000d0302000d0402000d0502000d0602000e0102010e0202000e0302000e0402000e0502000e0602000f0102010f0202000f0302000f0402000f0502000f060200100102001002020010030200100402001005020010060200110002001101020011020200110302001104020011050200120102001202020012030200120402001205020013020200130302001304");
        tall[123] = SSTORE2.write(hex"01ffd168216b00000002000003020000040200000502000101020001020200010302000104020001050200010602010201020102020200020302000204020002050200020602010301020003020201030302000304020003050200030602010401020004020201040302000404020004050200040602010501020005020201050302000504020005050200050602010601020006020201060302000604020006050200060602010701020007020201070302000704020007050200070602010801020008020201080302000804020008050200080602010901020009020201090302000904020009050200090602010a0102000a0202010a0302000a0402000a0502000a0602010b0102000b0202010b0302000b0402000b0502000b0602010c0102000c0202010c0302000c0402000c0502000c0602010d0102000d0202010d0302000d0402000d0502000d0602010e0102000e0202010e0302000e0402000e0502000e0602010f0002010f0102000f0202010f0302000f0402000f0502000f0602011000020010010201100202001003020010040200100502011100020111010201110202001103020011040200120202001203");
        tall[137] = SSTORE2.write(hex"03ffe4a499fff9f4f2ffff82ad44000000020100010201000202010003020100040201010102000102020001030201010402010201020002020200020302010204020103000201030102000302020003030201030402010400020204010200040202000403020104040201050002020501020005020203050302010504020106000200060102000602020306030201060402010700020007010200070202030703020107040201080002020801020008020203080302010804020109000202090102000902020009030201090402010a0002010a0102000a0202000a0302010a0402010b0102000b0202000b0302010b0402010c0102000c0202000c0302010c0402010d0102000d0202000d0302010d0402010e0102010e0202010e0302010e04");
        tall[237] = SSTORE2.write(hex"01ffffffff120000000201000e0200010f020001100200020f020002100201030e02010c0002000d0102000d0202010e0002000e0102000e02020118080201180a020019090200190a02001a0902001a0a");
        tall[239] = SSTORE2.write(hex"02ff61a84bff8ac1632300000002010013020101030202011202010113020102130202030302010304020203070201031002010403020104040202050a0201060102020700020107010202070c020108010201080402010a0202010a1502020b0102010b0202020b1402010b1502010c0202010c0702020c1002010c1502020e0502020e0d02020f0702020f0f0202110d0201110e0201120e");
        tall[240] = SSTORE2.write(hex"01ffffffff0c0000000201000002000101020001020201020002000201020002020201100a0200110b0200110c0200120b0200120c0201130a");
        tall[244] = SSTORE2.write(hex"01ffffffff1800000002010008020000090200000a020001090200010a02010208020107000200080102000802020009010200090202010a0002011802020019030200190402011a0202001a0302001a0402011e0d02011f0c02001f0d02001f0e0200200d0200200e");
        tall[245] = SSTORE2.write(hex"07ff7d7d7dff959595ff464646ff707070ffc2c2c2ffa1a1a180000000a102000002010013020100140201001502020018020200190201011102010112020101130201011402010115020101160202011702020118020201190202011a0201021102010212020102130201021402010215020202160202021702020218020202190202021a020003090200030a0200030b0200030d0200030f020003100200031102000312020003130200031402000315020303160202031702020318020203190202031a02000408020304090203040a0203040b0200040c0203040d0200040e0203040f020304100203041102030412020304130203041402030415020404160203041702030418020204190202041a0205041b0200050702030508020305090203050a0203050b0200050c0200050d0203050e0203050f020305100203051102030512020305130203051402030515020405160204051702040518020305190205051a0205051b020006060203060702030608020306090203060a0200060b0200060c0200060d0200060e0203060f020306100203061102030612020306130203061402030615020306160204061702030618020506190206061a0205061b020007060203070702000708020307090200070a0200070b0200070c0200070d0200070e0200070f020307100203071102000712020307130203071402030715020307160203071702030718020507190206071a0205071b0205071c02000805020308060203080702030808020308090200080a0200080b0200080c0207080d0200080f020008100203081102030812020008130200081402030815020308160203081702030818020508190206081a0205081b0205081c02000905020309060203090702030908020309090200090a0200090b0207090c0207090d020009100203091102030912020309130203091402000915020009160203091702000918020509190206091a0205091b0205091c02000a0402030a0502030a0602030a0702030a0802030a0902000a0a02070a0c02070a0d02000a1002030a1102030a1202030a1302030a1402030a1502030a1602000a1702000a1802050a1902050a1a02050a1b02050a1c02000b0402030b0502030b0602030b0702030b0802030b0902000b0a02070b0c02070b0d02000b1002030b1102030b1202030b1302030b1402030b1502030b1602030b1702000b1802050b1902060b1a02050b1b02050b1c02000c0402030c0502030c0602030c0702030c0802030c0902000c0a02070c0c02070c0d02000c1002030c1102030c1202030c1302030c1402030c1502030c1602030c1702000c1802050c1902050c1a02050c1b02050c1c02000d0402030d0502030d0602030d0702030d0802030d0902000d0a02070d0c02070d0d02000d1002030d1102030d1202000d1302030d1402000d1502030d1602000d1702000d1802000d1902050d1a02050d1b02050d1c02000e0402030e0502030e0602030e0702030e0802030e0902000e0a02070e0c02070e0d02000e1002000e1102030e1202030e1302000e1402030e1502000e1602030e1702000e1802060e1a02050e1b02050e1c02000f0402030f0502030f0602030f0702030f0802030f0902000f0a02070f0b02070f0c02070f0d02000f1002000f1102030f1202030f1302030f1402030f1502030f1602030f1702000f1802060f1a02050f1b020010030203100402031005020310060203100702031008020310090200100a0207100c0207100d020010100200101102001012020310130200101402001015020010160200101702001018020010190206101a0205101b020011030203110402031105020311060203110702031108020311090200110a0207110c0207110d0200111002001111020311120203111302031114020311150203111602031117020011180206111a0205111b020012030203120402031205020312060203120702031208020312090200120a0207120c0207120d0200121002001211020312120203121302001214020312150200121602031217020012180206121a0205121b0205121c020013030203130402031305020313060203130702031308020313090200130a0207130c0207130d020013100203131102031312020013130203131402001315020313160200131702001318020013190205131a0205131b0205131c020014030203140402031405020314060203140702031408020314090200140a0207140c0207140d020014100203141102031412020314130203141402031415020314160203141702001418020514190206141a0205141b0205141c0200150102001502020315030203150402031505020315060203150702031508020315090200150a0200150b0207150c0207150d020015100203151102031512020315130203151402031515020315160203151702001518020515190206151a0205151b0205151c020016000203160102031602020316030203160402031605020316060203160702031608020316090203160a0200160b0200160c0207160d0200160f020016100203161102031612020316130203161402031615020316160203161702001618020516190205161a0205161b0205161c020017000203170102031702020317030200170402031705020317060203170702031708020017090203170a0203170b0200170c0207170d0200170e0200170f020317100203171102031712020317130203171402031715020317160200171702001718020517190206171a0205171b0200180102001802020018030200180402031805020318060203180702001808020318090203180a0203180b0200180c0200180d0200180e0200180f020318100203181102031812020318130203181402001815020018160203181702001818020518190206181a0205181b0205181c02001905020319060203190702031908020319090200190a0203190b0203190c0200190d0200190e0200190f020319100203191102001912020019130200191402031915020319160203191702031918020519190205191a0205191b0205191c02001a0602031a0702031a0802031a0902031a0a02031a0b02031a0c02001a0d02001a0e02001a0f02031a1002001a1102031a1202031a1302031a1402031a1502031a1602041a1702031a1802051a1902061a1a02051a1b02051a1c02001b0702031b0802031b0902031b0a02031b0b02031b0c02031b0d02001b0e02031b0f02031b1002031b1102031b1202031b1302031b1402031b1502041b1602041b1702031b1802031b1902051b1a02051b1b02051b1c02001c0802031c0902031c0a02031c0b02031c0c02031c0d02031c0e02031c0f02031c1002031c1102031c1202031c1302031c1402041c1502041c1602041c1702041c1802031c1902021c1a02051c1b02001d0902001d0a02031d0b02001d0c02031d0d02001d0e02031d0f02031d1002031d1102031d1202001d1302041d1402041d1502041d1602031d1702031d1802021d1902021d1a02051d1b02011e0a02001e0b02001e0d02001e0f02001e1002001e1102001e1202001e1302031e1402031e1502031e1602021e1702021e1802021e1902021e1a02011f0a02011f1002011f1102011f1202011f1302021f1402021f1502021f1602021f1702021f1802021f1902021f1a0201201002012011020120120202201402022015020220160202201702022018020220190202201a0202211502022116020221170202211802022119");
        tall[246] = SSTORE2.write(hex"01ff55555559010000020000090200000a0200000b0200000c0200000d0200000e0200000f0200001002000011020000120200001302000014020001060200010702000108020101090201010a0201010b0201010c0201010d0201010e0201010f0201011002010111020101120201011302010114020001150200011602000205020102060201020702010208020102090201020a0201020b0201020c0201020d0201020e0201020f02010210020102110201021202010213020102140201021502010216020002170200030402010305020003060200030702010308020003090200030a0200030b0200030c0200030d0200030e0200030f020003100200031102000312020103130201031402010315020003160200040402010405020004060200040702000408020004090200040a0200040b0200040c0200040d0200040e0200040f0200041002000411020004120200041302010414020104150200041602000503020105040201050502000506020005070200050802000509020005130201051402010515020005160200060302010604020006050200060602000607020006130200061402010615020006160200070202010703020107040200070502000706020007130201071402000715020007160200080202010803020108040200080502000813020108140201081502000816020009020201090302010904020009050200091302010914020109150200091602000a0202010a0302010a0402000a0502000a1302000a1402010a1502000a1602000b0202010b0302010b0402000b0502000b1302010b1402000b1502000b1602000c0202010c0302010c0402000c0502000c1302010c1402010c1502000c1602000d0102010d0202010d0302010d0402000d0502000d1302000d1402000d1502000d1602000e0102010e0202010e0302010e0402000e0502000e1302010e1402010e1502000e1602000f0102010f0202010f0302010f0402000f0502000f1302010f1402000f1502000fa020016100200161102001612020016130201161402011615020016160200170402011705020117060201170702011708020017090200170a0200170b0200170c0200170d0200170e0200170f0200171002001711020017120201171302001714020117150200171602001805020118060201180702011808020118090200180a0200180b0200180c0200180d0200180e0200180f02001810020018110201181202001813020118140201181502001816020019060201190702011908020119090201190a0201190b0201190c0201190d0201190e0201190f020119100201191102001912020119130201191402011915020119160200191702001a0702001a0802011a0902011a0a02011a0b02011a0c02011a0d02011a0e02011a0f02011a1002001a1102011a1202011a1302011a1402001a1502001a1602001b0902001b0a02001b0b02001b0c02001b0d02001b0e02001b0f02001b1002001b1102001b1202001b1302001b14");
        tall[247] = SSTORE2.write(hex"02ff8ac163ffeceb8059010000020000090200000a0200000b0200000c0200000d0200000e0200000f0200001002000011020000120200001302000014020001060200010702000108020101090201010a0201010b0201010c0201010d0201010e0201010f0201011002010111020101120201011302010114020001150200011602000205020102060201020702010208020102090201020a0201020b0201020c0201020d0201020e0201020f02010210020102110201021202010213020102140201021502010216020002170200030402010305020003060200030702010308020003090200030a0200030b0200030c0200030d0200030e0200030f020003100200031102000312020103130201031402010315020003160200040402010405020004060200040702000408020004090200040a0200040b0200040c0200040d0200040e0200040f0200041002000411020004120200041302010414020104150200041602000503020105040201050502000506020005070200050802000509020005130201051402010515020005160200060302010604020006050200060602000607020006130200061402010615020006160200070202010703020107040200070502000706020007130201071402000715020007160200080202010803020108040200080502000813020108140201081502000816020009020201090302010904020009050200091302010914020109150200091602000a0202010a0302010a0402000a0502000a1302000a1402010a1502000a1602000b0202010b0302010b0402000b0502000b1302010b1402000b1502000b1602000c0202010c0302010c0402000c0502000c1302010c1402010c1502000c1602000d0102010d0202010d0302010d0402000d0502000d1302000d1402000d1502000d1602000e0102010e0202020e0302010e0402000e0502000e1302010e1402010e1502000e1602000f0102010f0202020f0302010f0402000f0502000f1302010f1402000f1502000fa020016100200161102001612020016130201161402011615020016160200170402011705020117060201170702011708020017090200170a0200170b0200170c0200170d0200170e0200170f0200171002001711020017120201171302001714020117150200171602001805020118060201180702011808020118090200180a0200180b0200180c0200180d0200180e0200180f02001810020018110201181202001813020118140201181502001816020019060201190702011908020119090201190a0201190b0201190c0201190d0201190e0201190f020119100201191102001912020119130201191402011915020119160200191702001a0702001a0802011a0902011a0a02011a0b02011a0c02011a0d02011a0e02011a0f02011a1002001a1102011a1202011a1302011a1402001a1502001a1602001b0902001b0a02001b0b02001b0c02001b0d02001b0e02001b0f02001b1002001b1102001b1202001b1302001b14");
        tall[248] = SSTORE2.write(hex"02ff8e4f49ffe6d3b159010000020000090200000a0200000b0200000c0200000d0200000e0200000f0200001002000011020000120200001302000014020001060200010702000108020101090201010a0201010b0201010c0201010d0201010e0201010f0201011002010111020101120201011302010114020001150200011602000205020102060201020702010208020102090201020a0201020b0201020c0201020d0201020e0201020f02010210020102110201021202010213020102140201021502010216020002170200030402010305020003060200030702010308020003090200030a0200030b0200030c0200030d0200030e0200030f020003100200031102000312020103130201031402010315020003160200040402010405020004060200040702000408020004090200040a0200040b0200040c0200040d0200040e0200040f0200041002000411020004120200041302010414020104150200041602000503020105040201050502000506020005070200050802000509020005130201051402010515020005160200060302010604020006050200060602000607020006130200061402010615020006160200070202010703020107040200070502000706020007130202071402000715020007160200080202010803020108040200080502000813020208140202081502000816020009020201090302010904020009050200091302020914020209150200091602000a0202010a0302010a0402000a0502000a1302000a1402020a1502000a1602000b0202010b0302010b0402000b0502000b1302010b1402000b1502000b1602000c0202010c0302010c0402000c0502000c1302010c1402010c1502000c1602000d0102010d0202010d0302010d0402000d0502000d1302000d1402000d1502000d1602000e0102010e0202010e0302010e0402000e0502000e1302010e1402010e1502000e1602000f0102010f0202010f0302010f0402000f0502000f1302010f1402000f1502000fa020016100200161102001612020016130201161402011615020016160200170402011705020117060201170702011708020017090200170a0200170b0200170c0200170d0200170e0200170f0200171002001711020017120201171302001714020117150200171602001805020118060201180702011808020118090200180a0200180b0200180c0200180d0200180e0200180f02001810020018110201181202001813020118140201181502001816020019060201190702011908020119090201190a0201190b0201190c0201190d0201190e0201190f020119100201191102001912020119130201191402011915020119160200191702001a0702001a0802011a0902011a0a02011a0b02011a0c02011a0d02011a0e02011a0f02011a1002001a1102011a1202011a1302011a1402001a1502001a1602001b0902001b0a02001b0b02001b0c02001b0d02001b0e02001b0f02001b1002001b1102001b1202001b1302001b14");
        tall[249] = SSTORE2.write(hex"00140000000200000202000003020001000200010102000102020001030200020302000304020003050200040402000405020005040200060402000802020008030200090002000901020009020200090302000a03");

        rects[17] = Rectangle(5, 9);
        rects[18] = Rectangle(5, 9);
        rects[20] = Rectangle(5, 9);
        rects[21] = Rectangle(5, 9);
        rects[22] = Rectangle(5, 8);
        rects[23] = Rectangle(4, 9);
        rects[24] = Rectangle(5, 9);
        rects[25] = Rectangle(5, 9);
        rects[26] = Rectangle(5, 9);
        rects[27] = Rectangle(5, 9);
        rects[28] = Rectangle(5, 9);
        rects[29] = Rectangle(5, 9);
        rects[30] = Rectangle(5, 9);
        rects[31] = Rectangle(5, 7);
        rects[32] = Rectangle(7, 6);
        rects[33] = Rectangle(5, 9);
        rects[34] = Rectangle(5, 9);
        rects[35] = Rectangle(5, 9);
        rects[37] = Rectangle(5, 9);
        rects[38] = Rectangle(5, 9);
        rects[39] = Rectangle(5, 7);
        rects[40] = Rectangle(4, 9);
        rects[41] = Rectangle(5, 8);
        rects[42] = Rectangle(5, 9);
        rects[43] = Rectangle(5, 9);
        rects[46] = Rectangle(6, 9);
        rects[48] = Rectangle(4, 9);
        rects[49] = Rectangle(6, 9);
        rects[51] = Rectangle(10, 4);
        rects[52] = Rectangle(6, 2);
        rects[53] = Rectangle(5, 2);
        rects[54] = Rectangle(15, 3);
        rects[55] = Rectangle(9, 15);
        rects[56] = Rectangle(10, 4);
        rects[57] = Rectangle(10, 3);
        rects[58] = Rectangle(14, 4);
        rects[59] = Rectangle(12, 4);
        rects[60] = Rectangle(11, 3);
        rects[61] = Rectangle(18, 4);
        rects[62] = Rectangle(13, 4);
        rects[63] = Rectangle(11, 3);
        rects[64] = Rectangle(10, 2);
        rects[65] = Rectangle(10, 2);
        rects[66] = Rectangle(11, 3);
        rects[67] = Rectangle(14, 4);
        rects[68] = Rectangle(8, 5);
        rects[69] = Rectangle(10, 2);
        rects[70] = Rectangle(3, 5);
        rects[71] = Rectangle(10, 2);
        rects[72] = Rectangle(10, 3);
        rects[73] = Rectangle(8, 4);
        rects[74] = Rectangle(8, 5);
        rects[75] = Rectangle(7, 4);
        rects[76] = Rectangle(14, 4);
        rects[77] = Rectangle(14, 4);
        rects[78] = Rectangle(5, 3);
        rects[79] = Rectangle(8, 4);
        rects[80] = Rectangle(7, 5);
        rects[81] = Rectangle(5, 3);
        rects[82] = Rectangle(10, 4);
        rects[83] = Rectangle(12, 4);
        rects[84] = Rectangle(10, 3);
        rects[85] = Rectangle(11, 7);
        rects[86] = Rectangle(7, 3);
        rects[87] = Rectangle(14, 4);
        rects[88] = Rectangle(10, 2);
        rects[89] = Rectangle(5, 2);
        rects[90] = Rectangle(18, 4);
        rects[91] = Rectangle(7, 2);
        rects[92] = Rectangle(11, 5);
        rects[93] = Rectangle(8, 5);
        rects[94] = Rectangle(8, 1);
        rects[95] = Rectangle(10, 4);
        rects[96] = Rectangle(5, 3);
        rects[97] = Rectangle(5, 2);
        rects[98] = Rectangle(6, 2);
        rects[99] = Rectangle(13, 4);
        rects[100] = Rectangle(8, 1);
        rects[101] = Rectangle(11, 3);
        rects[102] = Rectangle(10, 2);
        rects[103] = Rectangle(8, 1);
        rects[104] = Rectangle(4, 8);
        rects[105] = Rectangle(5, 7);
        rects[106] = Rectangle(10, 14);
        rects[107] = Rectangle(10, 15);
        rects[108] = Rectangle(25, 13);
        rects[109] = Rectangle(14, 26);
        rects[110] = Rectangle(18, 26);
        rects[111] = Rectangle(4, 15);
        rects[121] = Rectangle(7, 14);
        rects[122] = Rectangle(9, 15);
        rects[123] = Rectangle(7, 14);
        rects[124] = Rectangle(9, 15);
        rects[125] = Rectangle(8, 14);
        rects[126] = Rectangle(8, 14);
        rects[127] = Rectangle(9, 15);
        rects[128] = Rectangle(7, 15);
        rects[129] = Rectangle(8, 14);
        rects[130] = Rectangle(8, 13);
        rects[131] = Rectangle(8, 14);
        rects[132] = Rectangle(7, 15);
        rects[133] = Rectangle(8, 14);
        rects[134] = Rectangle(7, 15);
        rects[135] = Rectangle(9, 15);
        rects[136] = Rectangle(9, 15);
        rects[137] = Rectangle(9, 14);
        rects[138] = Rectangle(11, 12);
        rects[139] = Rectangle(11, 12);
        rects[140] = Rectangle(9, 10);
        rects[141] = Rectangle(10, 11);
        rects[142] = Rectangle(10, 10);
        rects[143] = Rectangle(10, 12);
        rects[144] = Rectangle(10, 10);
        rects[145] = Rectangle(11, 12);
        rects[146] = Rectangle(9, 11);
        rects[147] = Rectangle(9, 10);
        rects[148] = Rectangle(11, 11);
        rects[149] = Rectangle(9, 12);
        rects[150] = Rectangle(10, 11);
        rects[151] = Rectangle(11, 10);
        rects[152] = Rectangle(10, 11);
        rects[153] = Rectangle(11, 10);
        rects[154] = Rectangle(10, 11);
        rects[155] = Rectangle(10, 11);
        rects[156] = Rectangle(11, 12);
        rects[157] = Rectangle(9, 11);
        rects[158] = Rectangle(9, 12);
        rects[159] = Rectangle(9, 10);
        rects[160] = Rectangle(11, 12);
        rects[161] = Rectangle(9, 10);
        rects[162] = Rectangle(7, 11);
        rects[163] = Rectangle(10, 12);
        rects[164] = Rectangle(11, 12);
        rects[165] = Rectangle(11, 12);
        rects[166] = Rectangle(10, 11);
        rects[167] = Rectangle(9, 11);
        rects[237] = Rectangle(4, 3);
        rects[238] = Rectangle(4, 4);
        rects[239] = Rectangle(9, 7);
        rects[240] = Rectangle(12, 2);
        rects[241] = Rectangle(6, 7);
        rects[242] = Rectangle(7, 14);
        rects[243] = Rectangle(3, 11);
        rects[244] = Rectangle(2, 4);
        rects[245] = Rectangle(1, 2);
        rects[246] = Rectangle(4, 4);
        rects[247] = Rectangle(4, 4);
        rects[248] = Rectangle(4, 4);
        rects[249] = Rectangle(13, 5);
        rects[250] = Rectangle(11, 12);
        rects[252] = Rectangle(11, 12);
        rects[253] = Rectangle(10, 10);
    }
}

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

import "./GIFEncoder.sol";

interface ICrypToadzBuilder {
    function getImage(uint8[] memory metadata, uint256 tokenId) external view returns (GIF memory gif);
    function getImage(uint8[] memory metadata) external view returns (GIF memory gif);
}

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

import "./GIFFrame.sol";

interface ICrypToadzDeltas {
    function drawDelta(GIFFrame memory frame, uint tokenId, uint8 deltaFile) external view returns (uint32[] memory buffer);
    function getDeltaFileForToken(uint tokenId) external view returns (int8);
}

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

error UnsupportedDrawInstruction(uint8 instructionType);
error DoNotAddBlackToColorTable();
error InvalidDrawOrder(uint8 featureId);
error FailedToDecompress(uint errorCode);
error InvalidDecompressionLength(uint expected, uint actual);
error ImageFileOutOfRange(uint value);
error TraitOutOfRange(uint value);
error BadTraitCount(uint8 value);
error BadTraitChoice(uint8 value);

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

import "./lib/InflateLib.sol";
import "./lib/SSTORE2.sol";
import "./Errors.sol";

library BufferUtils {
    function decompress(address compressed, uint256 decompressedLength)
        internal
        view
        returns (bytes memory)
    {
        (InflateLib.ErrorCode code, bytes memory buffer) = InflateLib.puff(
            SSTORE2.read(compressed),
            decompressedLength
        );
        if (code != InflateLib.ErrorCode.ERR_NONE)
            revert FailedToDecompress(uint256(code));
        if (buffer.length != decompressedLength)
            revert InvalidDecompressionLength(
                decompressedLength,
                buffer.length
            );
        return buffer;
    }

    function advanceToTokenPosition(uint256 tokenId, bytes memory buffer)
        internal
        pure
        returns (uint256 position, uint8 length)
    {
        uint256 id;
        while (id != tokenId) {
            (id, position) = BufferUtils.readUInt32(position, buffer);
            (length, position) = BufferUtils.readByte(position, buffer);
            if (id != tokenId) {
                position += length;
                if (position >= buffer.length) return (position, 0);
            }
        }
        return (position, length);
    }

    function advanceToTokenPositionDelta(uint256 tokenId, bytes memory buffer)
        internal
        pure
        returns (uint256 position, uint32 length)
    {
        uint256 id;
        while (id != tokenId) {
            (id, position) = BufferUtils.readUInt32(position, buffer);
            (length, position) = BufferUtils.readUInt32(position, buffer);
            if (id != tokenId) {
                position += length;
                if (position >= buffer.length) return (position, 0);
            }
        }
        return (position, length);
    }

    function readUInt32(uint256 position, bytes memory buffer)
        internal
        pure
        returns (uint32, uint256)
    {
        uint8 d1 = uint8(buffer[position++]);
        uint8 d2 = uint8(buffer[position++]);
        uint8 d3 = uint8(buffer[position++]);
        uint8 d4 = uint8(buffer[position++]);
        return ((16777216 * d4) + (65536 * d3) + (256 * d2) + d1, position);
    }

    function readByte(uint256 position, bytes memory buffer)
        internal
        pure
        returns (uint8, uint256)
    {
        uint8 value = uint8(buffer[position++]);
        return (value, position);
    }

    function abs(int256 x) internal pure returns (int256) {
        return x >= 0 ? x : -x;
    }
}

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

import "./IPixelRenderer.sol";
import "./BufferUtils.sol";
import "./Errors.sol";

/** @notice Pixel renderer using basic drawing instructions: fill, line, and dot. */
contract PixelRenderer is IPixelRenderer {

    struct Point2D {
        int32 x;
        int32 y;
    }

    struct Line2D {
        Point2D v0;
        Point2D v1;
        uint32 color;
    }

    function drawFrameWithOffsets(DrawFrame memory f) external pure returns (uint32[] memory buffer, uint) {       
        
        (uint32 instructionCount, uint position) = BufferUtils.readUInt32(f.position, f.buffer);
        f.position = position;
        
        for(uint32 i = 0; i < instructionCount; i++) {

            uint8 instructionType = uint8(f.buffer[f.position++]);                   

            if(instructionType == 0) {   
                uint32 color = f.colors[uint8(f.buffer[f.position++])];
                for (uint16 x = 0; x < f.frame.width; x++) {
                    for (uint16 y = 0; y < f.frame.height; y++) {
                        f.frame.buffer[f.frame.width * y + x] = color;
                    }
                }
            }
            else if(instructionType == 1)
            {                
                uint32 color = f.colors[uint8(f.buffer[f.position++])];

                int32 x0 = int8(uint8(f.buffer[f.position++]));                
                int32 y0 = int8(uint8(f.buffer[f.position++]));                
                int32 x1 = int8(uint8(f.buffer[f.position++]));
                int32 y1 = int8(uint8(f.buffer[f.position++]));

                x0 += int8(f.ox);
                y0 += int8(f.oy);
                x1 += int8(f.ox);
                y1 += int8(f.oy);

                line(f.frame, PixelRenderer.Line2D(
                    PixelRenderer.Point2D(x0, y0), 
                    PixelRenderer.Point2D(x1, y1),
                    color), f.blend);
            }
            else if(instructionType == 2)
            {   
                uint32 color = f.colors[uint8(f.buffer[f.position++])];
                
                int32 x = int8(uint8(f.buffer[f.position++]));
                int32 y = int8(uint8(f.buffer[f.position++]));
                x += int8(f.ox);
                y += int8(f.oy);

                dot(f.frame, x, y, color, f.blend);
            } else {
                revert UnsupportedDrawInstruction(instructionType);
            }
        }

        return (f.frame.buffer, f.position);
    }
    
    function getColorTable(bytes memory buffer, uint position) external pure returns(uint32[] memory colors, uint) {
        
        uint8 colorCount = uint8(buffer[position++]);
        colors = new uint32[](1 + colorCount);
        colors[0] = 0xFF000000;
        
        for(uint8 i = 0; i < colorCount; i++) {
            uint32 a = uint32(uint8(buffer[position++]));
            uint32 r = uint32(uint8(buffer[position++]));
            uint32 g = uint32(uint8(buffer[position++]));
            uint32 b = uint32(uint8(buffer[position++]));
            uint32 color = 0;
            color |= a << 24;
            color |= r << 16;
            color |= g << 8;
            color |= b << 0;

            if(color == colors[0]) {
                revert DoNotAddBlackToColorTable();
            }
             
            colors[i + 1] = color;                   
        }

        return (colors, position);
    }

    function dot(
        GIFFrame memory frame,
        int32 x,
        int32 y,
        uint32 color,
        bool blend
    ) private pure {
        uint32 p = uint32(int16(frame.width) * y + x);
        frame.buffer[p] = blend ? blendPixel(frame.buffer[p], color) : color;
    }

    function line(GIFFrame memory frame, Line2D memory f, bool blend)
        private
        pure
    {
        int256 x0 = f.v0.x;
        int256 x1 = f.v1.x;
        int256 y0 = f.v0.y;
        int256 y1 = f.v1.y;

        int256 dx = BufferUtils.abs(x1 - x0);
        int256 dy = BufferUtils.abs(y1 - y0);

        int256 err = (dx > dy ? dx : -dy) / 2;

        for (;;) {
            if (
                x0 <= int32(0) + int16(frame.width) - 1 &&
                x0 >= int32(0) &&
                y0 <= int32(0) + int16(frame.height) - 1 &&
                y0 >= int32(0)
            ) {
                uint256 p = uint256(int16(frame.width) * y0 + x0);
                frame.buffer[p] = blend ? blendPixel(frame.buffer[p], f.color) : f.color;
            }

            if (x0 == x1 && y0 == y1) break;
            int256 e2 = err;
            if (e2 > -dx) {
                err -= dy;
                x0 += x0 < x1 ? int8(1) : -1;
            }
            if (e2 < dy) {
                err += dx;
                y0 += y0 < y1 ? int8(1) : -1;
            }
        }
    }

    function blendPixel(uint32 bg, uint32 fg) private pure returns (uint32) {
        uint32 r1 = bg >> 16;
        uint32 g1 = bg >> 8;
        uint32 b1 = bg;
        
        uint32 a2 = fg >> 24;
        uint32 r2 = fg >> 16;
        uint32 g2 = fg >> 8;
        uint32 b2 = fg;
        
        uint32 alpha = (a2 & 0xFF) + 1;
        uint32 inverseAlpha = 257 - alpha;

        uint32 r = (alpha * (r2 & 0xFF) + inverseAlpha * (r1 & 0xFF)) >> 8;
        uint32 g = (alpha * (g2 & 0xFF) + inverseAlpha * (g1 & 0xFF)) >> 8;
        uint32 b = (alpha * (b2 & 0xFF) + inverseAlpha * (b1 & 0xFF)) >> 8;

        uint32 rgb = 0;
        rgb |= uint32(0xFF) << 24;
        rgb |= r << 16;
        rgb |= g << 8;
        rgb |= b;

        return rgb;
    }
}

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

import "./GIFFrame.sol";
import "./IPixelRenderer.sol";

library GIFDraw {
    function draw(
        IPixelRenderer renderer,
        GIFFrame memory frame,
        bytes memory buffer,
        uint256 position,
        uint8 offsetX,
        uint8 offsetY,
        bool blend
    ) internal pure returns (uint256) {
        (uint32[] memory colors, uint256 positionAfterColor) = renderer.getColorTable(buffer, position);
        position = positionAfterColor;

        (uint32[] memory newBuffer, uint256 positionAfterDraw) = renderer.drawFrameWithOffsets(
            DrawFrame(
                buffer,
                position,
                frame,
                colors,
                offsetX,
                offsetY,
                blend
            )
        );

        frame.buffer = newBuffer;
        return positionAfterDraw;
    }
}

// SPDX-License-Identifier: MIT
// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)

pragma solidity ^0.8.0;

/**
 * @dev Provides information about the current execution context, including the
 * sender of the transaction and its data. While these are generally available
 * via msg.sender and msg.data, they should not be accessed in such a direct
 * manner, since when dealing with meta-transactions the account sending and
 * paying for execution may not be the actual sender (as far as an application
 * is concerned).
 *
 * This contract is only required for intermediate, library-like contracts.
 */
abstract contract Context {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }

    function _msgData() internal view virtual returns (bytes calldata) {
        return msg.data;
    }
}

// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

import "./Bytecode.sol";

/**
  @title A key-value storage with auto-generated keys for storing chunks of data with a lower write & read cost.
  @author Agustin Aguilar <[email protected]>

  Readme: https://github.com/0xsequence/sstore2#readme
*/
library SSTORE2 {
  error WriteError();

  /**
    @notice Stores `_data` and returns `pointer` as key for later retrieval
    @dev The pointer is a contract address with `_data` as code
    @param _data to be written
    @return pointer Pointer to the written `_data`
  */
  function write(bytes memory _data) internal returns (address pointer) {
    // Append 00 to _data so contract can't be called
    // Build init code
    bytes memory code = Bytecode.creationCodeFor(
      abi.encodePacked(
        hex'00',
        _data
      )
    );

    // Deploy contract using create
    assembly { pointer := create(0, add(code, 32), mload(code)) }

    // Address MUST be non-zero
    if (pointer == address(0)) revert WriteError();
  }

  /**
    @notice Reads the contents of the `_pointer` code as data, skips the first byte 
    @dev The function is intended for reading pointers generated by `write`
    @param _pointer to be read
    @return data read from `_pointer` contract
  */
  function read(address _pointer) internal view returns (bytes memory) {
    return Bytecode.codeAt(_pointer, 1, type(uint256).max);
  }

  /**
    @notice Reads the contents of the `_pointer` code as data, skips the first byte 
    @dev The function is intended for reading pointers generated by `write`
    @param _pointer to be read
    @param _start number of bytes to skip
    @return data read from `_pointer` contract
  */
  function read(address _pointer, uint256 _start) internal view returns (bytes memory) {
    return Bytecode.codeAt(_pointer, _start + 1, type(uint256).max);
  }

  /**
    @notice Reads the contents of the `_pointer` code as data, skips the first byte 
    @dev The function is intended for reading pointers generated by `write`
    @param _pointer to be read
    @param _start number of bytes to skip
    @param _end index before which to end extraction
    @return data read from `_pointer` contract
  */
  function read(address _pointer, uint256 _start, uint256 _end) internal view returns (bytes memory) {
    return Bytecode.codeAt(_pointer, _start + 1, _end + 1);
  }
}

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

import "./Rectangle.sol";

interface ICrypToadzFeatureBuilder {
    function get(uint8 key) external view returns (address);
    function getRect(uint8 key) external view returns (Rectangle memory);
}

// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

library Bytecode {
  error InvalidCodeAtRange(uint256 _size, uint256 _start, uint256 _end);

  /**
    @notice Generate a creation code that results on a contract with `_code` as bytecode
    @param _code The returning value of the resulting `creationCode`
    @return creationCode (constructor) for new contract
  */
  function creationCodeFor(bytes memory _code) internal pure returns (bytes memory) {
    /*
      0x00    0x63         0x63XXXXXX  PUSH4 _code.length  size
      0x01    0x80         0x80        DUP1                size size
      0x02    0x60         0x600e      PUSH1 14            14 size size
      0x03    0x60         0x6000      PUSH1 00            0 14 size size
      0x04    0x39         0x39        CODECOPY            size
      0x05    0x60         0x6000      PUSH1 00            0 size
      0x06    0xf3         0xf3        RETURN
      <CODE>
    */

    return abi.encodePacked(
      hex"63",
      uint32(_code.length),
      hex"80_60_0E_60_00_39_60_00_F3",
      _code
    );
  }

  /**
    @notice Returns the size of the code on a given address
    @param _addr Address that may or may not contain code
    @return size of the code on the given `_addr`
  */
  function codeSize(address _addr) internal view returns (uint256 size) {
    assembly { size := extcodesize(_addr) }
  }

  /**
    @notice Returns the code of a given address
    @dev It will fail if `_end < _start`
    @param _addr Address that may or may not contain code
    @param _start number of bytes of code to skip on read
    @param _end index before which to end extraction
    @return oCode read from `_addr` deployed bytecode

    Forked from: https://gist.github.com/KardanovIR/fe98661df9338c842b4a30306d507fbd
  */
  function codeAt(address _addr, uint256 _start, uint256 _end) internal view returns (bytes memory oCode) {
    uint256 csize = codeSize(_addr);
    if (csize == 0) return bytes("");

    if (_start > csize) return bytes("");
    if (_end < _start) revert InvalidCodeAtRange(csize, _start, _end); 

    unchecked {
      uint256 reqSize = _end - _start;
      uint256 maxSize = csize - _start;

      uint256 size = maxSize < reqSize ? maxSize : reqSize;

      assembly {
        // allocate output byte array - this could also be done without assembly
        // by using o_code = new bytes(size)
        oCode := mload(0x40)
        // new "memory end" including padding
        mstore(0x40, add(oCode, and(add(add(size, 0x20), 0x1f), not(0x1f))))
        // store length in memory
        mstore(oCode, size)
        // actually retrieve the code, this needs assembly
        extcodecopy(_addr, add(oCode, 0x20), _start, size)
      }
    }
  }
}

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

struct Rectangle {
    uint8 x;
    uint8 y;
}

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

import "./lib/Base64.sol";
import "./IGIFEncoder.sol";
import "./GIF.sol";

/** @notice Encodes image data in GIF format. GIF is much more compact than SVG, allows for animation (SVG does as well), and also represents images that are already rastered. 
            This is important if the art shouldn't change fundamentally depending on which process is doing the SVG rendering, such as a browser or custom application.
 */
contract GIFEncoder is IGIFEncoder {
    
    uint32 private constant MASK = (1 << 12) - 1;
    uint32 private constant CLEAR_CODE = 256;
    uint32 private constant END_CODE = 257;
    uint16 private constant CODE_START = 258;
    uint16 private constant TREE_TABLE_LENGTH = 4096;
    uint16 private constant CODE_TABLE_LENGTH = TREE_TABLE_LENGTH - CODE_START;

    bytes private constant HEADER = hex"474946383961";
    bytes private constant NETSCAPE = hex"21FF0b4E45545343415045322E300301000000";
    bytes private constant GIF_URI_PREFIX = "data:image/gif;base64,";

    struct GCT {
        uint32 start;
        uint32 count;
    }

    struct LZW {
        uint16 codeCount;
        int32 codeBitsUsed;
        uint32 activePrefix;
        uint32 activeSuffix;
        uint32[CODE_TABLE_LENGTH] codeTable;
        uint16[TREE_TABLE_LENGTH] treeRoots;
        Pending pending;
    }

    struct Pending {
        uint32 value;
        int32 bits;
        uint32 chunkSize;
    }

    function getDataUri(GIF memory gif) external pure returns (string memory) {
        (bytes memory buffer, uint length) = encode(gif);
        string memory base64 = Base64.encode(buffer, length);
        return string(abi.encodePacked(GIF_URI_PREFIX, base64));
    }

    function encode(GIF memory gif) private pure returns (bytes memory buffer, uint length) {
        buffer = new bytes(gif.width * gif.height * 3);
        uint32 position = 0;

        // header
        position = writeBuffer(buffer, position, HEADER);

        // logical screen descriptor
        {
            position = writeUInt16(buffer, position, gif.width);
            position = writeUInt16(buffer, position, gif.height);

            uint8 packed = 0;
            packed |= 1 << 7;
            packed |= 7 << 4;
            packed |= 0 << 3;
            packed |= 7 << 0;

            position = writeByte(buffer, position, packed);
            position = writeByte(buffer, position, 0);
            position = writeByte(buffer, position, 0);
        }

        // global color table
        GCT memory gct;
        gct.start = position;
        gct.count = 1;
        {
            for (uint256 i = 0; i < 768; i++) {
                position = writeByte(buffer, position, 0);
            }
        }

        if (gif.frameCount > 1) {
            // netscape extension block
            position = writeBuffer(buffer, position, NETSCAPE);
        }

        uint32[CODE_TABLE_LENGTH] memory codeTable;

        for (uint256 i = 0; i < gif.frameCount; i++) {
            // graphic control extension
            {
                position = writeByte(buffer, position, 0x21);
                position = writeByte(buffer, position, 0xF9);
                position = writeByte(buffer, position, 0x04);

                uint8 packed = 0;
                packed |= (gif.frameCount > 1 ? 2 : 0) << 2;
                packed |= 0 << 1;
                packed |= 1 << 0;
                position = writeByte(buffer, position, packed);

                position = writeUInt16(buffer, position, gif.frameCount > 1 ? gif.frames[i].delay : uint16(0));                
                position = writeByte(buffer, position, 0);
                position = writeByte(buffer, position, 0);
            }

            // image descriptor
            {
                position = writeByte(buffer, position, 0x2C);
                position = writeUInt16(buffer, position, uint16(0));
                position = writeUInt16(buffer, position, uint16(0));
                position = writeUInt16(buffer, position, gif.frames[i].width);
                position = writeUInt16(buffer, position, gif.frames[i].height);

                uint8 packed = 0;
                packed |= 0 << 7;
                packed |= 0 << 6;
                packed |= 0 << 5;
                packed |= 0 << 0;
                position = writeByte(buffer, position, packed);
            }

            // image data
            {
                uint16[TREE_TABLE_LENGTH] memory treeRoots;

                (uint32 p, uint32 c) = writeImageData(
                    buffer,
                    position,
                    gct,
                    gif.frames[i],
                    LZW(0, 9, 0, 0, codeTable, treeRoots, Pending(0, 0, 0))
                );
                position = p;
                gct.count = c;
            }
        }

        // trailer
        position = writeByte(buffer, position, 0x3B);

        return (buffer, position);
    }

    function writeBuffer(
        bytes memory buffer,
        uint32 position,
        bytes memory value
    ) private pure returns (uint32) {
        for (uint256 i = 0; i < value.length; i++)
            buffer[position++] = bytes1(value[i]);
        return position;
    }

    function writeByte(
        bytes memory buffer,
        uint32 position,
        uint8 value
    ) private pure returns (uint32) {
        buffer[position++] = bytes1(value);
        return position;
    }

    function writeUInt16(
        bytes memory buffer,
        uint32 position,
        uint16 value
    ) private pure returns (uint32) {
        buffer[position++] = bytes1(uint8(uint16(value >> 0)));
        buffer[position++] = bytes1(uint8(uint16(value >> 8)));
        return position;
    }

    function writeImageData(
        bytes memory buffer,
        uint32 position,
        GCT memory gct,
        GIFFrame memory frame,
        LZW memory lzw
    ) private pure returns (uint32, uint32) {
                
        position = writeByte(buffer, position, 8);
        position = writeByte(buffer, position, 0);

        lzw.codeCount = 0;
        lzw.codeBitsUsed = 9;

        {
            (uint32 p, Pending memory pending) = writeVariableBitsChunked(
                buffer,
                position,
                CLEAR_CODE,
                lzw.codeBitsUsed,
                lzw.pending
            );
            position = p;
            lzw.pending = pending;
        }

        {
            (uint32 c, uint32 p) = getColorTableIndex(
                buffer,
                gct.start,
                gct.count,
                frame.buffer[0]
            );
            gct.count = c;
            lzw.activePrefix = p;
        }        

        for (uint32 i = 1; i < frame.width * frame.height; i++) {

            (uint32 c, uint32 p) = getColorTableIndex(
                buffer,
                gct.start,
                gct.count,
                frame.buffer[i]
            );
            gct.count = c;
            lzw.activeSuffix = p;

            position = writeColor(buffer, position, lzw);
        }

        {
            (uint32 p, Pending memory pending) = writeVariableBitsChunked(
                buffer,
                position,
                lzw.activePrefix,
                lzw.codeBitsUsed,
                lzw.pending
            );
            position = p;
            lzw.pending = pending;
        }

        {
            (uint32 p, Pending memory pending) = writeVariableBitsChunked(
                buffer,
                position,
                END_CODE,
                lzw.codeBitsUsed,
                lzw.pending
            );
            position = p;
            lzw.pending = pending;
        }

        if (lzw.pending.bits > 0) {
            position = writeChunked(
                buffer,
                position,
                uint8(lzw.pending.value & 0xFF),
                lzw.pending
            );
            lzw.pending.value = 0;
            lzw.pending.bits = 0;
        }

        if (lzw.pending.chunkSize > 0) {
            buffer[position - lzw.pending.chunkSize - 1] = bytes1(
                uint8(uint32(lzw.pending.chunkSize))
            );
            lzw.pending.chunkSize = 0;
            position = writeByte(buffer, position, 0);
        }

        return (position, gct.count);
    }

    function writeColor(bytes memory buffer, uint32 position, LZW memory lzw) private pure returns (uint32) {
        uint32 lastTreePosition = 0;
        uint32 foundSuffix = 0;

        bool found = false;
        {
            uint32 treePosition = lzw.treeRoots[lzw.activePrefix];
            while (treePosition != 0) {
                lastTreePosition = treePosition;
                foundSuffix = lzw.codeTable[treePosition - CODE_START] & 0xFF;

                if (lzw.activeSuffix == foundSuffix) {
                    lzw.activePrefix = treePosition;
                    found = true;
                    break;
                } else if (lzw.activeSuffix < foundSuffix) {
                    treePosition = (lzw.codeTable[treePosition - CODE_START] >> 8) & MASK;
                } else {
                    treePosition = lzw.codeTable[treePosition - CODE_START] >> 20;
                }
            }
        }

        if (!found) {
            {
                (
                    uint32 p,
                    Pending memory pending
                ) = writeVariableBitsChunked(
                        buffer,
                        position,
                        lzw.activePrefix,
                        lzw.codeBitsUsed,
                        lzw.pending
                    );
                position = p;
                lzw.pending = pending;
            }

            if (lzw.codeCount == CODE_TABLE_LENGTH) {
                {
                    (
                        uint32 p,
                        Pending memory pending
                    ) = writeVariableBitsChunked(
                            buffer,
                            position,
                            CLEAR_CODE,
                            lzw.codeBitsUsed,
                            lzw.pending
                        );
                    position = p;
                    lzw.pending = pending;
                }

                for (uint16 j = 0; j < TREE_TABLE_LENGTH; j++) {
                    lzw.treeRoots[j] = 0;
                }
                lzw.codeCount = 0;
                lzw.codeBitsUsed = 9;
            } else {
                if (lastTreePosition == 0)
                    lzw.treeRoots[lzw.activePrefix] = uint16(CODE_START + lzw.codeCount);
                else if (lzw.activeSuffix < foundSuffix)
                    lzw.codeTable[lastTreePosition - CODE_START] = (lzw.codeTable[lastTreePosition - CODE_START] & ~(MASK << 8)) | (uint32(CODE_START + lzw.codeCount) << 8);
                else {
                    lzw.codeTable[lastTreePosition - CODE_START] = (lzw.codeTable[lastTreePosition - CODE_START] & ~(MASK << 20)) | (uint32(CODE_START + lzw.codeCount) << 20);
                }

                if (uint32(CODE_START + lzw.codeCount) == (uint32(1) << uint32(lzw.codeBitsUsed))) {
                    lzw.codeBitsUsed++;
                }

                lzw.codeTable[lzw.codeCount++] = lzw.activeSuffix;
            }

            lzw.activePrefix = lzw.activeSuffix;
        }

        return position;
    }    

    function writeVariableBitsChunked(
        bytes memory buffer,
        uint32 position,
        uint32 value,
        int32 bits,
        Pending memory pending
    ) private pure returns (uint32, Pending memory) {
        while (bits > 0) {
            int32 takeBits = min(bits, 8 - pending.bits);
            uint32 takeMask = uint32((uint32(1) << uint32(takeBits)) - 1);

            pending.value |= ((value & takeMask) << uint32(pending.bits));

            pending.bits += takeBits;
            bits -= takeBits;
            value >>= uint32(takeBits);

            if (pending.bits == 8) {
                position = writeChunked(
                    buffer,
                    position,
                    uint8(pending.value & 0xFF),
                    pending
                );
                pending.value = 0;
                pending.bits = 0;
            }
        }

        return (position, pending);
    }

    function writeChunked(
        bytes memory buffer,
        uint32 position,
        uint8 value,
        Pending memory pending
    ) private pure returns (uint32) {
        position = writeByte(buffer, position, value);
        pending.chunkSize++;

        if (pending.chunkSize == 255) {
            buffer[position - 256] = bytes1(uint8(255));
            pending.chunkSize = 0;
            position = writeByte(buffer, position, 0);
        }

        return position;
    }

    function getColorTableIndex(
        bytes memory buffer,
        uint32 colorTableStart,
        uint32 colorCount,
        uint32 target
    ) private pure returns (uint32, uint32) {
        if (target >> 24 != 0xFF) return (colorCount, 0);

        uint32 i = 1;
        for (; i < colorCount; i++) {
            if (uint8(buffer[colorTableStart + i * 3 + 0]) != uint8(target >> 16)
            ) continue;
            if (uint8(buffer[colorTableStart + i * 3 + 1]) != uint8(target >> 8)
            ) continue;
            if (uint8(buffer[colorTableStart + i * 3 + 2]) != uint8(target >> 0)
            ) continue;
            return (colorCount, i);
        }

        if (colorCount == 256) {
            return (
                colorCount,
                getColorTableBestMatch(
                    buffer,
                    colorTableStart,
                    colorCount,
                    target
                )
            );
        } else {
            buffer[colorTableStart + colorCount * 3 + 0] = bytes1(uint8(target >> 16));
            buffer[colorTableStart + colorCount * 3 + 1] = bytes1(uint8(target >> 8));
            buffer[colorTableStart + colorCount * 3 + 2] = bytes1(uint8(target >> 0));
            return (colorCount + 1, colorCount);
        }
    }

    function getColorTableBestMatch(
        bytes memory buffer,
        uint32 colorTableStart,
        uint32 colorCount,
        uint32 target
    ) private pure returns (uint32) {
        uint32 bestDistance = type(uint32).max;
        uint32 bestIndex = 0;

        for (uint32 i = 1; i < colorCount; i++) {
            uint32 distance;
            {
                uint8 rr = uint8(buffer[colorTableStart + i * 3 + 0]) - uint8(target >> 16);
                uint8 gg = uint8(buffer[colorTableStart + i * 3 + 1]) - uint8(target >> 8);
                uint8 bb = uint8(buffer[colorTableStart + i * 3 + 2]) - uint8(target >> 0);
                distance = rr * rr + gg * gg + bb * bb;
            }
            if (distance < bestDistance) {
                bestDistance = distance;
                bestIndex = i;
            }
        }

        return bestIndex;
    }

    function max(uint32 val1, uint32 val2) private pure returns (uint32) {
        return (val1 >= val2) ? val1 : val2;
    }

    function min(uint32 val1, uint32 val2) private pure returns (uint32) {
        return (val1 <= val2) ? val1 : val2;
    }

    function min(int32 val1, int32 val2) private pure returns (int32) {
        return (val1 <= val2) ? val1 : val2;
    }
}

// SPDX-License-Identifier: MIT

pragma solidity ^0.8.13;

/// @title Base64
/// @author Brecht Devos - <[email protected]>
/// @notice Provides a function for encoding some bytes in base64
library Base64 {
    string internal constant TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

    function encode(bytes memory data, uint length) internal pure returns (string memory) {
        if (data.length == 0 || length == 0) return '';
        
        // load the table into memory
        string memory table = TABLE;

        // multiply by 4/3 rounded up
        uint256 encodedLen = 4 * ((length + 2) / 3);

        // add some extra buffer at the end required for the writing
        string memory result = new string(encodedLen + 32);

        assembly {
            // set the actual output length
            mstore(result, encodedLen)
            
            // prepare the lookup table
            let tablePtr := add(table, 1)
            
            // input ptr
            let dataPtr := data
            let endPtr := add(dataPtr, mload(data))
            
            // result ptr, jump over length
            let resultPtr := add(result, 32)
            
            // run over the input, 3 bytes at a time
            for {} lt(dataPtr, endPtr) {}
            {
               dataPtr := add(dataPtr, 3)
               
               // read 3 bytes
               let input := mload(dataPtr)
               
               // write 4 characters
               mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(18, input), 0x3F)))))
               resultPtr := add(resultPtr, 1)
               mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr(12, input), 0x3F)))))
               resultPtr := add(resultPtr, 1)
               mstore(resultPtr, shl(248, mload(add(tablePtr, and(shr( 6, input), 0x3F)))))
               resultPtr := add(resultPtr, 1)
               mstore(resultPtr, shl(248, mload(add(tablePtr, and(        input,  0x3F)))))
               resultPtr := add(resultPtr, 1)
            }
            
            // padding with '='
            switch mod(mload(data), 3)
            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }
            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }
        }
        
        return result;
    }
}

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

import "./GIF.sol";

interface IGIFEncoder {
    function getDataUri(GIF memory gif) external pure returns (string memory);
}

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

import "./GIFFrame.sol";

struct GIF {
    uint32 frameCount;
    GIFFrame[] frames;
    uint16 width;
    uint16 height;
}

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

struct GIFFrame {
    uint32[] buffer;
    uint16 delay;
    uint16 width;
    uint16 height;
}

// SPDX-License-Identifier: Apache-2.0
pragma solidity ^0.8.13;

/// @notice Based on https://github.com/madler/zlib/blob/master/contrib/puff
library InflateLib {
    // Maximum bits in a code
    uint256 constant MAXBITS = 15;
    // Maximum number of literal/length codes
    uint256 constant MAXLCODES = 286;
    // Maximum number of distance codes
    uint256 constant MAXDCODES = 30;
    // Maximum codes lengths to read
    uint256 constant MAXCODES = (MAXLCODES + MAXDCODES);
    // Number of fixed literal/length codes
    uint256 constant FIXLCODES = 288;

    // Error codes
    enum ErrorCode {
        ERR_NONE, // 0 successful inflate
        ERR_NOT_TERMINATED, // 1 available inflate data did not terminate
        ERR_OUTPUT_EXHAUSTED, // 2 output space exhausted before completing inflate
        ERR_INVALID_BLOCK_TYPE, // 3 invalid block type (type == 3)
        ERR_STORED_LENGTH_NO_MATCH, // 4 stored block length did not match one's complement
        ERR_TOO_MANY_LENGTH_OR_DISTANCE_CODES, // 5 dynamic block code description: too many length or distance codes
        ERR_CODE_LENGTHS_CODES_INCOMPLETE, // 6 dynamic block code description: code lengths codes incomplete
        ERR_REPEAT_NO_FIRST_LENGTH, // 7 dynamic block code description: repeat lengths with no first length
        ERR_REPEAT_MORE, // 8 dynamic block code description: repeat more than specified lengths
        ERR_INVALID_LITERAL_LENGTH_CODE_LENGTHS, // 9 dynamic block code description: invalid literal/length code lengths
        ERR_INVALID_DISTANCE_CODE_LENGTHS, // 10 dynamic block code description: invalid distance code lengths
        ERR_MISSING_END_OF_BLOCK, // 11 dynamic block code description: missing end-of-block code
        ERR_INVALID_LENGTH_OR_DISTANCE_CODE, // 12 invalid literal/length or distance code in fixed or dynamic block
        ERR_DISTANCE_TOO_FAR, // 13 distance is too far back in fixed or dynamic block
        ERR_CONSTRUCT // 14 internal: error in construct()
    }

    // Input and output state
    struct State {
        //////////////////
        // Output state //
        //////////////////
        // Output buffer
        bytes output;
        // Bytes written to out so far
        uint256 outcnt;
        /////////////////
        // Input state //
        /////////////////
        // Input buffer
        bytes input;
        // Bytes read so far
        uint256 incnt;
        ////////////////
        // Temp state //
        ////////////////
        // Bit buffer
        uint256 bitbuf;
        // Number of bits in bit buffer
        uint256 bitcnt;
        //////////////////////////
        // Static Huffman codes //
        //////////////////////////
        Huffman lencode;
        Huffman distcode;
    }

    // Huffman code decoding tables
    struct Huffman {
        uint256[] counts;
        uint256[] symbols;
    }

    function bits(State memory s, uint256 need)
        private
        pure
        returns (ErrorCode, uint256)
    {
        // Bit accumulator (can use up to 20 bits)
        uint256 val;

        // Load at least need bits into val
        val = s.bitbuf;
        while (s.bitcnt < need) {
            if (s.incnt == s.input.length) {
                // Out of input
                return (ErrorCode.ERR_NOT_TERMINATED, 0);
            }

            // Load eight bits
            val |= uint256(uint8(s.input[s.incnt++])) << s.bitcnt;
            s.bitcnt += 8;
        }

        // Drop need bits and update buffer, always zero to seven bits left
        s.bitbuf = val >> need;
        s.bitcnt -= need;

        // Return need bits, zeroing the bits above that
        uint256 ret = (val & ((1 << need) - 1));
        return (ErrorCode.ERR_NONE, ret);
    }

    function _stored(State memory s) private pure returns (ErrorCode) {
        // Length of stored block
        uint256 len;

        // Discard leftover bits from current byte (assumes s.bitcnt < 8)
        s.bitbuf = 0;
        s.bitcnt = 0;

        // Get length and check against its one's complement
        if (s.incnt + 4 > s.input.length) {
            // Not enough input
            return ErrorCode.ERR_NOT_TERMINATED;
        }
        len = uint256(uint8(s.input[s.incnt++]));
        len |= uint256(uint8(s.input[s.incnt++])) << 8;

        if (
            uint8(s.input[s.incnt++]) != (~len & 0xFF) ||
            uint8(s.input[s.incnt++]) != ((~len >> 8) & 0xFF)
        ) {
            // Didn't match complement!
            return ErrorCode.ERR_STORED_LENGTH_NO_MATCH;
        }

        // Copy len bytes from in to out
        if (s.incnt + len > s.input.length) {
            // Not enough input
            return ErrorCode.ERR_NOT_TERMINATED;
        }
        if (s.outcnt + len > s.output.length) {
            // Not enough output space
            return ErrorCode.ERR_OUTPUT_EXHAUSTED;
        }
        while (len != 0) {
            // Note: Solidity reverts on underflow, so we decrement here
            len -= 1;
            s.output[s.outcnt++] = s.input[s.incnt++];
        }

        // Done with a valid stored block
        return ErrorCode.ERR_NONE;
    }

    function _decode(State memory s, Huffman memory h)
        private
        pure
        returns (ErrorCode, uint256)
    {
        // Current number of bits in code
        uint256 len;
        // Len bits being decoded
        uint256 code = 0;
        // First code of length len
        uint256 first = 0;
        // Number of codes of length len
        uint256 count;
        // Index of first code of length len in symbol table
        uint256 index = 0;
        // Error code
        ErrorCode err;

        for (len = 1; len <= MAXBITS; len++) {
            // Get next bit
            uint256 tempCode;
            (err, tempCode) = bits(s, 1);
            if (err != ErrorCode.ERR_NONE) {
                return (err, 0);
            }
            code |= tempCode;
            count = h.counts[len];

            // If length len, return symbol
            if (code < first + count) {
                return (ErrorCode.ERR_NONE, h.symbols[index + (code - first)]);
            }
            // Else update for next length
            index += count;
            first += count;
            first <<= 1;
            code <<= 1;
        }

        // Ran out of codes
        return (ErrorCode.ERR_INVALID_LENGTH_OR_DISTANCE_CODE, 0);
    }

    function _construct(
        Huffman memory h,
        uint256[] memory lengths,
        uint256 n,
        uint256 start
    ) private pure returns (ErrorCode) {
        // Current symbol when stepping through lengths[]
        uint256 symbol;
        // Current length when stepping through h.counts[]
        uint256 len;
        // Number of possible codes left of current length
        uint256 left;
        // Offsets in symbol table for each length
        uint256[MAXBITS + 1] memory offs;

        // Count number of codes of each length
        for (len = 0; len <= MAXBITS; len++) {
            h.counts[len] = 0;
        }
        for (symbol = 0; symbol < n; symbol++) {
            // Assumes lengths are within bounds
            h.counts[lengths[start + symbol]]++;
        }
        // No codes!
        if (h.counts[0] == n) {
            // Complete, but decode() will fail
            return (ErrorCode.ERR_NONE);
        }

        // Check for an over-subscribed or incomplete set of lengths

        // One possible code of zero length
        left = 1;

        for (len = 1; len <= MAXBITS; len++) {
            // One more bit, double codes left
            left <<= 1;
            if (left < h.counts[len]) {
                // Over-subscribed--return error
                return ErrorCode.ERR_CONSTRUCT;
            }
            // Deduct count from possible codes

            left -= h.counts[len];
        }

        // Generate offsets into symbol table for each length for sorting
        offs[1] = 0;
        for (len = 1; len < MAXBITS; len++) {
            offs[len + 1] = offs[len] + h.counts[len];
        }

        // Put symbols in table sorted by length, by symbol order within each length
        for (symbol = 0; symbol < n; symbol++) {
            if (lengths[start + symbol] != 0) {
                h.symbols[offs[lengths[start + symbol]]++] = symbol;
            }
        }

        // Left > 0 means incomplete
        return left > 0 ? ErrorCode.ERR_CONSTRUCT : ErrorCode.ERR_NONE;
    }

    function _codes(
        State memory s,
        Huffman memory lencode,
        Huffman memory distcode
    ) private pure returns (ErrorCode) {
        // Decoded symbol
        uint256 symbol;
        // Length for copy
        uint256 len;
        // Distance for copy
        uint256 dist;
        // TODO Solidity doesn't support constant arrays, but these are fixed at compile-time
        // Size base for length codes 257..285
        uint16[29] memory lens =
            [
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                13,
                15,
                17,
                19,
                23,
                27,
                31,
                35,
                43,
                51,
                59,
                67,
                83,
                99,
                115,
                131,
                163,
                195,
                227,
                258
            ];
        // Extra bits for length codes 257..285
        uint8[29] memory lext =
            [
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                3,
                3,
                3,
                3,
                4,
                4,
                4,
                4,
                5,
                5,
                5,
                5,
                0
            ];
        // Offset base for distance codes 0..29
        uint16[30] memory dists =
            [
                1,
                2,
                3,
                4,
                5,
                7,
                9,
                13,
                17,
                25,
                33,
                49,
                65,
                97,
                129,
                193,
                257,
                385,
                513,
                769,
                1025,
                1537,
                2049,
                3073,
                4097,
                6145,
                8193,
                12289,
                16385,
                24577
            ];
        // Extra bits for distance codes 0..29
        uint8[30] memory dext =
            [
                0,
                0,
                0,
                0,
                1,
                1,
                2,
                2,
                3,
                3,
                4,
                4,
                5,
                5,
                6,
                6,
                7,
                7,
                8,
                8,
                9,
                9,
                10,
                10,
                11,
                11,
                12,
                12,
                13,
                13
            ];
        // Error code
        ErrorCode err;

        // Decode literals and length/distance pairs
        while (symbol != 256) {
            (err, symbol) = _decode(s, lencode);
            if (err != ErrorCode.ERR_NONE) {
                // Invalid symbol
                return err;
            }

            if (symbol < 256) {
                // Literal: symbol is the byte
                // Write out the literal
                if (s.outcnt == s.output.length) {
                    return ErrorCode.ERR_OUTPUT_EXHAUSTED;
                }
                s.output[s.outcnt] = bytes1(uint8(symbol));
                s.outcnt++;
            } else if (symbol > 256) {
                uint256 tempBits;
                // Length
                // Get and compute length
                symbol -= 257;
                if (symbol >= 29) {
                    // Invalid fixed code
                    return ErrorCode.ERR_INVALID_LENGTH_OR_DISTANCE_CODE;
                }

                (err, tempBits) = bits(s, lext[symbol]);
                if (err != ErrorCode.ERR_NONE) {
                    return err;
                }
                len = lens[symbol] + tempBits;

                // Get and check distance
                (err, symbol) = _decode(s, distcode);
                if (err != ErrorCode.ERR_NONE) {
                    // Invalid symbol
                    return err;
                }
                (err, tempBits) = bits(s, dext[symbol]);
                if (err != ErrorCode.ERR_NONE) {
                    return err;
                }
                dist = dists[symbol] + tempBits;
                if (dist > s.outcnt) {
                    // Distance too far back
                    return ErrorCode.ERR_DISTANCE_TOO_FAR;
                }

                // Copy length bytes from distance bytes back
                if (s.outcnt + len > s.output.length) {
                    return ErrorCode.ERR_OUTPUT_EXHAUSTED;
                }
                while (len != 0) {
                    // Note: Solidity reverts on underflow, so we decrement here
                    len -= 1;
                    s.output[s.outcnt] = s.output[s.outcnt - dist];
                    s.outcnt++;
                }
            } else {
                s.outcnt += len;
            }
        }

        // Done with a valid fixed or dynamic block
        return ErrorCode.ERR_NONE;
    }

    function _build_fixed(State memory s) private pure returns (ErrorCode) {
        // Build fixed Huffman tables
        // TODO this is all a compile-time constant
        uint256 symbol;
        uint256[] memory lengths = new uint256[](FIXLCODES);

        // Literal/length table
        for (symbol = 0; symbol < 144; symbol++) {
            lengths[symbol] = 8;
        }
        for (; symbol < 256; symbol++) {
            lengths[symbol] = 9;
        }
        for (; symbol < 280; symbol++) {
            lengths[symbol] = 7;
        }
        for (; symbol < FIXLCODES; symbol++) {
            lengths[symbol] = 8;
        }

        _construct(s.lencode, lengths, FIXLCODES, 0);

        // Distance table
        for (symbol = 0; symbol < MAXDCODES; symbol++) {
            lengths[symbol] = 5;
        }

        _construct(s.distcode, lengths, MAXDCODES, 0);

        return ErrorCode.ERR_NONE;
    }

    function _fixed(State memory s) private pure returns (ErrorCode) {
        // Decode data until end-of-block code
        return _codes(s, s.lencode, s.distcode);
    }

    function _build_dynamic_lengths(State memory s)
        private
        pure
        returns (ErrorCode, uint256[] memory)
    {
        uint256 ncode;
        // Index of lengths[]
        uint256 index;
        // Descriptor code lengths
        uint256[] memory lengths = new uint256[](MAXCODES);
        // Error code
        ErrorCode err;
        // Permutation of code length codes
        uint8[19] memory order =
            [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];

        (err, ncode) = bits(s, 4);
        if (err != ErrorCode.ERR_NONE) {
            return (err, lengths);
        }
        ncode += 4;

        // Read code length code lengths (really), missing lengths are zero
        for (index = 0; index < ncode; index++) {
            (err, lengths[order[index]]) = bits(s, 3);
            if (err != ErrorCode.ERR_NONE) {
                return (err, lengths);
            }
        }
        for (; index < 19; index++) {
            lengths[order[index]] = 0;
        }

        return (ErrorCode.ERR_NONE, lengths);
    }

    function _build_dynamic(State memory s)
        private
        pure
        returns (
            ErrorCode,
            Huffman memory,
            Huffman memory
        )
    {
        // Number of lengths in descriptor
        uint256 nlen;
        uint256 ndist;
        // Index of lengths[]
        uint256 index;
        // Error code
        ErrorCode err;
        // Descriptor code lengths
        uint256[] memory lengths = new uint256[](MAXCODES);
        // Length and distance codes
        Huffman memory lencode =
            Huffman(new uint256[](MAXBITS + 1), new uint256[](MAXLCODES));
        Huffman memory distcode =
            Huffman(new uint256[](MAXBITS + 1), new uint256[](MAXDCODES));
        uint256 tempBits;

        // Get number of lengths in each table, check lengths
        (err, nlen) = bits(s, 5);
        if (err != ErrorCode.ERR_NONE) {
            return (err, lencode, distcode);
        }
        nlen += 257;
        (err, ndist) = bits(s, 5);
        if (err != ErrorCode.ERR_NONE) {
            return (err, lencode, distcode);
        }
        ndist += 1;

        if (nlen > MAXLCODES || ndist > MAXDCODES) {
            // Bad counts
            return (
                ErrorCode.ERR_TOO_MANY_LENGTH_OR_DISTANCE_CODES,
                lencode,
                distcode
            );
        }

        (err, lengths) = _build_dynamic_lengths(s);
        if (err != ErrorCode.ERR_NONE) {
            return (err, lencode, distcode);
        }

        // Build huffman table for code lengths codes (use lencode temporarily)
        err = _construct(lencode, lengths, 19, 0);
        if (err != ErrorCode.ERR_NONE) {
            // Require complete code set here
            return (
                ErrorCode.ERR_CODE_LENGTHS_CODES_INCOMPLETE,
                lencode,
                distcode
            );
        }

        // Read length/literal and distance code length tables
        index = 0;
        while (index < nlen + ndist) {
            // Decoded value
            uint256 symbol;
            // Last length to repeat
            uint256 len;

            (err, symbol) = _decode(s, lencode);
            if (err != ErrorCode.ERR_NONE) {
                // Invalid symbol
                return (err, lencode, distcode);
            }

            if (symbol < 16) {
                // Length in 0..15
                lengths[index++] = symbol;
            } else {
                // Repeat instruction
                // Assume repeating zeros
                len = 0;
                if (symbol == 16) {
                    // Repeat last length 3..6 times
                    if (index == 0) {
                        // No last length!
                        return (
                            ErrorCode.ERR_REPEAT_NO_FIRST_LENGTH,
                            lencode,
                            distcode
                        );
                    }
                    // Last length
                    len = lengths[index - 1];
                    (err, tempBits) = bits(s, 2);
                    if (err != ErrorCode.ERR_NONE) {
                        return (err, lencode, distcode);
                    }
                    symbol = 3 + tempBits;
                } else if (symbol == 17) {
                    // Repeat zero 3..10 times
                    (err, tempBits) = bits(s, 3);
                    if (err != ErrorCode.ERR_NONE) {
                        return (err, lencode, distcode);
                    }
                    symbol = 3 + tempBits;
                } else {
                    // == 18, repeat zero 11..138 times
                    (err, tempBits) = bits(s, 7);
                    if (err != ErrorCode.ERR_NONE) {
                        return (err, lencode, distcode);
                    }
                    symbol = 11 + tempBits;
                }

                if (index + symbol > nlen + ndist) {
                    // Too many lengths!
                    return (ErrorCode.ERR_REPEAT_MORE, lencode, distcode);
                }
                while (symbol != 0) {
                    // Note: Solidity reverts on underflow, so we decrement here
                    symbol -= 1;

                    // Repeat last or zero symbol times
                    lengths[index++] = len;
                }
            }
        }

        // Check for end-of-block code -- there better be one!
        if (lengths[256] == 0) {
            return (ErrorCode.ERR_MISSING_END_OF_BLOCK, lencode, distcode);
        }

        // Build huffman table for literal/length codes
        err = _construct(lencode, lengths, nlen, 0);
        if (
            err != ErrorCode.ERR_NONE &&
            (err == ErrorCode.ERR_NOT_TERMINATED ||
                err == ErrorCode.ERR_OUTPUT_EXHAUSTED ||
                nlen != lencode.counts[0] + lencode.counts[1])
        ) {
            // Incomplete code ok only for single length 1 code
            return (
                ErrorCode.ERR_INVALID_LITERAL_LENGTH_CODE_LENGTHS,
                lencode,
                distcode
            );
        }

        // Build huffman table for distance codes
        err = _construct(distcode, lengths, ndist, nlen);
        if (
            err != ErrorCode.ERR_NONE &&
            (err == ErrorCode.ERR_NOT_TERMINATED ||
                err == ErrorCode.ERR_OUTPUT_EXHAUSTED ||
                ndist != distcode.counts[0] + distcode.counts[1])
        ) {
            // Incomplete code ok only for single length 1 code
            return (
                ErrorCode.ERR_INVALID_DISTANCE_CODE_LENGTHS,
                lencode,
                distcode
            );
        }

        return (ErrorCode.ERR_NONE, lencode, distcode);
    }

    function _dynamic(State memory s) private pure returns (ErrorCode) {
        // Length and distance codes
        Huffman memory lencode;
        Huffman memory distcode;
        // Error code
        ErrorCode err;

        (err, lencode, distcode) = _build_dynamic(s);
        if (err != ErrorCode.ERR_NONE) {
            return err;
        }

        // Decode data until end-of-block code
        return _codes(s, lencode, distcode);
    }

    function puff(bytes memory source, uint256 destlen)
        internal
        pure
        returns (ErrorCode, bytes memory)
    {
        // Input/output state
        State memory s =
            State(
                new bytes(destlen),
                0,
                source,
                0,
                0,
                0,
                Huffman(new uint256[](MAXBITS + 1), new uint256[](FIXLCODES)),
                Huffman(new uint256[](MAXBITS + 1), new uint256[](MAXDCODES))
            );
        // Temp: last bit
        uint256 last;
        // Temp: block type bit
        uint256 t;
        // Error code
        ErrorCode err;

        // Build fixed Huffman tables
        err = _build_fixed(s);
        if (err != ErrorCode.ERR_NONE) {
            return (err, s.output);
        }

        // Process blocks until last block or error
        while (last == 0) {
            // One if last block
            (err, last) = bits(s, 1);
            if (err != ErrorCode.ERR_NONE) {
                return (err, s.output);
            }

            // Block type 0..3
            (err, t) = bits(s, 2);
            if (err != ErrorCode.ERR_NONE) {
                return (err, s.output);
            }

            err = (
                t == 0
                    ? _stored(s)
                    : (
                        t == 1
                            ? _fixed(s)
                            : (
                                t == 2
                                    ? _dynamic(s)
                                    : ErrorCode.ERR_INVALID_BLOCK_TYPE
                            )
                    )
            );
            // type == 3, invalid

            if (err != ErrorCode.ERR_NONE) {
                // Return with error
                break;
            }
        }

        return (err, s.output);
    }
}

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

import "./DrawFrame.sol";

interface IPixelRenderer {
    function drawFrameWithOffsets(DrawFrame memory f) external pure returns (uint32[] memory buffer, uint);
    function getColorTable(bytes memory buffer, uint position) external pure returns(uint32[] memory colors, uint);
}

// SPDX-License-Identifier: CC0-1.0

pragma solidity ^0.8.13;

import "./GIFFrame.sol";

struct DrawFrame {
    bytes buffer;
    uint position;
    GIFFrame frame;
    uint32[] colors;
    uint8 ox;
    uint8 oy;
    bool blend;
}