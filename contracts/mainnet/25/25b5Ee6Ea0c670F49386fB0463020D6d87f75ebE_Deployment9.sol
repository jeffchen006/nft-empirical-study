// SPDX-License-Identifier: MIT
pragma solidity 0.8.16;

import "../sound/SoundImp12.sol";
import "../sound/SoundImp13.sol";
import "../sound/SoundImp14.sol";
import "../sound/SoundImp15.sol";
import "../sound/SoundImp16.sol";

contract Deployment9 {

  function getPart() external pure returns (string memory) {

    return string.concat(
      SoundImp12.getPart(),
      SoundImp13.getPart(),
      SoundImp14.getPart(),
      SoundImp15.getPart(),
      SoundImp16.getPart()
    );
  }
}

// SPDX-License-Identifier: MIT
pragma solidity 0.8.16;

library SoundImp12 {

  string internal constant PART = "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\",inhale=\"";

  function getPart() external pure returns (string memory) {
    return PART;
  }
  
}

// SPDX-License-Identifier: MIT
pragma solidity 0.8.16;

library SoundImp13 {

  string internal constant PART = "let cachedImpulseBuffer,cachedImpulseBufferShort;async function initAudio(A,q,e){const t=[getImpulseBuffer(q),getImpulseBufferShort(e)];await Promise.all(t)}async function getImpulseBuffer(A){if(!cachedImpulseBuffer){const q=decodeBase64ToArrayBuffer(A);cachedImpulseBuffer=audioContext.decodeAudioData(q).catch((A=>{throw A}))}return cachedImpulseBuffer}async function getImpulseBufferShort(A){if(!cachedImpulseBufferShort){const q=decodeBase64ToArrayBuffer(A);cachedImpulseBufferShort=audioContext.decodeAudioData(q).catch((A=>{throw A}))}return cachedImpulseBufferShort}function encounterSound(A=200,q=2,e=5,t=5){const o=new OscillatorNode(audioContext);o.type=\"sine\",o.frequency.value=A,o.detune.value=0;const a=new GainNode(audioContext);a.gain.value=q,o.connect(a);const n=new DelayNode(audioContext);n.delayTime.value=.1;const i=new DelayNode(audioContext);i.delayTime.value=.21;const V=new DelayNode(audioContext);V.delayTime.value=.31;const g=new DelayNode(audioContext);g.delayTime.value=.41;const s=new DelayNode(audioContext);s.delayTime.value=.51;const C=new DelayNode(audioContext);C.delayTime.value=.6;const E=new DelayNode(audioContext);E.delayTime.value=.7;const c=new DelayNode(audioContext);c.delayTime.value=.851,a.connect(n).connect(i).connect(V).connect(g).connect(s).connect(C).connect(E).connect(c);const B=new ConvolverNode(audioContext);B.normalize=!0;const M=new ConvolverNode(audioContext);M.normalize=!0;const I=44100*e,r=new AudioBuffer({length:I,sampleRate:audioContext.sampleRate,numberOfChannels:2}),Q=r.getChannelData(0);for(let A=0;A<I;A++)Q[A]=.5*Math.random();const l=new AudioBuffer({length:I,sampleRate:audioContext.sampleRate,numberOfChannels:2}),m=l.getChannelData(1);for(let A=0;A<I;A++)m[A]=Math.sin(.001*A)*Math.random();B.buffer=r,M.buffer=l,a.connect(B).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),a.connect(M).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),o.start(),o.onended=function(){app.audio},setTimeout((()=>{a.gain.linearRampToValueAtTime(0,audioContext.currentTime+2)}),t)}async function playAngel(A=5,q=400){const e=[],t=[],o=await getImpulseBuffer(reverbData),a=audioContext.createConvolver();a.buffer=o;for(let o=0;o<4;o++)e[o]=audioContext.createOscillator(),t[o]=audioContext.createGain(),e[o].type=\"sine\",e[o].frequency.value=q*(1+.02*o),t[o].gain.setValueAtTime(.25,audioContext.currentTime),t[o].gain.exponentialRampToValueAtTime(1e-4,audioContext.currentTime+A),e[o].connect(t[o]),t[o].connect(a).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),e[o].start(audioContext.currentTime);setTimeout((()=>{for(let A=0;A<4;A++)e[A].stop(audioContext.currentTime)}),1e3*A)}async function playAngelSound(A=4,q=100,e=.5,t=.5){const o=[],a=[],n=await getImpulseBuffer(reverbData),i=audioContext.createConvolver();i.buffer=n;const V=audioContext.createGain();V.gain.value=t,i.connect(V),V.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination);for(let t=0;t<4;t++)o[t]=audioContext.createOscillator(),a[t]=audioContext.createGain(),o[t].type=\"sine\",o[t].frequency.value=q*(1+.02*t),a[t].gain.setValueAtTime(e,audioContext.currentTime),a[t].gain.exponentialRampToValueAtTime(1e-4,audioContext.currentTime+A),o[t].connect(a[t]),a[t].connect(i),o[t].start(audioContext.currentTime);setTimeout((()=>{for(let A=0;A<4;A++)o[A].stop(audioContext.currentTime)}),1e3*A)}initAudio(audioContext,reverbData,reverbDataShort).then((()=>{}));let audioBuffer,storedAudioBuffer,playElectricLoop=!1;async function playElectric(A=1e3,q=10,e=1,t=!1){const o=await getImpulseBuffer(reverbData),a=audioContext.createConvolver();a.buffer=o;const n=audioContext.createOscillator();n.type=\"sine\",n.frequency.setValueAtTime(A,audioContext.currentTime);const i=audioContext.createGain();i.gain.setValueAtTime(.1,audioContext.currentTime);const V=audioContext.createOscillator();V.type=\"square\",V.frequency.setValueAtTime(50,audioContext.currentTime);const g=audioContext.createGain();g.gain.setValueAtTime(2e3,audioContext.currentTime);const s=audioContext.createOscillator();s.type=\"square\",s.frequency.setValueAtTime(e,audioContext.currentTime);const C=audioContext.createGain();C.gain.setValueAtTime(.2,audioContext.currentTime),V.connect(g),g.connect(n.frequency),n.connect(i),s.connect(C),C.connect(i.gain),i.connect(a),a.connect(masterGain).connect(bandpassFilter).connect(compressor).connect(audioContext.destination),n.start(),V.start(),s.start(),setTimeout((()=>{n.";

  function getPart() external pure returns (string memory) {
    return PART;
  }
  
}

// SPDX-License-Identifier: MIT
pragma solidity 0.8.16;

library SoundImp14 {

  string internal constant PART = "stop(),V.stop(),s.stop();let o=A+(1e3*Math.random()-1e3*Math.random()),a=q+(3*Math.random()-3*Math.random()),i=e+(5*Math.random()-5*Math.random());0==t&&0==playElectricLoop||playElectric(o,a,i)}),1e3*q)}async function applyFXWithPanningLoopFade(A,q,e,t,o,a,n=1,i=1,V=1){const g=await getImpulseBuffer(reverbData),s=q.createConvolver();s.buffer=g;const C=q.createDelay();t=Math.min(Math.max(t,0),1),C.delayTime.value=t;const E=q.createGain();E.gain.value=o;const c=q.createStereoPanner();c.pan.value=a;const B=q.createBufferSource();B.buffer=e,B.loop=!0;q.createGain().gain.value=o,B.connect(C),C.connect(E),E.connect(s).connect(c);const M=q.createGain();M.gain.value=n;const I=q.currentTime,r=e.duration,Q=I,l=Math.max(I,I+r-V);M.gain.setValueAtTime(0,Q),M.gain.linearRampToValueAtTime(n,Q+i),M.gain.setValueAtTime(n,l),M.gain.linearRampToValueAtTime(0,l+V),c.connect(M),M.connect(masterGain).connect(bandpassFilter).connect(q.destination),B.start(),B.onended=()=>{1==app.audio&&0==holdOnSoundEvents&&(B.disconnect(),C.disconnect(),E.disconnect(),c.disconnect(),M.disconnect(),playEchoFXFade(A,C.delayTime.value,E.gain.value,c.pan.value,n,i,V))}}async function playEchoFXFade(A=\"noidechofade\",q=.2,e=.3,t=0,o=.23,a=1,n=1,i=1){const V=generateBreakingFXSize(audioContext);return await applyFXWithPanningLoopFade(A,audioContext,V,q,e,t,o,a,n,i)}function altarEngage(){drum(\"kick\",.2)}function altarOpen(){doorsRev(\"open\",.4)}function altarSent(){doorsRev(\"close\",6)}function altarPop(){drum(\"hihat\",.2)}function altarSporadicDrop(){let A=2*Math.random(),q=60*Math.random();2*Math.random()>1?dropSound2(6+A,100,501,2+A,.1,.02):dropSound2(60+q,100,5,2,.1,.02)}async function makeChoir(A=5,q=3,e=260,t=.1){const o=await decodeImpulseDataIfNeeded(),a=audioContext.createConvolver();a.buffer=o;const n=audioContext.createDynamicsCompressor();n.threshold.value=-12,n.knee.value=10,n.ratio.value=6,n.attack.value=.1,n.release.value=.5;const i=audioContext.createGain(),V=[],g=[];for(let A=0;A<q;A++)V[A]=audioContext.createOscillator(),g[A]=audioContext.createGain(),V[A].connect(g[A]),g[A].connect(a),a.connect(n),n.connect(i),i.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination);const s=Math.pow(2,1/12);for(let A=0;A<q;A++)V[A].frequency.value=e*Math.pow(s,A-q/2),V[A].type=\"sine\";V[0].frequency.value=e,V[1].frequency.value=e*Math.pow(s,4),V[2].frequency.value=e*Math.pow(s,7),i.gain.value=t;for(let A=0;A<q;A++)V[A].start(),g[A].gain.setValueAtTime(.01,audioContext.currentTime),g[A].gain.linearRampToValueAtTime(1,audioContext.currentTime+.5);for(let e=0;e<q;e++)V[e].stop(audioContext.currentTime+A),g[e].gain.setValueAtTime(1,audioContext.currentTime+A-1),g[e].gain.linearRampToValueAtTime(.01,audioContext.currentTime+A),V[e].onended=function(){1==app.audio&&0==holdOnSoundEvents&&(app.audioContexts=app.audioContexts.filter((A=>\"choir\"!=A.id)))}}let mediaRecorder,eventSounds=!0;function noseSniff(){doors(\"close\",.01+Math.floor(2*Math.random()))}function boilingWater(A=\"unknown\",q=.25,e=.1,t=1.5){(new Date).getTime();let o=2*audioContext.sampleRate,a=audioContext.createBuffer(1,o,audioContext.sampleRate),n=a.getChannelData(0);for(let A=0;A<o;A++){let t=Math.random()*q;n[A]=t-t*e}let i=audioContext.createBufferSource();i.buffer=a,i.loop=!0;let V=audioContext.createGain(),g=audioContext.createBiquadFilter();g.type=\"lowpass\",g.frequency.value=1e3,i.connect(V),V.connect(g),g.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),V.gain.setValueAtTime(0,audioContext.currentTime),V.gain.linearRampToValueAtTime(1,audioContext.currentTime+t),i.onended=function(){app.audio},i.start()}async function playWhiteNoise(A=10,q=1e3,e=!1){const t=audioContext.createScriptProcessor(4096,1,1),o=await getImpulseBuffer(reverbData),a=audioContext.createConvolver();a.buffer=o,t.onaudioprocess=function(A){const q=A.outputBuffer.getChannelData(0);for(let A=0;A<4096;A++)q[A]=.5*Math.random()-.5};const n=audioContext.createBiquadFilter();n.type=\"bandpass\",n.frequency.value=q,n.Q.value=1;const i=audioContext.createOscillator(),V=audioContext.createGain();i.type=\"sine\",i.frequency.value=5,V.gain.value=500,i.connect(V),V.connect(n.frequency),t.connect(n),n.connect(a).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),i.start(),t.connect(a).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),setTimeout((()=>{1==e&&(t.disconnect(a),t.onaudioprocess=null,i.stop())}),1e3*A)}function makeNoise(A=1,q=1,e=1,t=1){const o=audioContext.createBufferSource(),a=audioContext.createBuffer(1,audioContext.sampleRate*e,audioContext.sampleRate),n=a.getChannelData(0);for(let q=0;q<n.length;q++)n[q]=Math.random()*A-A;o.buffer=a;const i=audioContext.createGain();o.connect(i).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),i.gain.setValueAtTime(q,audioContext.currentTime),i.gain.exponentialRampToValueAtTime(.01,audioContext.currentTime+t),o.start()}function isSecure(){return\"https:\"===location.protocol||location.protocol.startsWith(\"blob:\")}function isGetUserMediaSupported(){return!(!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)}let recordedChunks=[];async function startRecording(A){try{new(window.AudioContext||window.webkitAudioContext);const q=await navigator.mediaDevices.getUserMedia({audio:!0});mediaRecorder=new MediaRecorder(q),mediaRecorder.addEventListener(\"dataavailable\",(A=>{A.data.size>0&&recordedChunks.push(A.data)})),mediaRecorder.start(),setTimeout((()=>{mediaRecorder.stop()}),A)}catch(A){}}function playRecording(){if(0===recordedChunks.length)return;const A=[...recordedChunks].reverse(),q=new Blob(A,{type:\"audio/ogg; codecs=opus\"}),e=URL.createObjectURL(q),t=new Audio(e);audio.playbackRate=-1,t.play()}function bufferToWav(A){const q=A.numberOfChannels,e=A.sampleRate,t=2===q?1:3,o=2*q,a=A.length,n=a*o,i=44+n,V=new ArrayBuffer(44),g=new DataView(V);g.setUint32(0,1380533830,!1),g.setUint32(4,i-8,!0),g.setUint32(8,1463899717,!1),g.setUint32(12,1718449184,!1),g.setUint32(16,16,!0),g.setUint16(20,t,!0),g.setUint16(22,q,!0),g.setUint32(24,e,!0),g.setUint32(28,e*o,!0),g.setUint16(32,o,!0),g.setUint16(34,16,!0),g.setUint32(36,1684108385,!1),g.setUint32(40,n,!0);const s=new Float32Array(a*q);for(let e=0;e<a;e++)for(let t=0;t<q;t++)s[e*q+t]=A.getChannelData(t)[e];const C=new Int16Array(i/2);for(let A=0;A<22;A++)C[A]=g.getInt16(2*A,!0);for(let A=0;A<a*q;A++)C[A+22]=32766*s[A];return C}async function playRSound(A=440,q=.5,e=1,t=5,o=.5,a=.1){await decodeImpulseDataIfNeeded();A=Math.max(20,Math.min(2e4,A)),q=Math.max(0,Math.min(1,q));for(let n=0;n<t;n++){const t=audioContext.createOscillator(),i=audioContext.createGain();audioContext.createConvolver().buffer=reverbBuffer,t.frequency.value=A,t.connect(i),i.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination);const V=audioContext.currentTime+n*(e+o+Math.random()*a),g=.005;i.gain.setValueAtTime(.001,V),i.gain.exponentialRampToValueAtTime(q,V+g),i.gain.setValueAtTime(q,V+e-g),i.gain.exponentialRampToValueAtTime(.001,V+e),t.start(V),t.stop(V+e),t.onended=()=>{t.disconnect(),i.disconnect()}}}async function playSteam(A=5,q=.7,e=1,t=1){let o=await decodeImpulseDataIfNeeded();for(let a=0;a<t;a++)setTimeout((function(){const t=audioContext.createOscillator(),a=audioContext.createGain(),n=audioContext.createGain(),i=audioContext.createBufferSource(),V=audioContext.createBuffer(1,audioContext.sampleRate,audioContext.sampleRate),g=audioContext.createConvolver();let s=V.getChannelData(0);for(let A=0;A<s.length;A++)s[A]=2*Math.random()-1;g.buffer=o,t.frequency.setValueAtTime(A,audioContext.currentTime),t.connect(a),a.connect(n),n.connect(g),g.connect(audioContext.destination),t.start(),t.stop(audioContext.currentTime+e),n.gain.setValueAtTime(0,audioContext.currentTime),n.gain.linearRampToValueAtTime(q,audioContext.currentTime+.5*e),n.gain.linearRampToValueAtTime(.001,audioContext.currentTime+e),a.gain.setValueAtTime(q,audioContext.currentTime),a.gain.exponentialRampToValueAtTime(.001,audioContext.currentTime+e),i.buffer=V,i.connect(a),i.start(),i.stop(audioContext.currentTime+e)}),a*e*1e3)}async function playAxeSound(A=300,q=.5,e=1,t=1){const o=await decodeImpulseDataIfNeeded();for(let a=0;a<t;a++)setTimeout((function(){const t=audioContext.createOscillator(),a=audioContext.createGain(),n=audioContext.createBufferSource(),i=audioContext.createBuffer(1,audioContext.sampleRate,audioContext.sampleRate),V=audioContext.createConvolver();let g=i.getChannelData(0);for(let A=0;A<g.length;A++)g[A]=1*Math.random()-1;V.buffer=o,t.frequency.setValueAtTime(A,audioContext.currentTime),t.connect(a),a.connect(V),V.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),t.start(),t.stop(audioContext.currentTime+.7*e),a.gain.setValueAtTime(q,audioContext.currentTime),a.gain.exponentialRampToValueAtTime(.001,audioContext.currentTime+e),n.buffer=i,n.connect(a).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),n.start(),n.stop(audioContext.currentTime+.5*e)}),a*e*1e3)}function playAxeSoundShort(A=100,q=1){const e=audioContext.createOscillator(),t=audioContext.createGain(),o=audioContext.createBufferSource(),a=audioContext.createBuffer(1,.2*audioContext.sampleRate,audioContext.sampleRate);let n=a.getChannelData(0);for(let A=0;A<n.length;A++)n[A]=2*Math.random()-1;e.frequency.setValueAtTime(A,audioContext.currentTime),e.connect(t),t.connect(audioContext.destination),e.start(),e.stop(audioContext.currentTime+.1),t.gain.setValueAtTime(q,audioContext.currentTime),t.gain.exponentialRampToValueAtTime(.001,audioContext.currentTime+.1),o.buffer=a,o.connect(t),o.start(),o.stop(audioContext.currentTime+.1)}function generateReverbImpulseResponse(A,q,e){const t=A.sampleRate*q,o=A.createBuffer(2,t,A.sampleRate),a=o.getChannelData(0),n=o.getChannelData(1);for(let q=0;q<t;q++){const t=500*Math.random()+100;a[q]=Math.sin(2*Math.PI*q*t/A.sampleRate)*e,n[q]=a[q];const o=Math.exp(-q/(.5*A.sampleRate));a[q]*=o,n[q]*=o}return o}function generateBreakingGlassSound(A){const q=20*A.sampleRate,e=A.createBuffer(1,q,A.sampleRate),t=e.getChannelData(0);for(let e=0;e<q;e++){t[e]=.2*(5*Math.random()-1);const q=1e3*Math.random()+10;t[e]+=.1*Math.sin(1.5*Math.PI*e*q/A.sampleRate);const o=Math.exp(-e/(.15*A.sampleRate));t[e]*=o}return e}async function applyReverb(A,q,e,t){const o=await getImpulseBuffer(reverbData),a=A.createConvolver();a.buffer=o;const n=A.createBufferSource();n.buffer=q,n.connect(a),a.connect(masterGain).connect(bandpassFilter).connect(A.destination),n.start()}function playExhaust(A=1,q=1){const e=generateBreakingGlassSound(audioContext);applyReverb(audioContext,e,A,q)}function playExhaust2(A=1,q=1){const e=generateBreakingGlassSound2(audioContext);applyReverb(audioContext,e,A,q)}function oldDropsRandom(){const A=[{of:10,ff:100},{of:10,ff:200},{of:50,ff:300},{of:50,ff:100},{of:100,ff:100},{of:200,ff:100},{of:1e3,ff:100},{of:1e4,ff:500},{of:2e4,ff:1e3}];let q=Math.floor(Math.random()*A.length);dropSoundOld(A[q].of,A[q].ff)}function dropSoundOld(A=10,q=100){const e=audioContext.createOscillator(),t=audioContext.createGain(),o=audioContext.createBiquadFilter();e.type=\"sawtooth\",e.frequency.value=A,o.type=\"lowpass\",o.frequency.value=q,e.frequency.exponentialRampToValueAtTime(100,audioContext.currentTime+.5),t.gain.setValueAtTime(1,audioContext.currentTime),t.gain.exponentialRampToValueAtTime(.001,audioContext.currentTime+1),e.connect(t).connect(o).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),e.start(),e.stop(audioContext.currentTime+1)}async function dropSound2(A=10,q=100,e=500,t=2,o=.1,a=.1){try{decodeBase64ToArrayBuffer(reverbData);const n=await decodeImpulseDataIfNeeded(),i=audioContext.createConvolver();if(i.buffer=n,A<0||A>22050)return;if(q<0||q>22050)return;if(e<0||e>22050)return;const V=audioContext.createOscillator(),g=audioContext.createGain(),s=audioContext.createBiquadFilter();V.type=\"sawtooth\",V.frequency.value=A,s.type=\"lowpass\",s.frequency.value=q,V.frequency.exponentialRampToValueAtTime(e,audioContext.currentTime+t),g.gain.setValueAtTime(.001,audioContext.currentTime),g.gain.linearRampToValueAtTime(a,audioContext.currentTime+.01),g.gain.setValueAtTime(a,audioContext.currentTime+o),g.gain.linearRampToValueAtTime(.001,audioContext.currentTime+2.99),g.connect(i).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),V.connect(g).connect(s).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),V.start(),V.stop(audioContext.currentTime+3)}catch(A){throw A}}let lfo1,modOsc1,stopEchoFXFadeFlag={};async function playEchoFX(A,q,e,t,o){const a=generateBreakingFX(audioContext);stopEchoFXFadeFlag[A]=!1,audioSources[A]=await applyFXWithPanningLoop(A,audioContext,a,q,e,t,o)}async function applyFXWithPanningLoop(A,q,e,t,o,a,n=1){const i=await decodeImpulseDataIfNeeded(),V=q.createConvolver();V.buffer=i;const g=q.createDelay();t=Math.min(Math.max(t,0),1),g.delayTime.value=t;const s=q.createGain();s.gain.value=o;const C=q.createStereoPanner();C.pan.value=a;const E=q.createBufferSource();E.buffer=e,E.connect(g),g.connect(s),s.connect(V).connect(C);const c=q.createGain();c.gain.value=n,C.connect(c),c.connect(masterGain).connect(bandpassFilter).connect(q.destination),g.connect(g),E.start();return E}function stopEchoFXFade(A){audioSources[A]&&audioSources[A].stop()}function generateBreakingFXSize(A,q=44100,e=1){const t=A.sampleRate,o=Math.ceil(q*e),a=A.createBuffer(1,o,q),n=a.getChannelData(0),i=t/q;for(let A=0;A<o;A++){const q=Math.floor(A*i);n[A]=.2*(10.15*Math.random()-.15);const e=10*Math.random()+10;n[A]+=.1*Math.sin(.5*Math.PI*q*e/t);const o=Math.exp(-q/(.05*t));n[A]*=o}return a}function generateBreakingFX(A){const q=30*A.sampleRate,e=A.createBuffer(1,q,A.sampleRate),t=e.getChannelData(0);for(let e=0;e<q;e++){t[e]=.2*(10.15*Math.random()-.15);const q=10*Math.random()+10;t[e]+=.1*Math.sin(.5*Math.PI*e*q/A.sampleRate);const o=Math.exp(-e/(.05*A.sampleRate));t[e]*=o}return e}function applyEchoWithPanning(A,q,e,t,o,a){const n=A.createDelay();n.delayTime.value=e;const i=A.createGain();i.gain.value=t;const V=A.createStereoPanner();V.pan.value=o;const g=A.createBufferSource();g.buffer=q,g.connect(n),n.connect(i),i.connect(V),V.connect(masterGain).connect(bandpassFilter).connect(A.destination),n.connect(n),g.start();const s=setInterval((()=>{V.pan.value=2*Math.random()-1}),a),C=()=>{clearInterval(s),g.disconnect(),n.disconnect(),i.disconnect(),V.disconnect()};g.onended=()=>{C(),!0===app.audio&&!1===holdOnSoundEvents&&playEcho(e,t,o,a)},g.onerror=C}function generateBreakingGlassSound2(A,q=44100){const e=A.sampleRate,t=Math.ceil(20*q),o=A.createBuffer(1,t,q),a=o.getChannelData(0),n=e/q*.15;for(let A=0;A<t;A++){const q=.2*(1*Math.random()-1),t=100*Math.random()+10,o=(q+.1*Math.sin(1*Math.PI*A*t/e))*Math.exp(-A/n);a[A]=o}return o}function playEcho(A,q,e,t){const o=generateBreakingGlassSound2(audioContext);applyEchoWithPanning(audioContext,o,A,q,e,t)}let lfo,modOsc,modulatorArgs=[[100,.03,20],[50,2,10],[120,3,10],[1.4,2e3,20],[2,5.2,50],[1,10,50],[.5,5,50],[4.6,16.6,50],[55.8,169,30],[428.7,19.1,30],[73.6,.5,30],[5.2,50.4,30]];function modulatorOldA(...A){let q=A[0],e=A[1],t=A[2];null!=lfo1&&lfo1.stop(),null!=modOsc1&&modOsc1.stop(),modOsc1=audioContext.createOscillator(),modOsc1.type=\"sine\",modOsc1.frequency.value=q,lfo1=audioContext.createOscillator(),lfo1.frequency.value=e;const o=audioContext.createGain();o.gain.value=t,lfo1.connect(o),o.connect(modOsc1.frequency),modOsc1.start(),lfo1.start(),modOsc1.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination)}let whiteNoise,gainNode,isStarted=!1;function modulatorA(...A){let q=A[0],e=A[1],t=A[2];isStarted&&(lfo.stop(),modOsc.stop(),isStarted=!1),modOsc=audioContext.createOscillator(),modOsc.type=\"triangle\",modOsc.frequency.value=q,lfo=audioContext.createOscillator(),lfo.frequency.value=e;const o=audioContext.createGain();o.gain.value=t,lfo.connect(o),o.connect(modOsc.frequency),modOsc.start(),lfo.start(),isStarted=!0,modOsc.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination)}function modulatorB(...A){let q=\"sine\",e=A[0],t=A[1],o=A[2];null!=A[4]&&(q=A[4]);let a=A[3]||.5;isStarted&&(lfo.stop(),modOsc.stop(),isStarted=!1),modOsc=audioContext.createOscillator(),modOsc.type=q,modOsc.frequency.value=e,lfo=audioContext.createOscillator(),lfo.frequency.value=t;const n=audioContext.createGain();n.gain.value=o;const i=audioContext.createGain();i.gain.value=a,lfo.connect(n),n.connect(modOsc.frequency),modOsc.connect(i),i.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),modOsc.start(),lfo.start(),isStarted=!0}let whiteNoiseFr=100,grow=0;function makeWhiteNoise(A,q,e){null==A&&(A=whiteNoiseFr),null!=whiteNoise&&whiteNoise.stop();const t=2*audioContext.sampleRate,o=audioContext.createBuffer(2,t,audioContext.sampleRate),a=o.getChannelData(0),n=o.getChannelData(1);for(let A=0;A<t;A++)a[A]=1.98*Math.random()-1,n[A]=1.98*Math.random()-1;const i=audioContext.createConvolver();i.buffer=o,whiteNoise=audioContext.createBufferSource();const V=2*audioContext.sampleRate,g=audioContext.createBuffer(2,V,audioContext.sampleRate),s=g.getChannelData(0),C=g.getChannelData(1);for(let A=0;A<V;A++)s[A]=2*Math.random()-1,C[A]=2*Math.random()-1;whiteNoise.buffer=g,whiteNoise.loop=!0,whiteNoise.playbackRate.value=A/audioContext.sampleRate,whiteNoise.connect(i);const E=audioContext.createGain();E.gain.value=q,E.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),i.connect(E);const c=audioContext.createGain();c.gain.value=e,c.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),whiteNoise.connect(whiteNoiseGain).connect(c),whiteNoise.start()}async function makeWhiteNoiseF(A,q,e,t,o){decodeBase64ToArrayBuffer(reverbData);const a=await decodeImpulseDataIfNeeded(),n=audioContext.createConvolver();n.buffer=a,void 0===A&&(A=whiteNoiseFr),void 0!==whiteNoise&&\"stopped\"!==whiteNoise.state&&whiteNoise.stop();const i=audioContext.sampleRate*t,V=audioContext.createBuffer(2,i,audioContext.sampleRate),g=V.getChannelData(0),s=V.getChannelData(1);for(let A=0;A<i;A++)g[A]=2*Math.random()-1,s[A]=2*Math.random()-1;whiteNoise=audioContext.createBufferSource(),whiteNoise.buffer=V,whiteNoise.loop=!0,whiteNoise.playbackRate.value=A/audioContext.sampleRate;const C=audioContext.createGain();C.gain.setValueAtTime(0,audioContext.currentTime),C.gain.linearRampToValueAtTime(q,audioContext.currentTime+o),C.gain.setValueAtTime(q,audioContext.currentTime+t-o),C.gain.linearRampToValueAtTime(0,audioContext.currentTime+t),whiteNoise.connect(C),C.connect(n).connect(masterGain).connect(audioContext.destination),whiteNoise.start(),whiteNoise.stop(audioContext.currentTime+t)}function findCharState(){[\"laying\",\"hunched\",\"meditating\",\"collapsed\",\"slouched\",\"sitting\",\"standing\"].map(((A,q)=>({id:q,name:";

  function getPart() external pure returns (string memory) {
    return PART;
  }
  
}

// SPDX-License-Identifier: MIT
pragma solidity 0.8.16;

library SoundImp15 {

  string internal constant PART = "A,l:document.querySelectorAll(`g[id^=\"char-u-${A}\"]`).length}))).sort(((A,q)=>q.l-A.l))[0].l}function checkPerf(){if(window.performance){window.performance.timing.domContentLoadedEventEnd,window.performance.timing.navigationStart;(new Date).getTime(),window.performance.timing.navigationStart}}function getAnimState(A){const q=document.querySelector(A),e=window.getComputedStyle(q),t=e.getPropertyValue(\"animation-name\"),o=e.getPropertyValue(\"animation-play-state\");\"my-animation\"===t&&\"running\"===o&&q.addEventListener(\"animationiteration\",(function(A){if(\"my-animation\"===A.animationName){A.target.style.animationDuration,A.elapsedTime}}))}function playStringSimple(A){const q=A.split(\",\")[1]||A,e=atob(q),t=new Uint8Array(e.length);for(let A=0;A<e.length;A++)t[A]=e.charCodeAt(A);audioContext.decodeAudioData(t.buffer,(A=>{const q=audioContext.createBufferSource();q.buffer=A,q.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),q.start(0)}))}function decodeBase64ToArrayBuffer(A){if(!/^[a-z0-9+/]+={0,2}$/i.test(A))throw new Error(\"Invalid base64 data\");const q=atob(A),e=q.length,t=new ArrayBuffer(e),o=new Uint8Array(t);for(let A=0;A<e;A++)o[A]=q.charCodeAt(A);return t}let animationID,averageVolume,canvasText=\"\";function playString(A){const q=A.split(\",\")[1]||A,e=atob(q),t=new Uint8Array(e.length);for(let A=0;A<e.length;A++)t[A]=e.charCodeAt(A);audioContext.decodeAudioData(t.buffer,(A=>{const q=audioContext.createConvolver();q.buffer=reverbBuffer;const e=audioContext.createGain();e.gain.value=1;const t=()=>{const o=audioContext.createBufferSource();o.buffer=A,o.playbackRate.value=.5*Math.random()+.75,o.connect(e),e.connect(q),q.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination);const a=.5*Math.random();o.start(audioContext.currentTime+a),o.onended=function(){1==app.audio&&0==holdOnSoundEvents&&t()}};t()}))}function getVolume(){analyser.fftSize=8192;const A=analyser.frequencyBinCount,q=new Uint8Array(A);analyser.getByteFrequencyData(q);let e=0;for(let t=0;t<A;t++)e+=q[t];averageVolume=e/A;null!=document.getElementById(\"volume-ui\")&&(document.getElementById(\"volume-ui\").innerHTML=\"Vol: \"+parseFloat(averageVolume.toFixed(2)))}function analyserUI(A=0,q=130){if(null==document.getElementById(\"analyserCanvas\"))return;analyser.fftSize=8192;const e=analyser.frequencyBinCount,t=new Uint8Array(e),o=document.getElementById(\"analyserCanvas\"),a=o.getContext(\"2d\"),n=o.width/2,i=o.height/2;!function V(){animationID=requestAnimationFrame(V);let g=0;for(let A=0;A<e;A++)g+=t[A];averageVolume=g/e,analyser.getByteFrequencyData(t),a.clearRect(0,0,o.width,o.height);const s=2*Math.PI/360;for(let q=0;q<360;q++){const e=q*s,t=(q+1)*s,o=360*q/360;a.beginPath(),a.arc(n,i,A,e,t),a.strokeStyle=`hsl(${o}, 100%, 50%)`,a.stroke()}const C=Math.PI/e;for(let o=0;o<2*e;o++){const V=t[o%e]/128*q,g=o*C,s=n+A*Math.cos(g)+V*Math.cos(g),E=i+A*Math.sin(g)+V*Math.sin(g),c=360*o/(2*e);a.strokeStyle=`hsl(${c}, 100%, 50%)`,a.beginPath(),a.moveTo(n+A*Math.cos(g),i+A*Math.sin(g)),a.lineTo(s,E),a.stroke()}a.font=\"45px Arial\",a.fillStyle=\"rgba(255,255,255,0.5)\",a.fillText(canvasText,70,65);const E=o.width*(averageVolume/100),c=a.createLinearGradient(0,0,o.width,0);c.addColorStop(0,\"red\"),c.addColorStop(.5,\"yellow\"),c.addColorStop(1,\"blue\"),a.fillStyle=c,a.fillRect(0,o.height-4,E,4)}()}function getRMSLevel(A){const q=4096,e=new Float32Array(q),t=A.context.createGain(),o=A.context.createScriptProcessor(q,1,1);return t.connect(o),o.connect(A.context.destination),o.onaudioprocess=A=>{const t=A.inputBuffer.getChannelData(0);let o=0;for(let A=0;A<t.length;A++)o+=t[A]*t[A];const a=Math.sqrt(o/t.length);e.push(a),e.length>q&&e.shift()},A.connect(t),20*Math.log10(e.reduce(((A,q)=>A+q),0)/e.length)}function getPlayingHeadPosition(A){const q=A.playbackRate.value;return Math.max(0,audioContext.currentTime-A.startTime)*q}async function playStringPan(A){const q=decodeBase64ToArrayBuffer(A.split(\",\")[1]||A),e=await getImpulseBufferShort(reverbDataShort),t=audioContext.createConvolver();let o;t.buffer=e,audioContext.decodeAudioData(q,(A=>{audioContext.createGain();const q=audioContext.createGain(),e=audioContext.createStereoPanner();e.pan.value=1-1*Math.random();const a=()=>{if(1==app.audio&&0==holdOnSoundEvents){o=audioContext.createBufferSource(),o.buffer=A;let n=app.psc.initRate+Math.random()*app.psc.randomRate;o.playbackRate.value=n,o.connect(q),q.connect(e).connect(t).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination);let i=A.duration>4?4:A.duration;i+=10*Math.random();const V=app.psc.delay+Math.random()*app.psc.randomDelay,g=(A.duration,Math.random()*app.psc.maxOffset),s=audioContext.currentTime+V;o.start(s,g),o.startTime=s,o.onended=()=>{a()},getPlayingHeadPosition(o)}};a()}))}function glitchEffectSVG(){const A=document.documentElement,q=setInterval((()=>{const q=.99+.15*Math.random();A.style.transform=`scale(${q})`}),10);setTimeout((()=>{clearInterval(q),A.style.transform=\"\"}),100)}let soundEvents=[];function generateWhiteNoise(A){const q=2*A.sampleRate,e=A.createBuffer(1,q,A.sampleRate),t=e.getChannelData(0);for(let A=0;A<q;A++)t[A]=2*Math.random()-1;return e}async function doorsRev(A,q=1){try{const e=await getImpulseBufferShort(reverbDataShort),t=audioContext.createConvolver();t.buffer=e;const o=generateWhiteNoise(audioContext),a=audioContext.createBufferSource();a.buffer=o,a.loop=!0;const n=audioContext.createBiquadFilter();n.type=\"bandpass\";const i=audioContext.createGain();i.gain.value=.1;const V=audioContext.createOscillator();V.type=\"sine\";const g=audioContext.createGain();g.gain.value=0,a.connect(n).connect(i).connect(t).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),V.connect(g).connect(t).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),\"open\"===A?(n.frequency.setValueAtTime(200,audioContext.currentTime),n.frequency.linearRampToValueAtTime(2e3,audioContext.currentTime+q),V.frequency.setValueAtTime(50,audioContext.currentTime),V.frequency.linearRampToValueAtTime(500,audioContext.currentTime+q)):\"close\"===A&&(n.frequency.setValueAtTime(2e3,audioContext.currentTime),n.frequency.linearRampToValueAtTime(200,audioContext.currentTime+q),V.frequency.setValueAtTime(500,audioContext.currentTime),V.frequency.linearRampToValueAtTime(50,audioContext.currentTime+q)),a.start(),V.start(),a.stop(audioContext.currentTime+q),V.stop(audioContext.currentTime+q)}catch(A){throw A}}function doors(A,q=1){const e=generateWhiteNoise(audioContext),t=audioContext.createBufferSource();t.buffer=e,t.loop=!0;const o=audioContext.createBiquadFilter();o.type=\"bandpass\";const a=audioContext.createGain();a.gain.value=.1;const n=audioContext.createOscillator();n.type=\"sine\";const i=audioContext.createGain();i.gain.value=0,t.connect(o).connect(a).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),n.connect(i).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),\"open\"===A?(o.frequency.setValueAtTime(200,audioContext.currentTime),o.frequency.linearRampToValueAtTime(2e3,audioContext.currentTime+q),n.frequency.setValueAtTime(50,audioContext.currentTime),n.frequency.linearRampToValueAtTime(500,audioContext.currentTime+q)):\"close\"===A&&(o.frequency.setValueAtTime(2e3,audioContext.currentTime),o.frequency.linearRampToValueAtTime(200,audioContext.currentTime+q),n.frequency.setValueAtTime(500,audioContext.currentTime),n.frequency.linearRampToValueAtTime(50,audioContext.currentTime+q)),t.start(),n.start(),t.stop(audioContext.currentTime+q),n.stop(audioContext.currentTime+q)}function conveyorIn(){doors(\"open\")}function conveyorOut(){doors(\"close\")}function playWaterInPipes2(){try{const A=5,q=.5,e=(A,e)=>{const t=audioContext.createOscillator();t.type=\"sine\",t.frequency.setValueAtTime(A,e);const o=audioContext.createGain();o.gain.setValueAtTime(0,e),o.gain.linearRampToValueAtTime(1,e+.01),o.gain.linearRampToValueAtTime(0,e+q);const a=audioContext.createBiquadFilter();a.type=\"lowpass\",a.frequency.setValueAtTime(800,e);const n=audioContext.createBiquadFilter();n.type=\"highpass\",n.frequency.setValueAtTime(100,e),t.connect(o).connect(a).connect(n).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),t.start(e),t.stop(e+q)};for(let t=0;t<A;t++){const A=100+200*Math.random();e(A,audioContext.currentTime+t*q/2)}}catch(A){throw A}}async function playWaterInPipes(A=3,q=.3,e=800,t=100){try{const o=await getImpulseBufferShort(reverbDataShort),a=audioContext.createConvolver();a.buffer=o;const n=(A,o)=>{const n=audioContext.createOscillator();n.type=\"sine\",n.frequency.setValueAtTime(A,o);const i=audioContext.createGain();i.gain.setValueAtTime(0,o),i.gain.linearRampToValueAtTime(1,o+.01),i.gain.linearRampToValueAtTime(0,o+q);const V=audioContext.createBiquadFilter();V.type=\"lowpass\",V.frequency.setValueAtTime(e,o);const g=audioContext.createBiquadFilter();g.type=\"highpass\",g.frequency.setValueAtTime(t,o),n.connect(i).connect(V).connect(g).connect(a).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),n.start(o),n.stop(o+q)};for(let e=0;e<A;e++){const A=100+200*Math.random();n(A,audioContext.currentTime+e*q/2)}}catch(A){throw A}}function incineratorH2(A=5,q=50,e=60,t=65,o=200){try{const a=A=>{const q=audioContext.createOscillator();return q.type=\"sine\",q.frequency.setValueAtTime(A,audioContext.currentTime),q},n=audioContext.createBiquadFilter();n.type=\"lowpass\",n.frequency.setValueAtTime(o,audioContext.currentTime);const i=audioContext.createGain(),V=a(50),g=a(60),s=a(65),C=a(.2),E=audioContext.createGain();E.gain.setValueAtTime(.5,audioContext.currentTime),V.connect(i),g.connect(i),s.connect(i),i.connect(n).connect(i).connect(bandpassFilter).connect(audioContext.destination),C.connect(E).connect(i.gain),V.start(audioContext.currentTime),g.start(audioContext.currentTime),s.start(audioContext.currentTime),C.start(audioContext.currentTime),s.onended=function(){1==app.audio&&0==holdOnSoundEvents&&incineratorH2(A,q,e,t,o)},setTimeout((()=>{V.stop(),g.stop(),s.stop(),C.stop()}),1e3*A)}catch(A){throw A}}async function incineratorH3(A=5,q=50,e=60,t=65,o=200,a=.5){const n=await getImpulseBufferShort(reverbDataShort),i=audioContext.createConvolver();i.buffer=n;const V=A=>{const q=audioContext.createOscillator();return q.type=\"sine\",q.frequency.setValueAtTime(A,audioContext.currentTime),q},g=audioContext.createBiquadFilter();g.type=\"lowpass\",g.frequency.setValueAtTime(o,audioContext.currentTime);const s=audioContext.createGain(),C=audioContext.createGain();C.gain.value=a;const E=V(q),c=V(e),B=V(t),M=V(.2),I=audioContext.createGain();I.gain.setValueAtTime(.5,audioContext.currentTime),E.connect(s),c.connect(s),B.connect(s),s.connect(C).connect(g).connect(i).connect(s).connect(bandpassFilter).connect(audioContext.destination),M.connect(I).connect(s.gain),E.start(audioContext.currentTime),c.start(audioContext.currentTime),B.start(audioContext.currentTime),M.start(audioContext.currentTime),B.onended=function(){1==app.audio&&0==holdOnSoundEvents&&incineratorH3(A,q,e,t,o,a)},setTimeout((()=>{E.stop(),c.stop(),B.stop(),M.stop()}),1e3*A)}function incineratorH(A=5,q=1){try{const e=(A,q)=>{const e=audioContext.createOscillator();e.type=\"sine\",e.frequency.setValueAtTime(A,audioContext.currentTime);const o=audioContext.createGain();return o.gain.setValueAtTime(q,audioContext.currentTime),e.connect(o).connect(t),e},t=audioContext.createBiquadFilter();t.type=\"lowpass\",t.frequency.setValueAtTime(200,audioContext.currentTime);const o=e(50,.6*q),a=e(60,.4*q),n=e(65,.2*q);t.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),o.start(audioContext.currentTime),a.start(audioContext.currentTime),n.start(audioContext.currentTime),o.stop(audioContext.currentTime+A),a.stop(audioContext.currentTime+A),n.stop(audioContext.currentTime+A),n.onended=function(){1==app.audio&&0==holdOnSoundEvents&&incineratorH(A,q)}}catch(A){throw A}}function tubesSometimes(){try{let A=10*Math.random();A<1&&dropSound2(.01,580+30*Math.random(),90+10*Math.random(),.4*Math.random(),.1),A>8&&dropSound2(.01+.1*Math.random(),10*Math.random(),10*Math.random(),.4*Math.random(),1*Math.random())}catch(A){throw A}}function tubesPipes(){let A=Math.floor(17e3*Math.random());setTimeout((()=>{playWaterInPipes(1+10*Math.random(),.15*Math.random(),6e3*Math.random(),10*Math.random())}),A)}async function drum(A=\"kick\",q=1,e=150){const t=await getImpulseBufferShort(reverbDataShort),o=audioContext.createConvolver();o.buffer=t;const a=audioContext.createGain();switch(a.gain.value=q,A){case\"kick\":const A=audioContext.createOscillator(),q=audioContext.createGain();null==e&&(e=150),A.frequency.setValueAtTime(e,audioContext.currentTime),A.frequency.exponentialRampToValueAtTime(.001,audioContext.currentTime+.5),q.gain.setValueAtTime(1,audioContext.currentTime),q.gain.exponentialRampToValueAtTime(.001,audioContext.currentTime+.5),A.connect(q).connect(o).connect(a).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),A.start(),A.stop(audioContext.currentTime+.5);break;case\"snare\":const t=new AudioBufferSourceNode(audioContext),n=audioContext.createBuffer(1,audioContext.sampleRate,audioContext.sampleRate),i=n.getChannelData(0);for(let A=0;A<audioContext.sampleRate;A++)i[A]=2*Math.random()-1;t.buffer=n;const V=audioContext.createGain();V.gain.setValueAtTime(1,audioContext.currentTime),V.gain.exponentialRampToValueAtTime(.01,audioContext.currentTime+.2),t.connect(V).connect(o).connect(a).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),t.start(),t.stop(audioContext.currentTime+.2);break;case\"hihat\":const g=audioContext.createOscillator(),s=audioContext.createGain();null==e&&(e=1e3),g.frequency.value=e,s.gain.setValueAtTime(1,audioContext.currentTime),s.gain.exponentialRampToValueAtTime(.001,audioContext.currentTime+.1),g.connect(s).connect(o).connect(a).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),g.start(),g.stop(audioContext.currentTime+.1);break;case\"bass\":const C=audioContext.createOscillator(),E=audioContext.createGain();null==e&&(e=80),C.frequency.value=e,E.gain.setValueAtTime(1,audioContext.currentTime),E.gain.exponentialRampToValueAtTime(.001,audioContext.currentTime+.5),C.connect(E).connect(o).connect(a).connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),C.start(),C.stop(audioContext.currentTime+.5)}}function packsDrop(){drum(\"kick\")}function altarPerc(){playEchoFX(\"altarPerc\",1.3322,.08*Math.random(),1*Math.random()-1*Math.random(),3)}function spitPerc(){playEchoFX(\"spitPerc\",1,1,0,.25)}function altarChoir1(){makeChoir(1.3,3,260,.1)}function altarChoir2(){makeChoir(1.6,3,320,.1)}function playEntry(){dropSound2(6,100,501,2,.1)}function cellsElCharging(){isTouchDevice||encounterSound(200,2,13,4)}function playCellsEntry(){dropSound2(1e4,8,1,.1,1)}function whiteNoiseCells(){makeWhiteNoise(100,.15,.3)}function bubblesCells(){bubbles2&&playStringPan(bubbles2)}function cellsDrops(){let A=15e3*Math.random();setTimeout((function(){dropSound2(15e3+4e3*Math.random(),15e3+4e3*Math.random(),1,.5*Math.random(),1)}),A);let q=2e4*Math.random();setTimeout((function(){dropSound2(3,1e3,5,10,5),dropSound2(19e3,19e3,5,10,5),playElectric(1e3*Math.random(),.5*Math.random(),.1*Math.random(),!1)}),q)}function drillsSteam(){let A=2e4*Math.random(),q=2e4*Math.random(),e=2+4*Math.random(),t=1+1*Math.random(),o=1+1*Math.random();setTimeout((function(){playSteam(e,t,o,1)}),A),setTimeout((function(){playWhiteNoise(1*Math.random(),2e3*Math.random(),!0)}),q)}function randomTongues(){let A=15e3*Math.random(),q=10*Math.random();setTimeout((()=>{playAxeSound(90,.05,q,1)}),A),oldDropsRandom()}function playEchoTongues(){playEchoFX(\"playEchoTongues\",.6,1,0,.1)}function modulatorTongues(){modulatorB(73.6,.5,30,.1)}function whiteNConveyor(){makeWhiteNoise(1400,.05,.01)}function playEchoConveyor(){playEcho(.17,.025,0,.5),playEcho(.47,.1,0,10)}function factoryConveyor(){playStringPan(factory)}function spitOpen(){playAxeSound(90,.05,2.9,1)}function spitOut(){playSteam(5,.7,1,1)}function gulpSuck(){dropSound2(290,10,.03,2,.01)}function gulpSuckIn(){playAxeSound(90,.05,2.9,1)}function gulpHit(){playAxeSound(90,.2,1,1)}function randomSyringes(){let A=4+2*Math.random(),q=.2+.6*Math.random(),e=(Math.random(),15e3*Math.random());setTimeout((()=>{playSteam(A,q,1,1)}),e)}function whiteNBeast(){makeWhiteNoiseF(5e3+5e3*Math.random(),.01,.02,9,1)}function enterBeast(){playRSound(220,.03,.1,5,.012,.01)}function conveyorBeast(){playRSound(150,.03,.024,20,.2,.01)}function whiteNoiseTubes(){makeWhiteNoise(1400,.05,.02)}function incineratorHTubes(){incineratorH(19,.5)}function bubblesTubes(){playStringPan(bubbles)}function ominousGulps(){modulatorA(...modulatorArgs[1])}function bubblesGulps(){playStringPan(bubbles2)}function ominousSpit(){modulatorA(...modulatorArgs[1])}function bubblesSpit(){playStringPan(bubbles2)}function inhaleNose(){playStringPan(inhale)}function ominousNose(){modulatorA(...modulatorArgs[1])}function modulatorDrills(){modulatorA(5.2,50.4,30)}function whiteNoiseDrills(){makeWhiteNoise(100,.1,.3)}function bubblesSyringes(){playStringPan(bubbles2)}function modulatorSyringes(){modulatorB(73.6,.5,30,.1)}function playResult(A=450){dropSound2(160,100,A+50*Math.random(),.4,.1)}function playResult2(){playElectric(12+6*Math.random(),1+3*Math.random(),1+2*Math.random(),!1)}function playResult3(){drum(\"hihat\",.02)}function strangeEnd(){playAngelSound(1+10*Math.random(),150+100*Math.random(),.1+.3*Math.random(),.1+.3*Math.random())}function electroSound(){let A=2e3*Math.random();setTimeout((function(){playEchoFXFade(\"electroSound\",.02+.02*Math.random(),.3,0,.023,3,5)}),A)}function specificDropFX(){if(2*Math.random()>1){let A=3*Math.random();dropSound2(.5+A,50*Math.random(),501*Math.random(),2+A,.1,.1)}else{dropSound2(Math.floor(6*Math.random()),200,2e3,3e3,10)}}async function lowQuietElectricHumRev(A=\"triangle\",q=60,e=1e3,t=2,o=2,a=!1,n=1){const i=await getImpulseBuffer(reverbData),V=audioContext.createConvolver();V.buffer=i;const g=audioContext.createOscillator();g.type=A,g.frequency.value=q;const s=audioContext.createOscillator();s.type=\"sine\",s.frequency.value=t;const C=audioContext.createGain();C.gain.value=o,s.connect(C),C.connect(g.frequency);const E=audioContext.createGain();E.gain.value=.05;const c=audioContext.createGain();c.gain.value=n,g.connect(E),E.connect(V),V.connect(c),c.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),g.start(),s.start(),setTimeout((()=>{0==a&&(g.stop(),s.stop())}),e)}async function lowQuietElectricHum(A=\"triangle\",q=60,e=1e3,t=2,o=2,a=!1,n=1){const i=audioContext.createOscillator();i.type=A,i.frequency.value=q;const V=audioContext.createOscillator();V.type=\"sine\",V.frequency.value=t;const g=audioContext.createGain();g.gain.value=o,V";

  function getPart() external pure returns (string memory) {
    return PART;
  }
  
}

// SPDX-License-Identifier: MIT
pragma solidity 0.8.16;

library SoundImp16 {

  string internal constant PART = ".connect(g),g.connect(i.frequency);const s=audioContext.createGain();s.gain.value=.05;const C=audioContext.createGain();C.gain.value=n,i.connect(s),s.connect(C),C.connect(masterGain).connect(bandpassFilter).connect(audioContext.destination),i.start(),V.start(),setTimeout((()=>{0==a&&(i.stop(),V.stop())}),e)}function liftDown(){Math.random();dropSound2(200,20,.1,10,1)}function liftDown2(){drum(\"kick\",.3)}function sawSound(){playAxeSound(4e3+1e3*Math.random(),.025)}function holeShrink(){dropSound2(60,10,1,10,10)}function dropBox(){playAxeSoundShort(500,.005)}function boxInHole(){dropSound2(.001,100,1e4,.4,.1)}function playExcretion(){playExhaust2(1,.001*Math.random()),setTimeout((()=>dropSound2(3e3,1e3,.1,.2,0)),500)}function playLittleDrop(){playAxeSound(2e3+500*Math.random(),.005)}function startBeast(){boilingWater(\"boilingWater\",.25,.1,1.5)}function stopBeast(){fadeOut(getAC(\"boilingWater\"),1.5)}function playEchoApparatus(){playEcho(.01,.01,0,0)}function humidSApparatus(){lowQuietElectricHum(\"sawtooth\",48.5,5e3,.6,4.5,!0,.3)}function soundOff(A){masterGain.gain.setValueAtTime(masterGain.gain.value,audioContext.currentTime),masterGain.gain.linearRampToValueAtTime(0,audioContext.currentTime+A)}function soundOn(A=1,q=1){null!=q&&\"NaN\"!=q||(q=1),null!=app.psc.masterGain&&(q=app.psc.masterGain),masterGain.gain.setValueAtTime(0,audioContext.currentTime),masterGain.gain.linearRampToValueAtTime(parseFloat(q),audioContext.currentTime+parseFloat(A))}let hasLogged={};function listenToTime(A,q){q.forEach((q=>{1==app.audio&&1==eventSounds&&(!hasLogged[q.name]&&Math.abs(q.time-A)<=60?(null!=window[q.name]&&window[q.name](),hasLogged[q.name]=!0):Math.abs(q.time-A)>100&&(hasLogged[q.name]=!1))}))}function returnTime(A){if(null!=document.getElementById(\"cycleTime\")){document.getElementById(\"cycleTime\").innerHTML=A}}function displayPerformance(){if(null==document.getElementById(\"fpsTime\"))return;let A=0,q=performance.now();!function e(){A++;const t=performance.now();if(t-q>=1e3){let e=`FPS: ${A}  M: ${performance.memory?(performance.memory.usedJSHeapSize/1048576).toFixed(2):\"N/A\"} MB`;document.getElementById(\"fpsTime\").innerHTML=e,A=0,q=t}requestAnimationFrame(e)}()}function formatTime(A){A=Math.round(A);let q=Math.floor(A/1e3),e=Math.floor(q/60),t=q%60,o=A%1e3;return e=e.toString().padStart(2,\"0\"),t=t.toString().padStart(2,\"0\"),o=o.toString().padStart(3,\"0\"),`${e}:${t}:${o}`}function getCurrentAnimationTime(A,q){let e=null,t=document.getElementById(A);return t.addEventListener(\"animationstart\",(A=>{e=Date.now()})),t.addEventListener(\"animationiteration\",(A=>{e=Date.now()})),function(){if(null===e)return 0;let A=(Date.now()-e)/q;return A>=1&&(e=null),A}}function getAnimatedElementsIds(){const A=document.getElementsByTagName(\"*\"),q=[];for(let e of A){const A=getComputedStyle(e).animationName,t=getComputedStyle(e).animationDuration;A&&\"none\"!==A&&e.id&&q.push({id:e.id,duration:t})}return q}let monitorProgressID,restartSounds=!1;function monitorProgress(){let A=getAnimatedElementsIds(),q=A[A.length-1],e=q.id,t=1e3*parseInt(q.duration),o=getCurrentAnimationTime(e,t);monitorProgressID=setInterval((()=>{if(0==holdOnSoundEvents){if(performance.now()-loadTime>=2e4){let A=t*o(),q=formatTime(A);0==A&&(q=formatTime((new Date).getTime()-window.performance.timing.navigationStart)),canvasText=q,returnTime(q),o()*t>0&&o()*t<100&&0==restartSounds&&(restartSounds=!0,executeSoundEventsAgain(soundEvents)),o()*t>t-1e3&&(restartSounds=!1)}}}),60)}function playEventAlways(A,q,e,t){\"closed\"==audioContext.state&&restartAudioContext(),null!=document.getElementById(`ins-item-${A}`)&&(0!=soundEvents[A].repeat?document.getElementById(`ins-item-${A}`).classList.add(\"fadeout-red\"):document.getElementById(`ins-item-${A}`).classList.add(\"pulsate-red\")),window[q]()}function playEvent(A,q,e,t){1==app.audio&&0==holdOnSoundEvents&&(null!=document.getElementById(`ins-item-${A}`)&&(0!=soundEvents[A].repeat?document.getElementById(`ins-item-${A}`).classList.add(\"fadeout-red\"):document.getElementById(`ins-item-${A}`).classList.add(\"pulsate-red\")),window[q]())}function executeSoundEventsAgain(A){const q=performance.now();1==eventSounds&&A.forEach(((A,e)=>{const t=A.time;setTimeout((()=>{A.state.includes(app.system.State)&&(0==A.repeat&&1!=A.started&&(A.started=!0,playEvent(e,A.name,t,q)),1==A.repeat&&playEvent(e,A.name,t,q))}),t)}))}function executeSoundEvents(A){const q=performance.now(),e=q-loadTime;1==eventSounds&&e<=2e4&&A.forEach(((A,t)=>{const o=A.time-e;setTimeout((()=>{A.state.includes(app.system.State)&&(A.started=!0,playEvent(t,A.name,o,q))}),o)}))}let noSound=!0;function soundsFilter(A){let q;return null==A&&(q=app.psc),\"Basic\"==A&&(q={masterGain:.88,initRate:.8,randomRate:.2,delay:.1,randomDelay:.1,maxOffset:.1,bandpassFreq:3500,bandpassQ:.225}),\"Degraded\"==A&&(q={masterGain:.88,initRate:.8,randomRate:.2,delay:.1,randomDelay:.1,maxOffset:.1,bandpassFreq:3500,bandpassQ:.5}),\"Embellished\"==A&&(q={masterGain:.88,initRate:.8,randomRate:.2,delay:.1,randomDelay:.1,maxOffset:.1,bandpassFreq:3500,bandpassQ:.05}),q}function soundsBlock(A){let q;return\"Altar\"==A&&1==noSound&&(q='[{\"time\":500,\"name\":\"altarPerc\",\"repeat\":0,\"state\":[\"Basic\",\"Degraded\",\"Embellished\"]},{\"time\":3000,\"name\":\"altarEngage\",\"repeat\":1,\"state\":[\"Embellished\"]},{\"time\":4100,\"name\":\"altarOpen\",\"repeat\":1,\"state\":[\"Embellished\"]},{\"time\":4000,\"name\":\"altarChoir1\",\"repeat\":1,\"state\":[\"Basic\",\"Embellished\"]},{\"time\":5500,\"name\":\"altarPop\",\"repeat\":1,\"state\":[\"Embellished\"]},{\"time\":8000,\"name\":\"altarSent\",\"repeat\":1,\"state\":[\"Basic\",\"Embellished\"]},{\"time\":12000,\"name\":\"altarSporadicDrop\",\"repeat\":1,\"state\":[\"Embellished\"]},{\"time\":16000,\"name\":\"altarChoir2\",\"repeat\":1,\"state\":[\"Basic\",\"Embellished\"]}]'),\"Apparatus\"==A&&1==noSound&&(q='[{\"time\":0,\"name\":\"tubesSometimes\",\"repeat\":1,\"state\":[\"Embellished\",\"Basic\"]},{\"time\":0,\"name\":\"bubblesTubes\",\"repeat\":0,\"state\":[\"Embellished\"]},{\"time\":500,\"name\":\"humidSApparatus\",\"repeat\":0,\"state\":[\"Embellished\"]},{\"time\":500,\"name\":\"playEchoApparatus\",\"repeat\":0,\"state\":[\"Basic\",\"Embellished\"]},{\"time\":1000,\"name\":\"electroSound\",\"repeat\":1,\"state\":[\"Basic\",\"Degraded\",\"Embellished\"]},{\"time\":7000,\"name\":\"specificDropFX\",\"repeat\":1,\"state\":[\"Basic\",\"Embellished\"]},{\"time\":4400,\"name\":\"playResult3\",\"repeat\":1,\"state\":[\"Basic\",\"Degraded\",\"Embellished\"]},{\"time\":10100,\"name\":\"liftDown2\",\"repeat\":1,\"state\":[\"Basic\",\"Degraded\",\"Embellished\"]},{\"time\":15000,\"name\":\"strangeEnd\",\"repeat\":1,\"state\":[\"Embellished\"]}]'),\"Beast\"==A&&1==noSound&&(q='[{\"time\":0,\"name\":\"bubblesTubes\",\"repeat\":0,\"state\":[\"Basic\",\"Degraded\",\"Embellished\"]},{\"time\":2000,\"name\":\"whiteNBeast\",\"repeat\":1,\"state\":[\"Basic\",\"Degraded\"]},{\"time\":2100,\"name\":\"enterBeast\",\"repeat\":1,\"state\":[\"\"]},{\"time\":4000,\"name\":\"startBeast\",\"repeat\":1,\"state\":[\"\"]},{\"time\":4200,\"name\":\"conveyorBeast\",\"repeat\":1,\"state\":[\"Basic\",\"Embellished\"]},{\"time\":8000,\"name\":\"strangeEnd\",\"repeat\":1,\"state\":[\"Embellished\"]},{\"time\":9500,\"name\":\"stopBeast\",\"repeat\":1,\"state\":[\"Basic\",\"Embellished\"]},{\"time\":10000,\"name\":\"stopBeast\",\"repeat\":1,\"state\":[\"Basic\",\"Embellished\"]}]'),\"Cells\"==A&&1==noSound&&(q='[{\"time\":100,\"name\":\"bubblesCells\",\"repeat\":0,\"state\":[\"Basic\",\"Degraded\",\"Embellished\"]},{\"time\":100,\"name\":\"whiteNoiseCells\",\"repeat\":1,\"state\":[\"Embellished\"]},{\"time\":3100,\"name\":\"cellsElCharging\",\"repeat\":1,\"state\":[\"Basic\",\"Embellished\"]},{\"time\":2800,\"name\":\"playCellsEntry\",\"repeat\":1,\"state\":[\"Basic\",\"Degraded\",\"Embellished\"]},{\"time\":7500,\"name\":\"playExcretion\",\"repeat\":1,\"state\":[\"Basic\",\"Degraded\",\"Embellished\"]},{\"time\":9500,\"name\":\"playLittleDrop\",\"repeat\":1,\"state\":[\"Basic\",\"Embellished\"]}]'),\"ConveyorBelt\"==A&&1==noSound&&(q='[{\"time\":0,\"name\":\"strangeEnd\",\"repeat\":1,\"state\":[\"Embellished\"]},{\"time\":100,\"name\":\"factoryConveyor\",\"repeat\":0,\"state\":[\"Embellished\",\"Basic\",\"Degraded\"]},{\"time\":100,\"name\":\"playEchoConveyor\",\"repeat\":0,\"state\":[\"Basic\",\"Degraded\"]},{\"time\":100,\"name\":\"whiteNConveyor\",\"repeat\":0,\"state\":[\"Embellished\"]},{\"time\":500,\"name\":\"altarChoir1\",\"repeat\":1,\"state\":[\"Embellished\"]},{\"time\":3400,\"name\":\"sawSound\",\"repeat\":1,\"state\":[\"Basic\",\"Degraded\"]},{\"time\":4900,\"name\":\"dropBox\",\"repeat\":1,\"state\":[\"Basic\",\"Embellished\"]},{\"time\":7700,\"name\":\"dropBox\",\"repeat\":1,\"state\":[\"Basic\",\"Embellished\"]},{\"time\":8600,\"name\":\"sawSound\",\"repeat\":1,\"state\":[\"Basic\",\"Degraded\"]},{\"time\":10300,\"name\":\"dropBox\",\"repeat\":1,\"state\":[\"Embellished\",\"Basic\"]},{\"time\":11400,\"name\":\"sawSound\",\"repeat\":1,\"state\":[\"Basic\",\"Degraded\"]},{\"time\":13000,\"name\":\"dropBox\",\"repeat\":1,\"state\":[\"Basic\",\"Embellished\"]},{\"time\":14000,\"name\":\"altarChoir2\",\"repeat\":1,\"state\":[\"Embellished\"]},{\"time\":14200,\"name\":\"sawSound\",\"repeat\":1,\"state\":[\"Basic\",\"Degraded\"]},{\"time\":15900,\"name\":\"dropBox\",\"repeat\":1,\"state\":[\"Embellished\",\"Basic\"]}]'),\"Tubes\"==A&&1==noSound&&(q='[{\"time\":0,\"name\":\"strangeEnd\",\"repeat\":1,\"state\":[\"Basic\",\"Embellished\"]},{\"time\":500,\"name\":\"whiteNoiseTubes\",\"repeat\":0,\"state\":[\"Basic\",\"Embellished\"]},{\"time\":500,\"name\":\"incineratorHTubes\",\"repeat\":0,\"state\":[\"Embellished\"]},{\"time\":500,\"name\":\"bubblesTubes\",\"repeat\":0,\"state\":[\"Basic\",\"Embellished\",\"Degraded\"]},{\"time\":2500,\"name\":\"tubesPipes\",\"repeat\":1,\"state\":[\"Embellished\"]},{\"time\":2500,\"name\":\"strangeEnd\",\"repeat\":1,\"state\":[\"Embellished\"]},{\"time\":3000,\"name\":\"tubesSometimes\",\"repeat\":1,\"state\":[\"Embellished\"]}]'),soundEvents=JSON.parse(q),soundEvents}function presetsBlocks(){return soundEvents=[{time:0,name:\"encounterSound\",args:[50,2,5,5],preset:\"encounterS050\",repeat:0,state:[\"Basic\"]},{time:0,name:\"encounterSound\",args:[100,2,5,5],preset:\"encounterS100\",repeat:0,state:[\"Basic\"]},{time:0,name:\"encounterSound\",args:[500,2,5,5],preset:\"encounterS500\",repeat:0,state:[\"Basic\"]},{time:0,name:\"encounterSound\",args:[1e3,2,5,5],preset:\"encounterS1000\",repeat:0,state:[\"Basic\"]},{time:0,name:\"encounterSound\",args:[1500,2,5,5],preset:\"encounterS1500\",repeat:0,state:[\"Basic\"]}],soundEvents}function getSoundsData(){return app.system=JSON.parse(document.getElementById(\"shell\").getAttribute(\"data-info\")),soundsBlock(app.system.Machine)}function createSoundList(A=getSoundsData()){if(null==document.getElementById(\"instruments-list\"))return;document.getElementById(\"instruments-list\").innerHTML=\"\",null!=document.getElementById(\"metaDataInfo\")&&(document.getElementById(\"metaDataInfo\").innerHTML=`<p>State:  <span class=\"green-background\" style=\"border-radius:5px; padding:2px;\">${app.system.State}</span></p><p>Productivity:  ${app.system.Productivity}</p> <p>Machine: ${app.system.Machine}</p>`);let q=document.getElementById(\"instruments-list\");for(let e=0;e<A.length;e++){let t=\"\",o=\"\",a=\"\",n=A[e].state;for(let A=0;A<n.length;A++)\"Basic\"==n[A]&&(o=\" green-background\"),\"Embellished\"==n[A]&&(a=\" green-background\"),\"Degraded\"==n[A]&&(t=\" green-background\");let i=`<div class=\"ins-bg\" id=\"ins-item-${e}\"><div class=\"mb2 mw-50\" id=\"ins-time-${e}\" contentEditable=\"true\">${formatTime(A[e].time)}</div><div class=\"mb mw-130\" id=\"ins-name-${e}\">${A[e].name}</div><div class=\"mb${t}\" id=\"ins-d-${e}\">D</div><div class=\"mb${o}\" id=\"ins-b-${e}\">B</div><div class=\"mb${a}\" id=\"ins-e-${e}\">E</div><div class=\"mb3\" id=\"ins-del-${e}\">DEL</div></div>`;q.innerHTML+=i}document.getElementById(\"audioPanel\");document.querySelectorAll('[id^=\"ins-d-\"]').forEach((A=>{A.addEventListener(\"click\",(function(){let A=parseInt(String(this.id).split(\"-\")[2]);soundEvents[A].state.includes(\"Degraded\")?soundEvents[A].state=soundEvents[A].state.filter((A=>\"Degraded\"!==A)):soundEvents[A].state.push(\"Degraded\"),this.classList.toggle(\"green-background\")}))})),document.querySelectorAll('[id^=\"ins-b-\"]').forEach((A=>{A.addEventListener(\"click\",(function(){let A=parseInt(String(this.id).split(\"-\")[2]);soundEvents[A].state.includes(\"Basic\")?soundEvents[A].state=soundEvents[A].state.filter((A=>\"Basic\"!==A)):soundEvents[A].state.push(\"Basic\"),this.classList.toggle(\"green-background\")}))})),document.querySelectorAll('[id^=\"ins-e-\"]').forEach((A=>{A.addEventListener(\"click\",(function(){let A=parseInt(String(this.id).split(\"-\")[2]);soundEvents[A].state.includes(\"Embellished\")?soundEvents[A].state=soundEvents[A].state.filter((A=>\"Embellished\"!==A)):soundEvents[A].state.push(\"Embellished\"),this.classList.toggle(\"green-background\")}))})),document.querySelectorAll('[id^=\"ins-del-\"]').forEach((A=>{A.addEventListener(\"click\",(function(){let A=parseInt(String(this.id).split(\"-\")[2]);confirm(\"Are you sure?\")&&(soundEvents.splice(A,1),createSoundList(soundEvents))}))})),document.querySelectorAll('[id^=\"ins-name-\"]').forEach(((A,q)=>{A.addEventListener(\"click\",(function(){let A=parseInt(String(this.id).split(\"-\")[2]),q=performance.now();playEventAlways(A,soundEvents[A].name,soundEvents[A].time,q)}))})),document.querySelectorAll('[id^=\"ins-time-\"]').forEach(((A,q)=>{A.addEventListener(\"click\",(function(){let q=parseInt(String(this.id).split(\"-\")[2]),e=prompt(\"Enter the new time value in milliseconds:\");null!=e&&/^\\d+$/.test(e)&&(A.textContent=formatTime(e),soundEvents[q].time=e,soundEvents.sort((function(A,q){return A.time-q.time})),createSoundList(soundEvents))}))})),document.querySelectorAll('[id^=\"ins-item-\"]').forEach(((A,q)=>{0!=soundEvents[q].repeat?(A.classList.add(\"fadeout-red\"),A.addEventListener(\"animationend\",(function(){A.classList.remove(\"fadeout-red\")}))):A.classList.add(\"pulsate-red\")})),document.getElementById(\"saveSoundsButton\").onclick=function(){exportSoundTSV(convertToTSV(soundEvents))},document.getElementById(\"saveSystemButton\").onclick=function(){app.system.soundEvents=soundEvents,app.system.psc=app.psc;let A=convertObjToTsv(app.system),q=A.metadataTsv+\"\\n\\n\"+A.pscTsv+\"\\n\\n\"+A.soundEventsTsv;exportSoundTSV(q)},document.getElementById(\"loadSystemButton\").onclick=function(){document.getElementById(\"fileinput\").click()},document.getElementById(\"importPresetsButton\").onclick=function(){document.getElementById(\"fileinput\").click()}}function analyseSystem(){soundsEvents=getSoundsData(),0==holdOnSoundEvents&&executeSoundEvents(soundEvents),null!=document.getElementById(\"metaDataInfo\")&&(document.getElementById(\"metaDataInfo\").innerHTML=`<p>State:  <span class=\"green-background\" style=\"border-radius:5px; padding:2px;\">${app.system.State}</span></p><p>Productivity:  ${app.system.Productivity}</p><p>Machine: ${app.system.Machine}</p>`)}function convertSVGToViewBox(){if(null==document.getElementsByTagName(\"svg\")[0])return;let A=document.getElementsByTagName(\"svg\")[0];A.removeAttribute(\"width\"),A.removeAttribute(\"height\"),A.setAttribute(\"viewBox\",\"0 0 936 1080\"),A.setAttribute(\"style\",\"background-color: #FFFFFF\")}function addNewSound(){let A=document.getElementById(\"soundSelect\");const q=A.selectedIndex,e=A.options[q];let t=JSON.parse(e.value);t.time=0,soundEvents.unshift(t),createSoundList(soundEvents)}function tryNewSound(){let A=document.getElementById(\"soundSelect\");const q=A.selectedIndex,e=A.options[q];let t=JSON.parse(e.value);window[t.name]()}function tryNewPreset(){let A=document.getElementById(\"presetSelect\");const q=A.selectedIndex,e=A.options[q];let t=JSON.parse(e.value);window[t.instrument](...Object.values(t.args))}function addNewPreset(){let A=document.getElementById(\"presetSelect\");const q=A.selectedIndex,e=A.options[q];let t={},o=JSON.parse(e.value);t.name=o.instrument,t.time=0,soundEvents.unshift(t),createSoundList(soundEvents)}function restartAudioContext(){audioContext=new(window.AudioContext||window.webkitAudioContext),masterGain=audioContext.createGain(),whiteNoiseGain=audioContext.createGain(),whiteNoiseGain.gain.value=1,bandpassFilter=audioContext.createBiquadFilter(),bandpassFilter.type=\"bandpass\",bandpassFilter.frequency.value=app.psc.bandpassFreq,bandpassFilter.Q.value=app.psc.bandpassQ,analyser=audioContext.createAnalyser(),analyser.fftSize=2048;const A=decodeBase64ToArrayBuffer(reverbData);audioContext.decodeAudioData(A,(A=>{reverbBuffer=A}))}function activateAudioContext(){audioContext=new(window.AudioContext||window.webkitAudioContext),masterGain=audioContext.createGain(),whiteNoiseGain=audioContext.createGain(),whiteNoiseGain.gain.value=1,bandpassFilter=audioContext.createBiquadFilter(),bandpassFilter.type=\"bandpass\",bandpassFilter.frequency.value=app.psc.bandpassFreq,bandpassFilter.Q.value=app.psc.bandpassQ,analyser=audioContext.createAnalyser(),analyser.fftSize=2048;const A=decodeBase64ToArrayBuffer(reverbData);audioContext.decodeAudioData(A,(A=>{reverbBuffer=A}))}function newAudioUI(){let A=document.querySelector(\"svg\"),q=cNS2(\"g\");q.setAttribute(\"id\",\"audio-icon\"),A.append(q),q.innerHTML=audioUIStr3;let e=cNS2(\"g\");e.setAttribute(\"id\",\"hexagon\");let t=cNS2(\"polygon\");t.setAttribute(\"points\",\"0,270 468,0 936,270 936,810 468,1080 0,810\"),e.append(t);let o=!0;function a(){!function(){const A=\"none\"===document.getElementById(\"si-u-off\").style.display,q=A?0:app.psc.masterGain;if(void 0!==masterGain){const A=masterGain.gain,e=audioContext.currentTime,t=.5;A.cancelScheduledValues(e),A.setValueAtTime(A.value,e),A.linearRampToValueAtTime(q,e+t)}document.getElementById(\"si-u-off\").style.display=A?\"inline-block\":\"none\",document.getElementById(\"si-u-on\").style.display=A?\"none\":\"inline-block\"}(),o=!o,uaExecuted||(ua(),uaExecuted=!0)}function n(A){A.preventDefault(),A.stopPropagation(),a()}let i=document.getElementById(\"si-button-body\");isTouchDevice?i.addEventListener(\"touchend\",n,!1):i.addEventListener(\"click\",n,!1)}function ua(){null!=document.getElementById(\"shell\")&&(app.system=JSON.parse(document.getElementById(\"shell\").getAttribute(\"data-info\")),app.psc=soundsFilter(app.system.State)),null!=document.getElementsByTagName(\"svg\")[0]?(activateAudioContext(),monitorProgress(),analyseSystem(),analyserUI(),app.audio=!0):activateAudioContext()}window.onload=function(){convertSVGToViewBox(),createSoundList(),newAudioUI(),document.getElementsByTagName(\"svg\")[0].getAttribute(\"class\",\"no-animation\")&&document.getElementsByTagName(\"svg\")[0].setAttribute(\"class\",\"animation\")},hello();]]></script>";

  function getPart() external pure returns (string memory) {
    return PART;
  }
  
}