// SPDX-License-Identifier: Unlicense

pragma solidity ^0.8.0;

import "../interfaces/IStructNonceManager.sol";

error StructNonceManager_InvalidState();

/**                       .-==+++++++++++++++++++++++++++++++=-:
                     :=*%##########################################+-
                  .+%##################################################-
                .*######################################################%=
               *##################%*##################*###################%:
             .###################+   :##############+   :###################=
            :####################=    ##############=    ####################*
           .#####################=    ##############=    #####################+
           ######################*   -##############*   -######################
          .#########################%##################%#######################=
          :####################################################################*
          .%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=

       .-+*##############################*-                          .=########*+=.
     -######################################+:                     -###############%=
    *#########################################%=                :+####################
   *##############################################-          .+%######################%
  .##################################################-     =%##########################-
  :####################################################%#%#############################-
   ###################################################################################%
    *#################################################################################
     -#############################################################################%=
        -+*#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%##+=.

          .#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#=
          -####################################################################*
          .####################################################################=
           ####################################################################.
           .##################################################################+
            :################################################################*
             :##############################################################+
              .############################################################-
                :########################################################=
                  :*###################################################=
                     :+###########################################%*-.
                          :-=+******************************++=:.

 * @title Manage struct nonces
 * @author Augminted Labs, LLC
 */
contract StructNonceManager is IStructNonceManager {
    mapping(uint256 => bool) private _nonceConsumed;

    constructor () {}

    /**
     * @notice Returns if a nonce has been consumed
     * @param nonce Nonce to return state of
     * @return bool State of specified nonce
     */
    function nonceConsumed(uint256 nonce) external view returns (bool) {
        return _nonceConsumed[nonce];
    }

    /**
     * @notice Throw if specified nonce is not in specified state
     * @param nonce Target nonce
     * @param consumed Target state
     */
    function requireNonceState(uint256 nonce, bool consumed) external view {
        if (_nonceConsumed[nonce] != consumed) revert StructNonceManager_InvalidState();
    }

    /**
     * @notice Consume specified nonce
     * @param nonce Nonce to consume
     */
    function consumeNonce(uint256 nonce) external payable {
        _nonceConsumed[nonce] = true;
    }
}

// SPDX-License-Identifier: Unlicense

pragma solidity ^0.8.0;

interface IStructNonceManager {
    function nonceConsumed(uint256 nonce) external view returns (bool);
    function requireNonceState(uint256 nonce, bool consumed) external view;
    function consumeNonce(uint256 nonce) external payable;
}